<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <description type="string">Configuration for the PSRC zone project</description>
    <project_name hidden="True" type="string">psrc_zone</project_name>
    <parent type="file">urbansim_zone/configs/urbansim_zone.xml</parent>
    <dataset_pool_configuration type="class">
      <argument name="package_order" type="list">['urbansim_zone', 'urbansim_parcel', 'urbansim', 'opus_core']</argument>
    </dataset_pool_configuration>
    <available_datasets type="list">['job','building','household_x_building','zone','faz','large_area','gridcell','city','county','alldata']</available_datasets>
    <expression_library type="dictionary">
      <variable use="both" source="expression" name="building.ln_developable_non_residential_sqft_capacity" type="variable_definition">ln(urbansim_zone.building.developable_non_residential_sqft_capacity)</variable>
      <variable use="both" source="primary attribute" name="building.avg_year_built" type="variable_definition">building.year_built</variable>
      <variable use="both" source="expression" name="building.ln_developable_residential_units_capacity_units" type="variable_definition">ln(urbansim_zone.building.developable_residential_units_capacity*building.residential_units)</variable>
      <variable use="both" source="expression" name="building.ln_developable_residential_units_capacity" type="variable_definition">ln(urbansim_zone.building.developable_residential_units_capacity)</variable>
      <variable use="model variable" source="expression" name="building.ln_zonal_avg_income" type="variable_definition">ln(building.disaggregate(zone.aggregate(household.income, function=mean, intermediates=[building])))</variable>
      <variable use="both" source="expression" name="building.sector_14_job_fraction" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==14)/zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.sector_13_job_fraction" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==13)/zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.sector_12_job_fraction" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==12)/zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.sector_11_job_fraction" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==11)/zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.sector_10_job_fraction" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==10)/zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.sector_8_job_fraction" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==8)/zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.sector_9_job_fraction" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==9)/zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.sector_7_job_fraction" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==7)/zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.sector_6_job_fraction" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==6)/zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.ln_unit_price" type="variable_definition">ln(building.average_value_per_unit)</variable>
      <variable use="both" source="expression" name="building.sector_5_job_fraction" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==5)/zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.sector_4_job_fraction" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==4)/zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.sector_3_job_fraction" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==3)/zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.sector_2_job_fraction" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==2)/zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.sector_1_job_fraction" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==1)/zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.ln_sector_basic_jobs" type="variable_definition">ln(building.disaggregate(zone.aggregate(job.sector_id&lt;7)))</variable>
      <variable use="both" source="expression" name="building.ln_sector_ret_serv_jobs" type="variable_definition">ln(building.disaggregate(zone.aggregate(job.sector_id&gt;6)))</variable>
      <variable use="both" source="expression" name="building.ln_sector_5_jobs" type="variable_definition">ln(building.disaggregate(zone.aggregate(job.sector_id==5)))</variable>
      <variable use="both" source="expression" name="building.ln_sector_4_jobs" type="variable_definition">ln(building.disaggregate(zone.aggregate(job.sector_id==4)))</variable>
      <variable use="both" source="expression" name="building.ln_sector_3_jobs" type="variable_definition">ln(building.disaggregate(zone.aggregate(job.sector_id==3)))</variable>
      <variable use="both" source="expression" name="building.ln_sector_2_jobs" type="variable_definition">ln(building.disaggregate(zone.aggregate(job.sector_id==2)))</variable>
      <variable use="both" source="expression" name="building.ln_sector_1_jobs" type="variable_definition">ln(building.disaggregate(zone.aggregate(job.sector_id==1)))</variable>
      <variable use="both" source="expression" name="building.avg_hhs" type="variable_definition">building.aggregate(household.persons, function=mean)</variable>
      <variable use="both" source="expression" name="household_x_building.persons_avg_hhs" type="variable_definition">household.persons*building.disaggregate(zone.aggregate(household.persons+0, intermediates=[building], function=mean))</variable>
      <variable use="both" source="expression" name="household_x_building.inc_less_price" type="variable_definition">household.income - (building.average_value_per_unit/10)</variable>
      <variable use="both" source="expression" name="household_x_building.ln_inc_pop_density_zone" type="variable_definition">ln(household.income*building.aggregate(household.persons)/building.disaggregate(zone.aggregate(building.land_area)))</variable>
      <variable use="both" source="expression" name="household_x_building.income_land_per_unit" type="variable_definition">household.income*building.land_area/building.residential_units/1000000</variable>
      <variable use="both" source="expression" name="household_x_building.ln_income_land_per_unit" type="variable_definition">ln(household.income*building.land_area/building.residential_units)</variable>
      <variable use="indicator" source="expression" name="alldata.total_vacant_mf_residential_units_1" type="variable_definition">alldata.aggregate_all(urbansim_zone.building.vacant_residential_units*(building.building_type_id==2))</variable>
      <variable use="indicator" source="expression" name="alldata.total_vacant_sf_residential_units" type="variable_definition">alldata.aggregate_all(urbansim_zone.building.vacant_residential_units*(building.building_type_id==1))</variable>
      <variable use="model variable" source="expression" name="zone.zone_avg_value_per_sqft_industrial" type="variable_definition">zone.aggregate(where(building.building_type_id==5,building.average_value_per_unit,0), function=mean)</variable>
      <variable use="model variable" source="expression" name="zone.zone_avg_value_per_sqft_commercial" type="variable_definition">zone.aggregate(where(building.building_type_id==4,building.average_value_per_unit,0), function=mean)</variable>
      <variable use="model variable" source="expression" name="zone.zone_avg_value_per_sqft_office" type="variable_definition">zone.aggregate(where(building.building_type_id==3,building.average_value_per_unit,0), function=mean)</variable>
      <variable use="both" source="expression" name="None.ln_res_units_x_emp_30_min" type="variable_definition">development_project.residential_units*ln(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone)</variable>
      <variable use="both" source="expression" name="building.ln_sf_unit_price" type="variable_definition">ln(where(building.building_type_id==1,building.average_value_per_unit,0))</variable>
      <variable use="both" source="expression" name="building.ln_mf_unit_price" type="variable_definition">ln(where(building.building_type_id==2,building.average_value_per_unit,0))</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_avg_value_per_sqft_industrial" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==5,building.average_value_per_unit,0), function=mean))</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_avg_value_per_sqft_commercial" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==4,building.average_value_per_unit,0), function=mean))</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_avg_value_per_sqft_office" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==3,building.average_value_per_unit,0), function=mean))</variable>
      <variable use="both" source="expression" name="zone.zone_ln_emp_10_min" type="variable_definition">ln(urbansim_parcel.zone.employment_within_10_minutes_travel_time_hbw_am_drive_alone)</variable>
      <variable use="model variable" source="expression" name="zone.zone_pop_density" type="variable_definition">zone.aggregate(household.persons, intermediates=[building])/zone.totacres</variable>
      <variable use="model variable" source="expression" name="zone.zone_job_density" type="variable_definition">zone.number_of_agents(job)/zone.totacres</variable>
      <variable use="both" source="expression" name="zone.zone_ln_time_cbd" type="variable_definition">ln(zone.travel_time_to_cbd)</variable>
      <variable use="both" source="expression" name="zone.zone_ln_res_units" type="variable_definition">ln(zone.aggregate(building.residential_units))</variable>
      <variable use="both" source="expression" name="zone.zone_ln_emp_15_min" type="variable_definition">ln(urbansim_parcel.zone.employment_within_15_minutes_travel_time_hbw_am_drive_alone)</variable>
      <variable use="both" source="expression" name="None.ln_res_units_x_zone_dev_acre" type="variable_definition">development_project.residential_units*ln(zone.dev_acre)</variable>
      <variable use="both" source="primary attribute" name="zone.zone_time_cbd" type="variable_definition">zone.travel_time_to_cbd</variable>
      <variable use="both" source="expression" name="zone.zone_mf_unit_price" type="variable_definition">zone.aggregate(where(building.building_type_id==2,building.average_value_per_unit,0), function=mean)</variable>
      <variable use="both" source="expression" name="zone.zone_sf_unit_price" type="variable_definition">zone.aggregate(where(building.building_type_id==1,building.average_value_per_unit,0), function=mean)</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_mf_units" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==2,building.residential_units,0)))</variable>
      <variable use="indicator" source="expression" name="zone.zone_avg_cars" type="variable_definition">zone.aggregate(household.cars, intermediates=[building])/zone.number_of_agents(household)</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_avg_income" type="variable_definition">ln_bounded(zone.aggregate(household.income, function=mean, intermediates=[building]))</variable>
      <variable use="both" source="expression" name="zone.zone_ln_emp_30_min" type="variable_definition">ln(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone)</variable>
      <variable use="both" source="expression" name="building.ln_zonal_emp_30_min" type="variable_definition">ln_bounded(building.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_totacres" type="variable_definition">ln(zone.totacres)</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_pop" type="variable_definition">ln(zone.aggregate(household.persons, intermediates=[building]))</variable>
      <variable use="indicator" source="expression" name="zone.zone_tot_cars" type="variable_definition">zone.aggregate(household.cars, intermediates=[building])</variable>
      <variable use="model variable" source="expression" name="zone.zone_tot_income" type="variable_definition">zone.aggregate(household.income, intermediates=[building])</variable>
      <variable use="model variable" source="expression" name="zone.zone_tot_pop" type="variable_definition">zone.aggregate(household.persons, intermediates=[building],)</variable>
      <variable use="both" source="Python class" name="zone.zone_retail_emp_45_min" type="variable_definition">urbansim_parcel.zone.sector_5_employment_within_45_minutes_travel_time_hbw_am_drive_alone</variable>
      <variable use="both" source="Python class" name="zone.zone_retail_emp_30_min" type="variable_definition">urbansim_parcel.zone.sector_5_employment_within_30_minutes_travel_time_hbw_am_drive_alone</variable>
      <variable use="both" source="Python class" name="zone.zone_retail_emp_15_min" type="variable_definition">urbansim_parcel.zone.sector_5_employment_within_15_minutes_travel_time_hbw_am_drive_alone</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_retail_emp_30_min" type="variable_definition">ln(urbansim_parcel.zone.sector_5_employment_within_30_minutes_travel_time_hbw_am_drive_alone)</variable>
      <variable use="model variable" source="expression" name="building.ln_sf_units" type="variable_definition">ln(where(building.building_type_id==1,building.residential_units,0))</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_average_value_per_res_unit" type="variable_definition">ln(zone.aggregate(building.average_value_per_unit*building.disaggregate(building_type.is_residential==1), function=mean))</variable>
      <variable use="model variable" source="Python class" name="zone.zone_retail_emp_30_min" type="variable_definition">urbansim_parcel.zone.sector_5_employment_within_30_minutes_travel_time_hbw_am_drive_alone</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_Rd_density" type="variable_definition">ln(zone.rd_density)</variable>
      <variable use="model variable" source="primary attribute" name="zone.zone_rd_density" type="variable_definition">zone.rd_density</variable>
      <variable use="indicator" source="primary attribute" name="zone.zone_schl_district" type="variable_definition">zone.schl_district</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_average_value_per_sqft" type="variable_definition">ln(zone.aggregate(building.average_value_per_unit*building.disaggregate(building_type.is_residential==0), function=mean))</variable>
      <variable use="model variable" source="Python class" name="zone.zone_services_emp_25_min" type="variable_definition">urbansim_parcel.zone.sector_6_employment_within_25_minutes_travel_time_hbw_am_drive_alone</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_jobs" type="variable_definition">ln(zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.ln_inv_far" type="variable_definition">ln_bounded(safe_array_divide(building.land_area,building.non_residential_sqft))</variable>
      <variable use="both" source="expression" name="building.ln_pop_zone" type="variable_definition">ln(building.disaggregate(zone.aggregate(household.persons, intermediates=[building])))</variable>
      <variable use="both" source="expression" name="building.ln_non_residential_sqft" type="variable_definition">ln(building.non_residential_sqft)</variable>
      <variable use="model variable" source="primary attribute" name="building.unit_price" type="variable_definition">building.average_value_per_unit</variable>
      <variable use="both" source="expression" name="building.is_office" type="variable_definition">building.building_type_id==3</variable>
      <variable use="both" source="expression" name="building.is_mixed_use" type="variable_definition">building.building_type_id==6</variable>
      <variable use="both" source="expression" name="building.is_commercial" type="variable_definition">building.building_type_id==4</variable>
      <variable use="both" source="expression" name="building.is_industrial" type="variable_definition">building.building_type_id==5</variable>
      <variable use="both" source="expression" name="building.is_government" type="variable_definition">building.building_type_id==7</variable>
      <variable use="both" source="expression" name="building.ln_land_per_unit" type="variable_definition">ln_bounded(safe_array_divide(building.land_area,building.residential_units))</variable>
      <variable use="both" source="expression" name="household_x_building.price_income_ratio_l1" type="variable_definition">safe_array_divide(building.average_value_per_unit,household.income)&lt;1</variable>
      <variable use="both" source="expression" name="household_x_building.price_income_ratio_g5" type="variable_definition">safe_array_divide(building.average_value_per_unit,household.income)&gt;5</variable>
      <variable use="both" source="expression" name="None.ln_persons_land_per_unit" type="variable_definition">ln(household.persons*building.land_area/building.residential_units)</variable>
      <variable use="both" source="expression" name="None.ln_persons_sqft_per_unit" type="variable_definition">ln(household.persons*building.sqft_per_unit)</variable>
      <variable use="model variable" source="expression" name="building.ln_avg_hh_income" type="variable_definition">ln(building.aggregate(household.income, function=mean))</variable>
      <variable use="both" source="expression" name="household_x_building.ln_inc_avg_inc" type="variable_definition">ln(household.income*building.disaggregate(zone.aggregate(household.income+0, intermediates=[building], function=mean)))</variable>
      <variable use="both" source="expression" name="building.land_per_unit" type="variable_definition">building.land_area/building.residential_units</variable>
      <variable use="both" source="expression" name="None.persons_land_per_unit" type="variable_definition">household.persons*building.land_area/building.residential_units</variable>
      <variable use="both" source="expression" name="None.ln_income_sqft_per_unit" type="variable_definition">ln(household.income*building.sqft_per_unit)</variable>
      <variable use="model variable" source="expression" name="None.wkrs_hhs_ln_jobs_30_min" type="variable_definition">safe_array_divide(household.workers,household.persons)*ln_bounded(building.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs_within_30_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="household_x_building.persons_sqft_per_unit" type="variable_definition">household.persons*building.sqft_per_unit/10000</variable>
      <variable use="both" source="expression" name="household_x_building.income_sqft_per_unit" type="variable_definition">household.income*building.sqft_per_unit/1000000</variable>
      <variable use="both" source="expression" name="None.price_income_ratio" type="variable_definition">safe_array_divide(building.average_value_per_unit,household.income)</variable>
      <variable use="both" source="expression" name="None.income_single_family" type="variable_definition">household.income/10000*building.building_type_id==1</variable>
      <variable use="both" source="expression" name="None.persons_x_single_family" type="variable_definition">household.persons*building.building_type_id==1</variable>
      <variable use="both" source="expression" name="building.ln_number_jobs_retail" type="variable_definition">ln(building.disaggregate(zone.aggregate(job.sector_id==7)))</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs_within_15_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.employment_within_15_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="building.ln_pop_density_zone" type="variable_definition">ln(building.aggregate(household.persons)/building.disaggregate(zone.aggregate(building.land_area)))</variable>
      <variable use="model variable" source="expression" name="building.cbd_time_sq" type="variable_definition">building.disaggregate(zone.travel_time_to_cbd)**2</variable>
      <variable use="model variable" source="expression" name="building.ln_cbd_time" type="variable_definition">ln(building.disaggregate(zone.travel_time_to_cbd))</variable>
      <variable use="model variable" source="expression" name="building.ln_avg_hh_income_zonal" type="variable_definition">ln(building.disaggregate(zone.aggregate(household.income, function=mean, intermediates=[building])))</variable>
      <variable use="model variable" source="primary attribute" name="building.ln_avg_val_per_unit" type="variable_definition">ln(building.average_value_per_unit)</variable>
      <variable use="model variable" source="expression" name="building.ln_average_value_per_sqft" type="variable_definition">ln_bounded(building.average_value_per_unit*building.disaggregate(building_type.is_residential==0))</variable>
      <variable use="model variable" source="expression" name="building.ln_avg_value_per_sqft_office" type="variable_definition">ln_bounded((building.building_type_id==3)*building.average_value_per_unit)</variable>
      <variable use="model variable" source="expression" name="building.ln_avg_value_per_sqft_com" type="variable_definition">ln_bounded((building.building_type_id==4)*building.average_value_per_unit)</variable>
      <variable use="model variable" source="expression" name="building.ln_avg_value_per_sqft_ind" type="variable_definition">ln_bounded((building.building_type_id==5)*building.average_value_per_unit)</variable>
      <variable use="both" source="expression" name="building.ln_residential_units" type="variable_definition">ln(building.residential_units)</variable>
      <variable use="both" source="expression" name="building.is_multi_family" type="variable_definition">building.building_type_id == 2</variable>
      <variable use="both" source="expression" name="building.is_single_family" type="variable_definition">building.building_type_id == 1</variable>
      <variable use="both" source="expression" name="building.ln_job_density_zone" type="variable_definition">ln(building.disaggregate(zone.number_of_agents(job))/building.disaggregate(zone.aggregate(building.land_area)))</variable>
      <variable use="model variable" source="primary attribute" name="building.avg_value_per_unit" type="variable_definition">building.average_value_per_unit</variable>
      <variable use="model variable" source="expression" name="building.avg_hh_income" type="variable_definition">building.aggregate(household.income, function=mean)</variable>
      <variable use="model variable" source="expression" name="building.avg_hh_income_zonal" type="variable_definition">building.disaggregate(zone.aggregate(household.income, function=mean, intermediates=[building]))</variable>
      <variable use="model variable" source="expression" name="building.inv_jobs" type="variable_definition">safe_array_divide(1,(building.number_of_agents(job)),0)</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs" type="variable_definition">ln(building.number_of_agents(job))</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs_in_zone" type="variable_definition">ln(building.disaggregate(zone.number_of_agents(job)))</variable>
      <variable use="model variable" source="expression" name="building.cbd_time" type="variable_definition">building.disaggregate(zone.travel_time_to_cbd)</variable>
      <variable use="model variable" source="expression" name="building.ln_sf_units" type="variable_definition">ln_bounded((building.building_type_id==1)*building.residential_units)</variable>
      <variable use="both" source="expression" name="building.ln_sf_unit_price" type="variable_definition">ln_bounded((building.building_type_id==1)*building.average_value_per_unit)</variable>
      <variable use="model variable" source="expression" name="building.ln_mf_units" type="variable_definition">ln_bounded((building.building_type_id==2)*building.residential_units)</variable>
      <variable use="both" source="expression" name="building.ln_mf_unit_price" type="variable_definition">ln_bounded((building.building_type_id==2) * building.average_value_per_unit)</variable>
      <variable use="model variable" source="expression" name="building.ln_zonal_avg_income" type="variable_definition">ln_bounded(building.disaggregate(zone.aggregate(household.income, function=mean)))</variable>
    </expression_library>
  </general>
  <model_manager>
    <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model name="home_based_employment_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <group_by_attribute type="list">('home_based_status', 'name')</group_by_attribute>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.employment_location_choice_model</class_module>
            <class_name>EmploymentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <argument name="agents_grouping_attribute" parser_action="quote_string" type="string">job.home_based_status</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="number_of_units_string" type="string"/>
            <argument name="compute_capacity_flag" type="boolean">True</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">urbansim_zone.building.vacant_SSS_job_spaces</argument>
            <argument convert_blank_to_none="True" name="estimation_weight_string" parser_action="quote_string" type="string">urbansim_zone.building.total_SSS_job_spaces</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="filter" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim_zone</argument>
            <argument name="run_config" type="dictionary">
              <key name="lottery_max_iterations" type="integer">3</key>
              <key convert_blank_to_none="True" parser_action="quote_string" name="agent_units_string" type="string"/>
            </argument>
            <argument name="location_set" type="string">building</argument>
            <argument name="estimation_size_agents" type="float">1.0</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">urbansim_zone.building.vacant_residential_units&gt;0</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="sample_size_locations" type="integer">30</argument>
            <name name="name" type="string">EmploymentLocationChoiceModel</name>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">employment_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">employment_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="agent_set" type="string">job</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
            <argument name="agents_index" type="string">erm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="integer">0</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">employment_location_choice_model_specification</argument>
            <argument name="agent_set" type="string">job</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string"/>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string"/>
            <argument name="join_datasets" type="boolean">False</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">job</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
        </structure>
        <specification type="dictionary">
          <submodel_group name="home_based" type="submodel_group">
            <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.is_multi_family"/>
                <variable_spec name="building.ln_avg_hh_income"/>
                <variable_spec name="building.ln_avg_val_per_unit"/>
                <variable_spec name="building.ln_jobs"/>
                <variable_spec name="building.ln_pop_density_zone"/>
                <variable_spec name="building.ln_residential_units"/>
              </variable_list>
            </submodel>
          </submodel_group>
        </specification>
      </model>
      <model name="employment_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="estimation_weight_string" parser_action="quote_string" type="string">urbansim_zone.building.total_SSS_job_spaces</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string"/>
          </init>
          <prepare_for_estimate type="dictionary">
            <argument name="join_datasets" type="boolean">True</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel_group name="non_home_based" type="submodel_group">
            <submodel hidden="Children" name="Mining" submodel_id="1" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.ln_job_density_zone"/>
                <variable_spec name="building.ln_sector_basic_jobs"/>
                <variable_spec name="building.ln_sector_ret_serv_jobs"/>
                <variable_spec name="building.ln_unit_price"/>
                <variable_spec name="building.sector_1_job_fraction"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Construction" submodel_id="2" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.is_commercial"/>
                <variable_spec name="building.is_industrial"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.ln_job_density_zone"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.ln_pop_density_zone"/>
                <variable_spec name="building.ln_sector_basic_jobs"/>
                <variable_spec name="building.ln_unit_price"/>
                <variable_spec name="building.sector_2_job_fraction"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Aerospace" submodel_id="3" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.is_commercial"/>
                <variable_spec name="building.is_industrial"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.ln_job_density_zone"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.ln_sector_basic_jobs"/>
                <variable_spec name="building.sector_3_job_fraction"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Durable goods" submodel_id="4" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.is_commercial"/>
                <variable_spec name="building.is_industrial"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.ln_avg_hh_income_zonal"/>
                <variable_spec name="building.ln_job_density_zone"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.ln_pop_density_zone"/>
                <variable_spec name="building.ln_sector_basic_jobs"/>
                <variable_spec name="building.sector_4_job_fraction"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Non-durable goods" submodel_id="5" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.is_commercial"/>
                <variable_spec name="building.is_industrial"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.ln_avg_hh_income_zonal"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.ln_pop_density_zone"/>
                <variable_spec name="building.ln_sector_basic_jobs"/>
                <variable_spec name="building.ln_unit_price"/>
                <variable_spec name="building.sector_5_job_fraction"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Whole sale trade" submodel_id="6" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.is_commercial"/>
                <variable_spec name="building.is_industrial"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.ln_job_density_zone"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Transportation" submodel_id="8" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.is_commercial"/>
                <variable_spec name="building.is_government"/>
                <variable_spec name="building.is_industrial"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.ln_avg_hh_income_zonal"/>
                <variable_spec name="building.ln_job_density_zone"/>
                <variable_spec name="building.ln_jobs_within_30_min"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.ln_sector_basic_jobs"/>
                <variable_spec name="building.ln_unit_price"/>
                <variable_spec name="building.sector_8_job_fraction"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Telecommunication" submodel_id="10" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.is_commercial"/>
                <variable_spec name="building.is_industrial"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.ln_avg_hh_income_zonal"/>
                <variable_spec name="building.ln_job_density_zone"/>
                <variable_spec name="building.ln_jobs_within_30_min"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.ln_sector_basic_jobs"/>
                <variable_spec name="building.ln_sector_ret_serv_jobs"/>
                <variable_spec name="building.ln_unit_price"/>
                <variable_spec name="building.sector_10_job_fraction"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Other Information" submodel_id="11" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.is_commercial"/>
                <variable_spec name="building.is_government"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.ln_avg_hh_income_zonal"/>
                <variable_spec name="building.ln_job_density_zone"/>
                <variable_spec name="building.ln_jobs_within_30_min"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.ln_pop_density_zone"/>
                <variable_spec name="building.ln_sector_basic_jobs"/>
                <variable_spec name="building.ln_unit_price"/>
                <variable_spec name="building.sector_11_job_fraction"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Financial Activities" submodel_id="12" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.is_commercial"/>
                <variable_spec name="building.is_government"/>
                <variable_spec name="building.is_industrial"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.ln_job_density_zone"/>
                <variable_spec name="building.ln_jobs_within_30_min"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Professional services" submodel_id="13" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.is_commercial"/>
                <variable_spec name="building.is_industrial"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.ln_job_density_zone"/>
                <variable_spec name="building.ln_jobs_within_30_min"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.ln_pop_density_zone"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Food services" submodel_id="14" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.is_commercial"/>
                <variable_spec name="building.is_government"/>
                <variable_spec name="building.is_industrial"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.ln_job_density_zone"/>
                <variable_spec name="building.ln_jobs_within_30_min"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.ln_sector_basic_jobs"/>
                <variable_spec name="building.ln_sector_ret_serv_jobs"/>
                <variable_spec name="building.sector_14_job_fraction"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Retail" submodel_id="7" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.is_commercial"/>
                <variable_spec name="building.is_industrial"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.ln_job_density_zone"/>
                <variable_spec name="building.ln_jobs_within_30_min"/>
                <variable_spec name="building.ln_pop_density_zone"/>
              </variable_list>
            </submodel>
          </submodel_group>
        </specification>
      </model>
      <model name="household_location_choice_model_nl" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':3}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim_zone</argument>
            <argument convert_blank_to_none="True" name="location_id_string" type="string"/>
            <argument convert_blank_to_none="True" name="submodel_string" type="string"/>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="filter" type="string"/>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 3, 
                'capacity_string': 'urbansim_zone.building.vacant_residential_units',
                'compute_capacity_flag': True})</argument>
            <argument name="location_set" type="string">building</argument>
            <argument convert_blank_to_none="True" name="sampler" parser_action="quote_string" type="string">opus_core.samplers.stratified_sampler</argument>
            <argument name="sampler_size" type="integer">30</argument>
            <argument name="estimate_config" type="string">Resources({})</argument>
            <name name="name" type="string">AgentHierarchicalLocationChoiceModel</name>
            <argument convert_blank_to_none="True" name="stratum" parser_action="quote_string" type="string">building.building_type_id*building.disaggregate(building_type.is_residential)*(building.residential_units&gt;0)</argument>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.agent_hierarchical_location_choice_model</class_module>
            <class_name>AgentHierarchicalLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bfgs_nl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">household_location_choice_model_nl_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_nl_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_nl_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string">"household.move==1"</argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel name="no submodel" submodel_id="-2" type="submodel" hidden="Children">
            <description type="string">submodel1</description>
            <variable_list type="variable_list">
              <variable_spec name="building.is_single_family"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="None.ln_persons_sqft_per_unit"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="None.price_income_ratio_g5"/>
              <variable_spec name="None.price_income_ratio_l1"/>
              <variable_spec name="None.wkrs_hhs_ln_jobs_30_min"/>
              <variable_spec name="building.is_multi_family"/>
            </variable_list>
            <nest nest_id="1" name="single_family" number_of_samples="30">
              <equation equation_id="-2" name="buildings">
                <variable_list type="variable_list">
                  <variable_spec name="__logsum_1" keep_fixed="True" starting_value="0.9"/>
                  <variable_spec name="household_x_building.inc_less_price"/>
                  <variable_spec name="building.is_single_family"/>
                  <variable_spec name="building.ln_residential_units"/>
                </variable_list>
              </equation>
            </nest>
            <nest nest_id="2" name="multi_family" number_of_samples="30">
              <equation equation_id="-2" name="buildings">
                <variable_list type="variable_list">
                  <variable_spec name="household_x_building.inc_less_price"/>
                  <variable_spec name="building.ln_residential_units"/>
                </variable_list>
              </equation>
            </nest>
          </submodel>
        </specification>
      </model>
      <model name="household_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <init type="dictionary">
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">building.residential_units&gt;0</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">urbansim_zone.building.vacant_residential_units&gt;0</argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <argument name="index_to_unplace" type="string">None</argument>
            <argument convert_blank_to_none="True" name="filter" type="string">'household.move==1'</argument>
            <argument name="join_datasets" type="boolean">True</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel name="submodel" submodel_id="1" type="submodel" hidden="Children">
            <description type="string">submodel1</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_building.ln_inc_avg_inc"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="household_x_building.persons_avg_hhs"/>
              <variable_spec name="None.price_income_ratio"/>
              <variable_spec name="household_x_building.price_income_ratio_g5"/>
              <variable_spec name="household_x_building.price_income_ratio_l1"/>
              <variable_spec name="None.wkrs_hhs_ln_jobs_30_min"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="residential_development_project_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">['real_estate_price_model']</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'records_per_chunk':5000}</argument>
          </run>
          <init type="dictionary">
            <argument name="filter" parser_action="quote_string" type="string">(building.building_type_id==SUBMODEL)*(urbansim_zone.building.residential_units_capacity&gt;0)</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="run_config" type="dictionary">
              <key name="compute_capacity_flag" type="boolean">True</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <argument name="agents_filter" parser_action="quote_string" type="string">numpy.logical_and(development_project.disaggregate(building_type.is_residential), development_project.scheduled_year&lt;=2000)</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="sf_residential" submodel_id="1" type="submodel">
            <description type="string">sf residential</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.avg_year_built"/>
              <variable_spec name="building.ln_developable_residential_units_capacity"/>
              <variable_spec name="building.ln_sf_unit_price"/>
              <variable_spec name="building.ln_sf_units"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="mf_residential" submodel_id="2" type="submodel">
            <description type="string">mf residential</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_year_built"/>
              <variable_spec name="building.ln_developable_residential_units_capacity_units"/>
              <variable_spec name="building.ln_mf_unit_price"/>
              <variable_spec name="building.ln_mf_units"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="non_residential_development_project_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">['real_estate_price_model']</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'records_per_chunk':5000}</argument>
          </run>
          <init type="dictionary">
            <argument name="filter" parser_action="quote_string" type="string">(building.building_type_id==SUBMODEL)*(urbansim_zone.building.non_residential_sqft_capacity&gt;0)</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="run_config" type="dictionary">
              <key name="compute_capacity_flag" type="boolean">True</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <argument name="agents_filter" parser_action="quote_string" type="string">numpy.logical_and(development_project.disaggregate(building_type.is_residential==0), development_project.scheduled_year&lt;=2000)</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="office" submodel_id="3" type="submodel">
            <description type="string">office</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_avg_value_per_sqft_office"/>
              <variable_spec name="building.ln_non_residential_sqft"/>
              <variable_spec name="building.ln_zonal_avg_income"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="commercial" submodel_id="4" type="submodel">
            <description type="string">retail</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_avg_value_per_sqft_com"/>
              <variable_spec name="building.ln_developable_non_residential_sqft_capacity"/>
              <variable_spec name="building.ln_non_residential_sqft"/>
              <variable_spec name="building.ln_zonal_avg_income"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial" submodel_id="5" type="submodel">
            <description type="string">warehouse</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_avg_value_per_sqft_ind"/>
              <variable_spec name="building.ln_developable_non_residential_sqft_capacity"/>
              <variable_spec name="building.ln_non_residential_sqft"/>
              <variable_spec name="building.ln_zonal_avg_income"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="mixed_use" submodel_id="6" type="submodel">
            <description type="string">mixed_use</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.ln_non_residential_sqft"/>
              <variable_spec name="building.ln_zonal_avg_income"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="government" submodel_id="7" type="submodel">
            <description type="string">government</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.ln_non_residential_sqft"/>
              <variable_spec name="building.ln_zonal_avg_income"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="development_project_transition_model" type="model">
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="target_attribute_name" parser_action="quote_string" type="string">target_vacancy_rate</argument>
          </run>
        </structure>
      </model>
      <model name="real_estate_price_model" type="model">
        <structure type="dictionary">
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="filter_attribute" type="string"/>
          </init>
          <prepare_for_estimate type="dictionary">
            <argument convert_blank_to_none="True" name="filter_variable" type="string">'building.average_value_per_unit&gt;0'</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="sf residential" submodel_id="1" type="submodel">
            <description type="string">SF Residential</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_land_per_unit"/>
              <variable_spec name="building.ln_pop_density_zone"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="building.ln_sector_ret_serv_jobs"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="mf residential" submodel_id="2" type="submodel">
            <description type="string">MF Residential</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_pop_density_zone"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="building.ln_sector_ret_serv_jobs"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="office" submodel_id="3" type="submodel">
            <description type="string">Office</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_inv_far"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_non_residential_sqft"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="commercial" submodel_id="4" type="submodel">
            <description type="string">Commercial</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_inv_far"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_non_residential_sqft"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial" submodel_id="5" type="submodel">
            <description type="string">Industrial</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_inv_far"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_non_residential_sqft"/>
              <variable_spec name="building.ln_sector_basic_jobs"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="mixed use" submodel_id="6" type="submodel">
            <description type="string">mixed use</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_non_residential_sqft"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="governmental" submodel_id="7" type="submodel">
            <description type="string">Governmental</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income_zonal"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_non_residential_sqft"/>
              <variable_spec name="building.ln_pop_density_zone"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="other" submodel_id="8" type="submodel">
            <description type="string">Other</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_inv_far"/>
              <variable_spec name="building.ln_non_residential_sqft"/>
              <variable_spec name="building.ln_sector_ret_serv_jobs"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
    </models>
    <estimation_config config_name="estimation_config" name="Estimation Configuration" type="configuration">
      <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
        <selectable name="household" type="selectable">True</selectable>
        <selectable name="zone" type="selectable">True</selectable>
        <selectable name="building" type="selectable">True</selectable>
        <selectable name="parcel" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
        </selectable>
        <selectable name="person" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
        </selectable>
        <selectable name="job" type="selectable">True</selectable>
      </datasets_to_preload>
      <save_estimation_results type="boolean">True</save_estimation_results>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory">psrc_zone/base_year_data</cache_directory>
      <estimation_database_configuration type="class">
        <class_name hidden="True" type="string">EstimationDatabaseConfiguration</class_name>
        <class_module hidden="True" type="string">opus_core.database_management.configurations.estimation_database_configuration</class_module>
        <argument name="database_name" type="string"/>
      </estimation_database_configuration>
      <dataset_pool_configuration type="class">
        <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
        <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
        <argument name="package_order" type="list">['psrc_zone', 'urbansim_zone', 'urbansim', 'opus_core']</argument>
      </dataset_pool_configuration>
      <datasets_to_cache_after_each_model type="list">[]</datasets_to_cache_after_each_model>
      <low_memory_mode type="boolean">False</low_memory_mode>
      <base_year type="integer">2000</base_year>
      <years type="tuple">
        <firstyear type="integer">2000</firstyear>
        <lastyear type="integer">2000</lastyear>
      </years>
    </estimation_config>
  </model_manager>
  <scenario_manager followers="debuglevel,base_year,cache_directory">
    <scenario copyable="True" executable="True" name="psrc_zone_baseline" type="scenario">
      <models_to_run config_name="models" type="selectable_list">
        <selectable name="real_estate_price_model" type="selectable">True</selectable>
        <selectable name="development_project_transition_model" type="selectable">True</selectable>
        <selectable name="residential_development_project_location_choice_model" type="selectable">True</selectable>
        <selectable name="non_residential_development_project_location_choice_model" type="selectable">True</selectable>
        <selectable name="add_projects_to_buildings" type="selectable">True</selectable>
        <selectable name="household_transition_model" type="selectable">True</selectable>
        <selectable name="employment_transition_model" type="selectable">True</selectable>
        <selectable name="household_relocation_model" type="selectable">True</selectable>
        <selectable name="household_location_choice_model" type="selectable">True</selectable>
        <selectable type="selectable" name="household_location_choice_model_nl">False</selectable>
        <selectable name="employment_relocation_model" type="selectable">True</selectable>
        <selectable name="employment_location_choice_model" type="selectable">True
          <group_members type="string">_all_</group_members>
        </selectable>
        <selectable name="distribute_unplaced_jobs_model" type="selectable">True</selectable>
      </models_to_run>
      <model_system type="string">urbansim.model_coordinators.model_system</model_system>
      <base_year type="integer">2000</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2001</firstyear>
        <lastyear type="integer">2003</lastyear>
      </years_to_run>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory">psrc_zone/base_year_data</cache_directory>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfiguration</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">psrc_zone/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">psrc_zone/base_year_data</argument>
        </argument>
        <argument hidden="True" name="unroll_gridcells" type="boolean">False</argument>
        <argument name="advanced" type="category">
          <baseyear_database_configuration config_name="scenario_database_configuration" type="class">
            <class_name hidden="True" type="string">ScenarioDatabaseConfiguration</class_name>
            <class_module hidden="True" type="string">opus_core.database_management.configurations.scenario_database_configuration</class_module>
            <argument name="database_name" type="string">urbansim</argument>
          </baseyear_database_configuration>
          <cache_from_database type="boolean">False</cache_from_database>
          <cache_scenario_database type="string">urbansim.model_coordinators.cache_scenario_database</cache_scenario_database>
          <tables_to_cache type="selectable_list">
            <selectable name="annual_employment_control_totals" type="selectable">True</selectable>
            <selectable name="annual_household_control_totals" type="selectable">True</selectable>
            <selectable name="annual_relocation_rates_for_households" type="selectable">True</selectable>
            <selectable name="annual_relocation_rates_for_jobs" type="selectable">True</selectable>
            <selectable name="building_sqft_per_job" type="selectable">True</selectable>
            <selectable name="building_types" type="selectable">True</selectable>
            <selectable name="buildings" type="selectable">True</selectable>
            <selectable name="cities" type="selectable">True</selectable>
            <selectable name="counties" type="selectable">True</selectable>
            <selectable name="development_constraints" type="selectable">True</selectable>
            <selectable name="employment_adhoc_sector_group_definitions" type="selectable">True</selectable>
            <selectable name="employment_adhoc_sector_groups" type="selectable">True</selectable>
            <selectable name="employment_sectors" type="selectable">True</selectable>
            <selectable name="home_based_employment_location_choice_model_coefficients" type="selectable">True</selectable>
            <selectable name="home_based_employment_location_choice_model_specification" type="selectable">True</selectable>
            <selectable name="household_characteristics_for_ht" type="selectable">True</selectable>
            <selectable name="household_location_choice_model_coefficients" type="selectable">True</selectable>
            <selectable name="household_location_choice_model_specification" type="selectable">True</selectable>
            <selectable name="households" type="selectable">True</selectable>
            <selectable name="households_for_estimation" type="selectable">True</selectable>
            <selectable name="jobs" type="selectable">True</selectable>
            <selectable name="jobs_for_estimation" type="selectable">False</selectable>
            <selectable name="non_home_based_employment_location_choice_model_coefficients" type="selectable">True</selectable>
            <selectable name="non_home_based_employment_location_choice_model_specification" type="selectable">True</selectable>
            <selectable name="race_names" type="selectable">True</selectable>
            <selectable name="real_estate_price_model_coefficients" type="selectable">True</selectable>
            <selectable name="real_estate_price_model_specification" type="selectable">True</selectable>
            <selectable name="target_vacancies" type="selectable">True</selectable>
            <selectable name="travel_data" type="selectable">True</selectable>
            <selectable name="urbansim_constants" type="selectable">True</selectable>
            <selectable name="zones" type="selectable">True</selectable>
          </tables_to_cache>
          <tables_to_cache_nchunks type="dictionary">
            <parcels type="integer">1</parcels>
          </tables_to_cache_nchunks>
        </argument>
      </creating_baseyear_cache_configuration>
      <advanced type="category">
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">['urbansim_zone', 'urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
        <flush_dataset_to_cache_after_each_model type="boolean">False</flush_dataset_to_cache_after_each_model>
        <flush_variables type="boolean">False</flush_variables>
        <low_memory_run type="boolean">False</low_memory_run>
        <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
          <selectable name="zone" type="selectable">True</selectable>
          <selectable name="household" type="selectable">True</selectable>
          <selectable name="building" type="selectable">True</selectable>
          <selectable name="parcel" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="person" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="job" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="travel_data" type="selectable">True</selectable>
          <selectable name="target_vacancy" type="selectable">True</selectable>
          <selectable name="development_event_history" type="selectable">True</selectable>
          <selectable name="home_based_status" type="selectable">True</selectable>
        </datasets_to_preload>
      </advanced>
      <travel_model_configuration type="dictionary">
        <travel_model_base_directory type="string">baseline_travel_model_psrc_2008</travel_model_base_directory>
        <emme2_batch_file_name type="string">MODEL1-0.BAT</emme2_batch_file_name>
        <models type="selectable_list">
          <selectable name="opus_emme2.models.get_cache_data_into_emme2" type="selectable">False</selectable>
          <selectable name="opus_emme2.models.run_travel_model" type="selectable">False</selectable>
          <selectable name="opus_emme2.models.run_export_macros" type="selectable">False</selectable>
          <selectable name="opus_emme2.models.get_emme2_data_into_cache" type="selectable">False</selectable>
        </models>
      </travel_model_configuration>
    </scenario>
  </scenario_manager>
  <results_manager>
    <indicator_batches name="Indicator Batches" setexpanded="True" type="group">
      <indicator_batch name="zone_indicator_batch" type="indicator_batch">
        <batch_visualization hidden="Children" type="batch_visualization" name="New visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['zone_retail_emp_30_min']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="untitled_indicator_batch" type="indicator_batch">
        <batch_visualization hidden="Children" type="batch_visualization" name="Aggregate Indicators">
          <indicators>['total_vacant_sf_residential_units']</indicators>
          <output_type>tab</output_type>
          <settings>
            <setting name="output_style">1</setting>
          </settings>
          <dataset_name>alldata</dataset_name>
          <visualization_type>tab</visualization_type>
        </batch_visualization>
      </indicator_batch>
    </indicator_batches>
    <simulation_runs name="Simulation Runs" setexpanded="True" type="all_source_data">
      <run hidden="Children" type="source_data" name="base_year_data" run_id="1">
        <scenario_name type="string"/>
        <cache_directory type="string">/Users/pwaddell/opus/data/psrc_zone/base_year_data</cache_directory>
        <start_year type="integer">2000</start_year>
        <end_year type="integer">2000</end_year>
      </run>
    </simulation_runs>
  </results_manager>
</opus_project>

