<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <description type="string">Base UrbanSim project</description>
    <project_name hidden="True" type="string">urbansim</project_name>
    <available_datasets type="list">[]</available_datasets>
    <expression_library type="dictionary"/>
  </general>
  <model_manager>
    <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model name="fertility_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.fertility_model</class_module>
            <class_name>FertilityModel</class_name>
          </import>
          <init type="dictionary">
            <argument name="probabilities" parser_action="quote_string" type="string">urbansim.fertility_probabilities</argument>
            <argument name="location_id_name" parser_action="quote_string" type="string">person_id</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <name name="name" type="string">FertilityModel</name>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">fm_resources</output>
            <argument name="rate_storage" type="string">base_cache_storage</argument>
            <argument name="rate_table" parser_action="quote_string" type="string">annual_fertility_rates</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <output name="output" type="string">fertility_index</output>
            <argument name="resources" type="string">fm_resources</argument>
            <argument name="person_set" type="string">person</argument>
            <argument name="household_set" type="string">household</argument>
          </run>
        </structure>
      </model>
      <model name="mortality_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.mortality_model</class_module>
            <class_name>MortalityModel</class_name>
          </import>
          <init type="dictionary">
            <argument name="probabilities" parser_action="quote_string" type="string">urbansim.mortality_probabilities</argument>
            <argument name="location_id_name" parser_action="quote_string" type="string">person_id</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <name name="name" type="string">MortalityModel</name>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">mm_resources</output>
            <argument name="rate_storage" type="string">base_cache_storage</argument>
            <argument name="rate_table" parser_action="quote_string" type="string">annual_mortality_rates</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <output name="output" type="string">mortality_index</output>
            <argument name="resources" type="string">mm_resources</argument>
            <argument name="person_set" type="string">person</argument>
            <argument name="household_set" type="string">household</argument>
          </run>
        </structure>
      </model>    
     <model name="refinement_model" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim.models.refinement_model</class_module>
            <class_name>RefinementModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">RefinementModel</name>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument name="refinement_dataset_name" parser_action="quote_string" type="string">refinement</argument>
            <argument name="refinement_storage" type="string">base_cache_storage</argument>
            <argument name="refinement_table_name" parser_action="quote_string" type="string">refinements</argument>
            <output hidden="True" name="output" type="string">refinement</output>
          </prepare_for_run>
          <run type="dictionary">
            <name hidden="True" name="name" type="string">run</name>
            <argument name="refinement_dataset" type="string">refinement</argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
          </run>
        </structure>
    </model>
  </models>
    <templates hidden="True" name="Model Templates" parser_action="skip">
      <model_template name="simple_model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.simple_model</class_module>
            <class_name type="string">SimpleModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">SimpleModel</name>
          </init>
          <run type="dictionary">
            <argument field_data_type="dataset" field_identifier="Dataset" name="dataset" type="string"/>
            <argument field_identifier="Expression" name="expression" parser_action="quote_string" type="string"/>
            <argument convert_blank_to_none="True" field_identifier="Outcome Attribute" name="outcome_attribute" parser_action="quote_string" type="string"/>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </run>
        </structure>
        <specification type="dictionary"/>
      </model_template>
      <model_template name="choice_model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.choice_model</class_module>
            <class_name type="string">ChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">ChoiceModel</name>
            <argument field_identifier="Choice Set" name="choice_set" type="string"/>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices</argument>
            <argument convert_blank_to_none="True" field_description="test description" field_identifier="Submodel String" name="submodel_string" type="string"/>
            <argument field_identifier="Choice Attribute Name" name="choice_attribute_name" parser_action="quote_string" type="string">choice_id</argument>
            <argument name="interaction_pkg" parser_action="quote_string" type="string">opus_core</argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"/>
            <argument name="estimate_config" type="dictionary">
              <key field_identifier="Estimation Size Agents" name="estimation_size_agents" type="float">1.0</key>
            </argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument field_identifier="Agent Set" name="agent_set" type="string"/>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument convert_blank_to_none="True" name="chunk_specification" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(specification, coefficients, cm_index)</output>
            <argument convert_blank_to_none="True" field_identifier="Agent Set" name="agent_set" type="string"/>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string"/>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument field_data_type="specification_table" field_identifier="spectable" name="specification_table" parser_action="quote_string" type="string"/>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument field_data_type="coefficients_table" field_identifier="coefftable" name="coefficients_table" parser_action="quote_string" type="string"/>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
          </prepare_for_run>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, dummy)</output>
            <argument name="specification" type="string">specification</argument>
            <argument field_identifier="Agent Set" name="agent_set" type="string"/>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(specification, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string"/>
            <argument convert_blank_to_none="True" field_identifier="Agent Filter" name="agent_filter" parser_action="quote_string" type="string"/>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">choice_model_template_specification</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <equation equation_id="1" name="Choice 1" type="submodel_equation">
              <variable_list type="variable_list">
                <variable_spec name="constant"/>
              </variable_list>
            </equation>
            <equation equation_id="2" name="Choice 2" type="submodel_equation">
              <variable_list type="variable_list"/>
            </equation>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model_template>
      <model_template name="regression_model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.regression_model</class_module>
            <class_name type="string">RegressionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">RegressionModel</name>
            <argument name="regression_procedure" parser_action="quote_string" type="string">opus_core.linear_regression</argument>
            <argument convert_blank_to_none="True" name="submodel_string" type="string"/>
            <argument convert_blank_to_none="True" name="run_config" type="string"/>
            <argument convert_blank_to_none="True" name="estimate_config" type="string"/>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument field_data_type="dataset" field_identifier="Dataset" name="dataset" type="string"/>
            <argument convert_blank_to_none="True" hidden="True" name="index" type="string">rm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument convert_blank_to_none="True" name="dataset" type="string"/>
            <argument convert_blank_to_none="True" name="dataset_filter" parser_action="quote_string" type="string"/>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument field_data_type="specification_table" field_identifier="Specification Table" name="specification_table" parser_action="quote_string" type="string"/>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument field_data_type="coefficients_table" field_identifier="Coefficients Table" name="coefficients_table" parser_action="quote_string" type="string"/>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
            <output name="output" type="string">(specification, coefficients, rm_index)</output>
          </prepare_for_run>
          <estimate type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument field_identifier="Dataset" name="dataset" type="string"/>
            <argument config_name="outcome_attribute" field_data_type="model_variable" field_identifier="Dependent Variable" name="dependent_variable" parser_action="quote_string" type="string"/>
            <argument convert_blank_to_none="True" name="index" type="string">rm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.estimate_linear_regression</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <output name="output" type="string">(coefficients, dummy)</output>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <argument convert_blank_to_none="True" name="dataset" type="string"/>
            <argument convert_blank_to_none="True" name="dataset_filter" parser_action="quote_string" type="string"/>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">regression_model_template_specification</argument>
            <output name="output" type="string">(specification, rm_index)</output>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="Submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
                <variable_spec name="constant"/>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model_template>
      <model_template name="agent_location_choice_model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument field_identifier="Location Set" name="location_set" type="string"/>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument convert_blank_to_none="True" field_identifier="Filter" name="filter" parser_action="quote_string" type="string"/>
            <argument convert_blank_to_none="True" field_identifier="Submodel String" name="submodel_string" parser_action="quote_string" type="string"/>
            <argument convert_blank_to_none="True" field_identifier="Location ID String" name="location_id_string" parser_action="quote_string" type="string"/>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">AgentLocationChoiceModel</argument>
            <argument field_identifier="Short Name" name="short_name" parser_action="quote_string" type="string">ALCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" name="capacity_string" parser_action="quote_string" type="string"/>
              <key convert_blank_to_none="True" name="number_of_units_string" parser_action="quote_string" type="string"/>
              <key convert_blank_to_none="True" name="number_of_agents_string" parser_action="quote_string" type="string"/>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" name="weights_for_estimation_string" parser_action="quote_string" type="string"/>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument field_data_type="specification_table" field_identifier="Specification Table" name="specification_table" parser_action="quote_string" type="string"/>
            <argument field_identifier="Agent Set" name="agent_set" type="string"/>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument field_identifier="Agents for Estimation Table" name="agents_for_estimation_table" parser_action="quote_string" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"/>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" field_identifier="Filter" name="filter" parser_action="quote_string" type="string"/>
            <argument convert_blank_to_none="True" field_identifier="Location ID String" name="location_id_variable" parser_action="quote_string" type="string"/>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument field_identifier="Agent Set" name="agent_set" type="string"/>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument field_data_type="coefficients_table" field_identifier="Coefficients Table" name="coefficients_table" parser_action="quote_string" type="string"/>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument field_data_type="specification_table" field_identifier="Specification Table" name="specification_table" parser_action="quote_string" type="string"/>
          </prepare_for_run>
          <run type="dictionary">
            <argument field_identifier="Agent Set" name="agent_set" type="string">fill in</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string"/>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list"/>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model_template>
      <model_template name="allocation_model_template">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.allocation_model</class_module>
            <class_name type="string">AllocationModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AllocationModel</name>
          </init>
          <run type="dictionary">
            <argument field_data_type="dataset" field_identifier="Dataset" name="dataset" type="string"/>
            <argument field_identifier="Outcome Variable" name="outcome_attribute" parser_action="quote_string" type="string"/>
            <argument field_identifier="Weight Attribute" name="weight_attribute" parser_action="quote_string" type="string"/>
            <argument name="control_totals" type="string">cts</argument>
            <argument name="current_year" type="string">year</argument>
            <argument field_identifier="Control Total Attribute" name="control_total_attribute" parser_action="quote_string" type="string"/>
            <argument field_identifier="Year Attribute" name="year_attribute" parser_action="quote_string" type="string">year</argument>
            <argument field_identifier="Capacity Attribute" convert_blank_to_none="True" name="capacity_attribute" parser_action="quote_string" type="string"/>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">cts</output>
            <argument name="storage" type="string">base_cache_storage</argument>
            <argument field_identifier="Control Totals Table Name" name="control_totals_table_name" parser_action="quote_string" type="string"/>
            <argument name="control_totals_id_name" type="list">['year']</argument>
            <argument name="control_totals_dataset_name" parser_action="quote_string" type="string">control_totals</argument>
          </prepare_for_run>
        </structure>
      </model_template>
      <model_template name="iterative_meta_model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">opus_core.iterative_meta_model</class_module>
            <class_name type="string">IterativeMetaModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">IterativeMetaModel</name>
            <argument name="models" type="list" field_identifier="List of models">['my_model']</argument>
            <argument name="configuration" type="string" hidden="True">resources</argument>
            <argument name='datasets_to_preload' type='list' field_identifier="List of dataset names" convert_blank_to_none="True"/>
          </init>
          <run type="dictionary">
            <argument name="year" type="string" hidden="True">year</argument>
            <argument name="condition" field_identifier="Convergence condition (expression)" parser_action="quote_string" type="string" convert_blank_to_none="True"/>
            <argument name="max_iter" type="integer" convert_blank_to_none="True" field_identifier="Maximum number of iterations">10</argument>
          </run>
        </structure>
      </model_template>
    </templates>
  </model_manager>
  <data_manager>
    <tool_library setexpanded="True">
      <tool_group name="synthesizer_tools" setexpanded="True">
        <tool name="import_raw_pums_data_to_db">
          <class_module>synthesizer_import_raw_pums_data_to_db</class_module>
          <params>
            <param name="raw_pums_file_path" param_type="file_path" required="True"/>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="database_name" param_type="string" required="True"/>
          </params>
        </tool>
        <tool name="delete_empty_households_from_raw_pums_data">
          <class_module>synthesizer_delete_empty_households_from_raw_pums_data</class_module>
          <params>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="database_name" param_type="string" required="True"/>
          </params>
        </tool>
        <tool name="create_households_input_table">
          <class_module>synthesizer_create_households_input_table</class_module>
          <params>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="database_name" param_type="string" required="True"/>
          </params>
        </tool>
        <tool name="create_persons_input_table">
          <class_module>synthesizer_create_persons_input_table</class_module>
          <params>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="database_name" param_type="string" required="True"/>
          </params>
        </tool>
        <tool name="import_sf3_raw_data_to_db">
          <class_module>synthesizer_import_sf3_raw_data_to_db</class_module>
          <params>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="database_name" param_type="string" required="True"/>
            <param name="raw_sf3_file_path" param_type="file_path" required="True"/>
          </params>
        </tool>
        <tool name="import_pums_id_to_bg_id_to_db">
          <class_module>synthesizer_import_pums_id_to_bg_id_to_db</class_module>
          <params>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="database_name" param_type="string" required="True"/>
            <param name="pums_id_to_bg_id_file_path" param_type="file_path" required="True"/>
          </params>
        </tool>
        <tool name="create_households_marginals_table">
          <class_module>synthesizer_create_households_marginals_table</class_module>
          <params>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="database_name" param_type="string" required="True"/>
          </params>
        </tool>
        <tool name="create_persons_marginals_table">
          <class_module>synthesizer_create_persons_marginals_table</class_module>
          <params>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="database_name" param_type="string" required="True"/>
          </params>
        </tool>
        <tool name="create_tables">
          <class_module>synthesizer_create_tables</class_module>
          <params>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="database_name" param_type="string" required="True"/>
            <param name="pums_path" param_type="dir_path" required="True"/>
          </params>
        </tool>
        <tool name="prepare_data">
          <class_module>synthesizer_prepare_data</class_module>
          <params>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="database_name" param_type="string" required="True"/>
          </params>
        </tool>
      </tool_group>
      <tool_group name="opus_data_import_export_tools" setexpanded="True">
        <tool name="sql_data_to_opus_tool">
          <class_module>sql_data_to_opus</class_module>
          <params>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="database_name" param_type="string" required="True"/>
            <param name="table_name" param_type="string" required="True">ALL</param>
            <param name="opus_data_directory" param_type="dir_path" required="True"/>
            <param name="opus_data_year" param_type="string" required="True"/>
          </params>
        </tool>
        <tool name="esri_data_to_opus_tool">
          <class_module>esri_data_to_opus</class_module>
          <params>
            <param name="esri_data_path" param_type="dir_path" required="True"/>
            <param name="esri_table_name" param_type="dir_path" required="True"/>
            <param name="opus_data_directory" param_type="dir_path" required="True"/>
            <param name="opus_data_year" param_type="string" required="True"/>
          </params>
        </tool>
        <tool name="opus_data_to_sql_tool">
          <acts_on hidden="True">database,dataset</acts_on>
          <exports_to hidden="True">SQL</exports_to>
          <class_module>opus_data_to_sql</class_module>
          <params>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="database_name" param_type="string" required="True"/>
            <param name="opus_data_directory" param_type="dir_path" required="True"/>
            <param name="opus_data_year" param_type="string" required="True"/>
            <param name="opus_table_name" param_type="string" required="True">ALL</param>
          </params>
        </tool>
        <tool name="opus_data_to_esri_tool">
          <acts_on hidden="True">database,dataset</acts_on>
          <exports_to hidden="True">ESRI</exports_to>
          <class_module>opus_data_to_esri</class_module>
          <params>
            <param name="esri_data_path" param_type="dir_path" required="True"/>
            <param name="opus_data_directory" param_type="dir_path" required="True"/>
            <param name="opus_data_year" param_type="string" required="True"/>
            <param name="opus_table_name" param_type="string" required="True">ALL</param>
            <param name="something" param_type="fish net" required="yes"/>
          </params>
        </tool>
        <tool name="opus_data_to_csv_tool">
          <acts_on hidden="True">database,dataset</acts_on>
          <exports_to hidden="True">CSV</exports_to>
          <class_module>opus_data_to_csv</class_module>
          <params>
            <param name="csv_data_path" param_type="dir_path" required="True"/>
            <param name="opus_data_directory" param_type="dir_path" required="True"/>
            <param name="opus_data_year" param_type="string" required="True"/>
            <param name="opus_table_name" param_type="string" required="True">ALL</param>
          </params>
        </tool>
      </tool_group>
      <tool_group name="data_conversion_tools" setexpanded="True">
        <tool name="raw_sql_query_tool">
          <class_module>raw_sql_query</class_module>
          <params>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="database_name" param_type="string" required="True"/>
            <param name="query" param_type="string" required="True">your query here;</param>
          </params>
        </tool>
        <tool name="csv_to_sql_tool">
          <class_module>csv_to_sql</class_module>
          <params>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="database_name" param_type="string" required="True"/>
            <param name="csv_file_path" param_type="file_path" required="True"/>
            <param name="output_table_name" param_type="string" required="True"/>
            <param name="overwrite" param_type="string" required="True">False</param>
          </params>
        </tool>
        <tool name="shapefile_to_postgis">
          <class_module>shapefile_to_postgis</class_module>
          <params>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="dbname" param_type="string" required="True"/>
            <param name="schema_name" param_type="string" required="True"/>
            <param name="shapefile_path" param_type="file_path" required="True"/>
            <param name="output_table_name" param_type="string" required="True"/>
            <param name="geometry_type" param_type="string" required="False">NONE</param>
            <param name="overwrite" param_type="string" required="False">NO</param>
          </params>
        </tool>
      </tool_group>
      <tool_group name="spatial_database_tools" setexpanded="True">
        <tool name="postgis_polygon_to_centroids">
          <class_module>postgis_polygon_to_centroids</class_module>
          <params>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="database_name" param_type="string" required="True"/>
            <param name="schema" param_type="string" required="True"/>
            <param name="drop_existing" param_type="string" required="True">True</param>
            <param name="new_table_name" param_type="string" required="True"/>
            <param name="geometry_field_name" param_type="string" required="True"/>
            <param name="existing_table_name" param_type="string" required="True"/>
            <param name="centroid_inside_polygon" param_type="string" required="True">False</param>
          </params>
        </tool>
        <tool name="postgis_create_spatial_index">
          <class_module>postgis_create_spatial_index</class_module>
          <params>
            <param name="database_server_connection" param_type="db_connection_hook" required="True"/>
            <param name="database_name" param_type="string" required="True"/>
            <param name="schema" param_type="string" required="True"/>
            <param name="table_name" param_type="string" required="True"/>
            <param name="geometry_column_name" param_type="string" required="True"/>
            <param name="run_vacuum_analyze" param_type="string" required="True">True</param>
          </params>
        </tool>
      </tool_group>
      <tool_group name="esri_data_tools" setexpanded="True">
        <tool name="esri_buffer_tool">
          <class_module>esri_buffer</class_module>
          <params>
            <param name="input_shapefile" param_type="file_path" required="True"/>
            <param name="output_shapefile" param_type="file_path" required="True"/>
            <param name="buffer_size" param_type="string" required="True">10</param>
          </params>
        </tool>
        <tool name="esri_feature_to_point_tool">
          <class_module>esri_feature_to_point</class_module>
          <params>
            <param name="in_features" param_type="file_path" required="True"/>
            <param name="out_features" param_type="file_path" required="True"/>
          </params>
        </tool>
      </tool_group>
      <tool_group name="data_imputation_tools" setexpanded="True">
        <tool name="missing_value_replacement_tool">
          <class_module>missing_value_replacement_tool</class_module>
          <params>
            <param name="io_input_table_name" param_type="string" required="True">your_table_name</param>
            <param name="io_input_db_url" param_type="string" required="True">mysql://root@localhost/your_database</param>
            <param name="io_output_table_name" param_type="string" required="False">output_table_name</param>
            <param name="io_output_db_url" param_type="string" required="False">mysql://root@localhost/output_database</param>
            <param name="io_overwrite_table" param_type="string" required="True">TRUE_or_FALSE</param>
            <param name="io_force_to_numeric" param_type="string" required="True">numeric_attributes</param>
            <param name="io_force_to_class" param_type="string" required="True">categorical_attributes</param>
            <param name="io_x_column" param_type="string" required="True">X_SP</param>
            <param name="io_y_column" param_type="string" required="True">Y_SP</param>
            <param name="io_id_column" param_type="string" required="True">unique_attribute</param>
            <param name="mi_type" param_type="string" required="True">Num_or_Cat</param>
            <param name="mi_test_attribute" param_type="string" required="True">attribute_to_fix</param>
            <param name="mi_null_value" param_type="string" required="True">value_to_be_fixed</param>
            <param name="mi_train_attributes" param_type="string" required="True">attributes_used_for_predictions</param>
          </params>
        </tool>
        <tool name="mv_run_from_configuration">
          <class_module>mv_run_from_configuration</class_module>
          <params>
            <param name="path_to_config" param_type="string" required="True">C:\your\config\path</param>
          </params>
        </tool>
        <tool name="outlier_detection_tool">
          <class_module>outlier_detection_tool</class_module>
          <params>
            <param name="io_input_table_name" param_type="string" required="True">your_table_name</param>
            <param name="io_input_db_url" param_type="string" required="True">mysql://root@localhost/your_database</param>
            <param name="io_output_table_name" param_type="string" required="False">output_table_name</param>
            <param name="io_output_db_url" param_type="string" required="False">mysql://root@localhost/output_database</param>
            <param name="io_overwrite_table" param_type="string" required="True">TRUE_or_FALSE</param>
            <param name="io_force_to_numeric" param_type="string" required="True">numeric_attributes</param>
            <param name="io_force_to_class" param_type="string" required="True">categorical_attributes</param>
            <param name="io_x_column" param_type="string" required="True">X_SP</param>
            <param name="io_y_column" param_type="string" required="True">Y_SP</param>
            <param name="io_id_column" param_type="string" required="True">unique_attribute</param>
            <param name="io_extra_attributes" param_type="string" required="True">other_columns_to_put_in_output_table</param>
            <param name="mi_attributes" param_type="string" required="True">Attributes_to_use</param>
            <param name="mi_log_trans_attributes" param_type="string" required="False">attributes_with_log_distribution</param>
          </params>
        </tool>
        <tool name="od_run_from_configuration">
          <class_module>od_run_from_configuration</class_module>
          <params>
            <param name="path_to_config" param_type="string" required="True">C:\your\config\path</param>
          </params>
        </tool>
      </tool_group>
      <tool_group name="template_tools" setexpanded="True">
        <tool name="template_tool">
          <class_module>template_tool</class_module>
          <params>
            <param name="param_1" param_type="string" required="True">default value 1</param>
            <param name="param_2" param_type="string" required="True">default value 2</param>
            <param name="param_3" param_type="string" required="True">default value 3</param>
          </params>
        </tool>
      </tool_group>
    </tool_library>
    <tool_sets setexpanded="True">
      <tool_set name="sample_tool_set">
        <tool_config name="template_tool_config">
          <tool_hook hidden="True">template_tool</tool_hook>
          <param1>Template Config 1 - Param1</param1>
          <param2>Template Config 1 - Param2</param2>
          <param3>Template Config 1 - Param3</param3>
        </tool_config>
      </tool_set>
    </tool_sets>
    <path_to_tool_modules>data_manager.run.tools</path_to_tool_modules>
  </data_manager>
  <results_manager>
    <indicator_batches name="Indicator Batches" setexpanded="True" type="group"/>
    <simulation_runs followers="Results" name="Simulation Runs" setexpanded="True" type="all_source_data"/>
  </results_manager>
</opus_project>
