<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <project_name type="string" hidden="True">mag_zone_v5c</project_name>
    <parent type="file">mag_zone/configs/mag_zone_base.xml</parent>
    <expression_library type="dictionary">
    </expression_library>
  </general>
  <model_manager>
    <templates name="Model Templates" parser_action="skip" hidden="True"/>
    <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model name="household_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.transition_model</class_module>
            <class_name>TransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">TransitionModel</name>
            <argument name="dataset" type="string">household</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Household Transition Model</argument>
            <argument name="model_short_name" parser_action="quote_string" type="string">HTM</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string">total_population</argument>
            <argument name="dataset_accounting_attribute" parser_action="quote_string" type="string">persons</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument name="control_total_table" parser_action="quote_string" type="string">annual_household_control_totals</argument>
            <argument name="control_total_storage" type="string">base_cache_storage</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="year" type="string">year</argument>
            <argument name="sampling_hierarchy" convert_blank_to_none="True" type="string">['super_raz_id','county_id']</argument>
            <argument name="sampling_threshold" convert_blank_to_none="True" type="string">1000</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string">total_population</argument>
            <argument name="reset_dataset_attribute_value" type="string">{'building_id':-1}</argument>
            <argument name="sync_dataset" convert_blank_to_none="True" type="string">person</argument>
          </run>
        </structure>
      </model>
      <model name="employment_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.transition_model</class_module>
            <class_name>TransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">TransitionModel</name>
            <argument name="dataset" type="string">job</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Employment Transition Model</argument>
            <argument name="model_short_name" parser_action="quote_string" type="string">ETM</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string">total_number_of_jobs</argument>
            <argument name="dataset_accounting_attribute" convert_blank_to_none="True" parser_action="quote_string" type="string"/>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument name="control_total_table" parser_action="quote_string" type="string">annual_employment_control_totals</argument>
            <argument name="control_total_storage" type="string">base_cache_storage</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="year" type="string">year</argument>
            <argument name="sampling_hierarchy" convert_blank_to_none="True" type="string">['super_raz_id','county_id']</argument>
            <argument name="sampling_threshold" convert_blank_to_none="True" type="string">1</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string">total_number_of_jobs</argument>
            <argument name="reset_dataset_attribute_value" type="string">{'building_id':-1}</argument>
            <argument name="sync_dataset" convert_blank_to_none="True" type="string"/>
          </run>
        </structure>
      </model>
      <model name="employment_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <group_by_attribute type="list">('home_based_status', 'name')</group_by_attribute>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string">"mag_zone.building.total_SSS_job_spaces"</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">mag_zone.building.vacant_SSS_job_spaces</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="estimation_weight_string" type="string">mag_zone.building.total_SSS_job_spaces</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="filter" type="string"/>
            <argument name="estimation_size_agents" type="float">1.0</argument>
            <argument name="sample_size_locations" type="integer">10</argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <argument name="portion_to_unplace" type="float">0.0833333333</argument>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="join_datasets" type="boolean">False</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel_group name="home_based" type="submodel_group">
            <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.zonal_bldg_avg_hh_income"/>
                <variable_spec name="building.zonal_bldg_wah_capacity"/>
                <variable_spec name="building.zonal_num_jobs"/>
                <variable_spec name="building.zonal_num_pop"/>
                <variable_spec name="building.zonal_raz_sf_avg_unit_price_2"/>
                <variable_spec name="building.zonal_tazi03_num_jobs_within_25mins_peak_sov"/>
                <variable_spec name="building.zonal_tazi03_num_pop_within_20mins_peak_sov"/>
              </variable_list>
            </submodel>
          </submodel_group>
          <submodel_group name="non_home_based" type="submodel_group">
            <submodel hidden="Children" name="sector_1" submodel_id="1" type="submodel" inherit_parent_values="False">
              <description type="string">Agriculture, Forestry, Fishing and Hunting</description>
              <variable_list type="variable_list">
                <variable_spec name="building.zonal_bldg_is_agriculture"/>
                <variable_spec name="building.zonal_bldg_is_retail"/>
                <variable_spec name="building.zonal_bldg_toal_job_spaces_per_acre"/>
                <variable_spec name="building.zonal_raz_retl_avg_unit_price_2"/>
                <variable_spec name="building.zonal_sector_1_fraction"/>
                <variable_spec name="building.zonal_tazi03_num_construction_jobs_within_20mins_peak_sov"/>
                <variable_spec name="building.zonal_tazi03_num_jobs_within_15mins_offpeak_sov"/>
                <variable_spec name="building.zonal_tazi03_num_kids_within_30mins_transit_combined"/>
                <variable_spec name="building.zonal_tazi03_num_retail_jobs_within_20mins_transit_combined"/>
                <variable_spec name="building.zonal_tazi03_pct_high_income_hhlds_within_15_offpeak_sov"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="sector_2" submodel_id="2" type="submodel" inherit_parent_values="False">
              <description type="string">Mining</description>
              <variable_list type="variable_list">
                <variable_spec name="building.zonal_bldg_dist_to_lrstop"/>
                <variable_spec name="building.zonal_num_jobs_2"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="sector_3" submodel_id="3" type="submodel" inherit_parent_values="False">
              <description type="string">Utilities</description>
              <variable_list type="variable_list">
                <variable_spec name="building.zonal_bldg_dist_to_major"/>
                <variable_spec name="building.zonal_bldg_is_office"/>
                <variable_spec name="building.zonal_bldg_toal_job_spaces_per_acre"/>
                <variable_spec name="building.zonal_num_jobs"/>
                <variable_spec name="building.zonal_raz_sf_avg_unit_price_2"/>
                <variable_spec name="building.zonal_raz_ware_avg_unit_price_2"/>
                <variable_spec name="building.zonal_tazi03_num_construction_jobs_within_20mins_peak_sov"/>
                <variable_spec name="building.zonal_tazi03_num_kids_within_30mins_transit_combined"/>
                <variable_spec name="building.zonal_tazi03_num_office_jobs_within_10mins_offpeak_sov"/>
                <variable_spec name="building.zonal_tazi03_num_retail_jobs_within_20mins_transit_combined"/>
                <variable_spec name="building.zonal_tazi03_pct_high_income_hhlds_within_15_offpeak_sov"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="sector_9" submodel_id="9" type="submodel" inherit_parent_values="False">
              <description type="string">Information</description>
              <variable_list type="variable_list">
                <variable_spec name="building.zonal_bldg_dist_to_major"/>
                <variable_spec name="building.zonal_ln_average_value_per_unit"/>
                <variable_spec name="building.zonal_num_jobs_9"/>
                <variable_spec name="building.zonal_raz_ind_avg_unit_price_2"/>
                <variable_spec name="building.zonal_tazi03_num_construction_jobs_within_20mins_peak_sov"/>
                <variable_spec name="building.zonal_tazi03_num_hotel_jobs_within_20mins_transit_combined"/>
                <variable_spec name="building.zonal_tazi03_num_kids_within_30mins_transit_combined"/>
                <variable_spec name="building.zonal_tazi03_num_retail_jobs_within_20mins_transit_combined"/>
                <variable_spec name="building.zonal_tazi03_pct_low_income_hhlds_within_15_offpeak_sov"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="sector_13" submodel_id="13" type="submodel" inherit_parent_values="False">
              <description type="string">Management of Companies and Enterprises</description>
              <variable_list type="variable_list">
                <variable_spec name="building.zonal_bldg_dist_to_major"/>
                <variable_spec name="building.zonal_num_jobs_13"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="sector_17" submodel_id="17" type="submodel" inherit_parent_values="False">
              <description type="string">Arts, Entertainment, and Recreation</description>
              <variable_list type="variable_list">
                <variable_spec name="building.zonal_bldg_dist_to_hwy"/>
                <variable_spec name="building.zonal_bldg_dist_to_major"/>
                <variable_spec name="building.zonal_bldg_toal_job_spaces_per_acre"/>
                <variable_spec name="building.zonal_num_jobs_17"/>
                <variable_spec name="building.zonal_raz_ware_avg_unit_price_2"/>
                <variable_spec name="building.zonal_tazi03_num_industrial_jobs_within_20mins_transit_combined"/>
                <variable_spec name="building.zonal_tazi03_num_retail_jobs_within_20mins_transit_combined"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="sector_18" submodel_id="18" type="submodel" inherit_parent_values="False">
              <description type="string">Accommodation and Food Services</description>
              <variable_list type="variable_list">
                <variable_spec name="building.zonal_bldg_dist_to_major"/>
                <variable_spec name="building.zonal_bldg_hotel_unit_price"/>
                <variable_spec name="building.zonal_bldg_is_hotel"/>
                <variable_spec name="building.zonal_bldg_toal_job_spaces_per_acre"/>
                <variable_spec name="building.zonal_num_jobs_18"/>
                <variable_spec name="building.zonal_tazi03_num_hotel_jobs_within_20mins_transit_combined"/>
              </variable_list>
            </submodel>
          </submodel_group>
        </specification>
      </model>
      <model name="residential_development_project_location_choice_model" type="model">
        <dependencies type="list">['development_project_transition_model']</dependencies>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':3}</argument>
            <argument name="agent_set" type="string">projects</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">urbansim_zone.development_project.is_residential</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">building_type_id</argument>
            <argument name="location_set" type="string">building</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Residential Development Project Location Choice Model</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim_zone</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="filter" parser_action="quote_string" type="string">(building.building_type_id==SUBMODEL)*(urbansim_zone.building.developable_residential_units_capacity&gt;0)</argument>
            <argument name="run_config" type="dictionary">
              <key name="lottery_max_iterations" type="integer">3</key>
              <key convert_blank_to_none="True" name="agent_units_string" type="string">residential_units</key>
              <key name="compute_capacity_flag" type="string">True</key>
              <key name="capacity_string" type="string">urbansim_zone.building.developable_residential_units_capacity</key>
              <key name="sample_alternatives_by_submodel" type="string">True</key>
              <key convert_blank_to_none="True" name="weights_for_simulation_string" type="string"/>
              <key name="sample_size_locations" type="integer">30</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation" type="string">opus_core.bhhh_mnl_estimation</key>
              <key convert_blank_to_none="True" name="agent_units_string" type="string">residential_units</key>
              <key name="capacity_string" type="string">urbansim_zone.building.residential_units_capacity</key>
              <key name="compute_capacity_flag" type="string">True</key>
              <key name="sample_alternatives_by_submodel" type="string">True</key>
              <key convert_blank_to_none="True" name="weights_for_estimation_string" type="string"/>
              <key name="sample_size_locations" type="integer">30</key>
            </argument>
            <name name="name" type="string">DevelopmentProjectLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim_zone.models.development_project_location_choice_model</class_module>
            <class_name>DevelopmentProjectLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agent_set" type="string">projects</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">residential_development_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">residential_development_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, projects)</output>
            <argument name="specification_table" parser_action="quote_string" type="string">residential_development_location_choice_model_specification</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="events_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="events_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">numpy.logical_and(development_project.disaggregate(building_type.is_residential), development_project.scheduled_year&gt;=2000)</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list"/>
          </submodel>
        </specification>
      </model>
      <model name="non_residential_development_project_location_choice_model" type="model">
        <dependencies type="list">['development_project_transition_model']</dependencies>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':3}</argument>
            <argument name="agent_set" type="string">projects</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">urbansim_zone.development_project.is_non_residential</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">building_type_id</argument>
            <argument name="location_set" type="string">building</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Non-Residential Development Project Location Choice Model</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim_zone</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="filter" parser_action="quote_string" type="string">(building.building_type_id==SUBMODEL)*(urbansim_zone.building.developable_non_residential_sqft_capacity&gt;0)</argument>
            <argument name="run_config" type="dictionary">
              <key name="lottery_max_iterations" type="integer">3</key>
              <key convert_blank_to_none="True" name="agent_units_string" type="string">residential_units</key>
              <key name="capacity_string" type="string">urbansim_zone.building.developable_non_residential_sqft_capacity</key>
              <key convert_blank_to_none="True" name="weights_for_simulation_string" type="string"/>
              <key name="compute_capacity_flag" type="string">True</key>
              <key name="sample_alternatives_by_submodel" type="string">True</key>
              <key name="sample_size_locations" type="integer">30</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation" type="string">opus_core.bhhh_mnl_estimation</key>
              <key convert_blank_to_none="True" name="agent_units_string" type="string">non_residential_sqft</key>
              <key name="capacity_string" type="string">urbansim_zone.building.non_residential_sqft_capacity</key>
              <key convert_blank_to_none="True" name="weights_for_estimation_string" type="string"/>
              <key name="compute_capacity_flag" type="string">True</key>
              <key name="sample_alternatives_by_submodel" type="string">True</key>
              <key name="sample_size_locations" type="integer">30</key>
            </argument>
            <name name="name" type="string">DevelopmentProjectLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim_zone.models.development_project_location_choice_model</class_module>
            <class_name>DevelopmentProjectLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agent_set" type="string">projects</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">non_residential_development_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">non_residential_development_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, projects)</output>
            <argument name="specification_table" parser_action="quote_string" type="string">non_residential_development_location_choice_model_specification</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="events_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="events_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">numpy.logical_and(development_project.disaggregate(building_type.is_residential==0), development_project.scheduled_year&gt;=2000)</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list"/>
          </submodel>
        </specification>
      </model>
      <model name="household_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim_zone</argument>
            <argument convert_blank_to_none="True" name="location_id_string" type="string">"building_id"</argument>
            <argument convert_blank_to_none="True" name="submodel_string" type="string">"urbansim.household.income_category"</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">urbansim_zone.building.vacant_residential_units</argument>
            <argument name="filter" parser_action="quote_string" type="string">urbansim_zone.building.vacant_residential_units&gt;0</argument>
            <argument convert_blank_to_none="True" name="estimation_weight_string" parser_action="quote_string" type="string"/>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string">"residential_units"</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 10, })</argument>
            <argument name="location_set" type="string">building</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string"/>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string"/>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="sample_size_locations" type="integer">10</argument>
            <argument name="estimate_config" type="string">Resources({})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">household_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
      </model>
      <model name="development_project_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.real_estate_transition_model</class_module>
            <class_name>RealEstateTransitionModel</class_name>
          </import>
          <init type="dictionary">
            <argument name="target_vancy_dataset" type="string">target_vacancy</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Development Project Transition Model</argument>
            <argument name="model_short_name" parser_action="quote_string" type="string">DPTM</argument>
            <name name="name" type="string">RealEstateTransitionModel</name>
          </init>
          <run type="dictionary">
            <output name="output" type="string">projects, _index</output>
            <argument name="realestate_dataset" type="string">building</argument>
            <argument name="year" type="string">year</argument>
            <argument name="occupied_spaces_variable" parser_action="quote_string" type="string">occupied_spaces</argument>
            <argument name="total_spaces_variable" parser_action="quote_string" type="string">total_spaces</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string">target_vacancy</argument>
            <argument name="sample_from_dataset" type="string">development_event_history</argument>
            <argument name="sample_filter" type="string">None</argument>
            <argument name="reset_attribute_value" type="string">{'building_id':-1}</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </run>
        </structure>
      </model>
    </models>
  </model_manager>
  <results_manager>
    <indicator_batches name="Indicator Batches" setexpanded="True" type="group">
    </indicator_batches>
  </results_manager>
  <scenario_manager>
  </scenario_manager>
</opus_project>

