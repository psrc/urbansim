<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <description type="string">Honolulu parcel configuration</description>
    <project_name hidden="True" type="string">oahu</project_name>
    <parent type="file">urbansim_parcel/configs/urbansim_parcel.xml</parent>
    <expression_library type="dictionary">
      <variable use="both" source="expression" name="dpa.dpa_jobs3" type="variable_definition">dpa.aggregate(building.number_of_agents(job),intermediates=[parcel,zone]) + numpy.ceil(.4160*dpa.aggregate(building.resort_units+building.hotel_units,intermediates=[parcel,zone])) + dpa.aggregate(zone.military_jobs)</variable>
      <variable use="both" source="expression" name="dpa.dpa_households3" type="variable_definition">dpa.aggregate(building.number_of_agents(household),intermediates=[parcel,zone])</variable>
      <variable use="both" source="expression" name="dpa.dpa_households2" type="variable_definition">dpa.aggregate(building.number_of_agents(household),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="dpa.dpa_jobs2" type="variable_definition">dpa.aggregate(building.number_of_agents(job),intermediates=[parcel]) + numpy.ceil(.4160*dpa.aggregate(building.resort_units+building.hotel_units,intermediates=[parcel]))</variable>
      <variable use="both" source="expression" name="zone.tm_totalhh" type="variable_definition">zone.aggregate(building.number_of_agents(household),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.tm_totalemp" type="variable_definition">zone.aggregate(building.number_of_agents(job),intermediates=[parcel]) + numpy.ceil(.4160*zone.aggregate(building.resort_units+building.hotel_units,intermediates=[parcel])) + zone.military_jobs</variable>
      <variable use="both" source="expression" name="zone.tm_hotel" type="variable_definition">numpy.ceil(.4160*zone.aggregate(building.resort_units+building.hotel_units,intermediates=[parcel]))</variable>
      <variable use="both" source="expression" name="zone.tm_govt" type="variable_definition">zone.aggregate(building.aggregate(job.sector_id==18),intermediates=[parcel])</variable>
      <variable use="both" source="primary attribute" name="zone.tm_mili" type="variable_definition">zone.military_jobs</variable>
      <variable use="both" source="expression" name="zone.tm_hr" type="variable_definition">zone.aggregate(building.hotel_units,intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.tm_rc" type="variable_definition">zone.aggregate(building.resort_units,intermediates=[parcel])</variable>
      <variable use="both" source="primary attribute" name="zone.tm_gq" type="variable_definition">zone.gqpop2010</variable>
      <variable use="both" source="expression" name="zone.tm_pop" type="variable_definition">zone.aggregate((household.persons_total),intermediates=[building,parcel]) + zone.gqpop2010</variable>
      <variable use="both" source="expression" name="parcel.p_hotel_and_resort_units_in_zone" type="variable_definition">parcel.disaggregate(zone.aggregate(building.hotel_units+building.resort_units,intermediates=[parcel]))</variable>
      <variable use="both" source="expression" name="zone.tm_hh5" type="variable_definition">zone.aggregate((household.persons&gt;4),intermediates=[building,parcel])</variable>
      <variable use="both" source="expression" name="zone.tm_hh4" type="variable_definition">zone.aggregate((household.persons==4),intermediates=[building,parcel])</variable>
      <variable use="both" source="expression" name="zone.tm_hh3" type="variable_definition">zone.aggregate((household.persons==3),intermediates=[building,parcel])</variable>
      <variable use="both" source="expression" name="zone.tm_hh2" type="variable_definition">zone.aggregate((household.persons==2),intermediates=[building,parcel])</variable>
      <variable use="both" source="expression" name="zone.tm_hh1" type="variable_definition">zone.aggregate((household.persons==1),intermediates=[building,parcel])</variable>
      <variable use="both" source="expression" name="zone.tm_hu" type="variable_definition">zone.aggregate(building.residential_units*(building.building_type_id&lt;4),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.tm_service" type="variable_definition">zone.aggregate(building.aggregate(numpy.in1d(job.sector_id, [11,12,13,14,15,16,17])),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.tm_cstr" type="variable_definition">zone.aggregate(building.aggregate(job.sector_id==2),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.tm_retail" type="variable_definition">zone.aggregate(building.aggregate(job.sector_id==6),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.tm_fire" type="variable_definition">zone.aggregate(building.aggregate(numpy.in1d(job.sector_id, [9,10])),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.tm_indus" type="variable_definition">zone.aggregate(building.aggregate(numpy.in1d(job.sector_id, [4,5])),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.tm_tcu" type="variable_definition">zone.aggregate(building.aggregate(numpy.in1d(job.sector_id, [3,7,8])),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.tm_ag" type="variable_definition">zone.aggregate(building.aggregate(job.sector_id==1),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.zone_buildings" type="variable_definition">zone.aggregate(parcel.number_of_agents(building))</variable>
      <variable use="both" source="expression" name="zone.h_runit_resbuilding" type="variable_definition">zone.aggregate(building.residential_units*(building.building_type_id&lt;4),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="parcel.parcel_walk50_wait25" type="variable_definition">parcel.disaggregate(zone.walk50_wait25)</variable>
      <variable use="both" source="expression" name="park.parcel_walk50_wait25" type="variable_definition">park.disaggregate(zone.walk50_wait25)</variable>
      <variable use="both" source="expression" name="dpa.dpa_jobs" type="variable_definition">dpa.number_of_agents(job) + numpy.ceil(.4160*dpa.aggregate(building.resort_units+building.hotel_units,intermediates=[parcel]))</variable>
      <variable use="both" source="expression" name="dpa.dpa_households" type="variable_definition">dpa.number_of_agents(households)</variable>
      <variable use="both" source="expression" name="alldata.unplaced_jobs" type="variable_definition">alldata.aggregate_all(job.building_id==-1)</variable>
      <variable use="both" source="expression" name="alldata.unplaced_households" type="variable_definition">alldata.aggregate_all(household.building_id==-1)</variable>
      <variable use="both" source="expression" name="alldata.unplaced_buildings" type="variable_definition">alldata.aggregate_all(building.parcel_id==-1)</variable>
      <variable use="both" source="expression" name="alldata.region_employment_placed" type="variable_definition">alldata.aggregate_all(parcel.aggregate(building.number_of_agents(job)))</variable>
      <variable use="both" source="expression" name="alldata.region_households_placed" type="variable_definition">alldata.aggregate_all(parcel.aggregate(building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="alldata.region_non_residential_sqft_placed" type="variable_definition">alldata.aggregate_all(parcel.aggregate(building.non_residential_sqft))</variable>
      <variable use="both" source="expression" name="alldata.region_dwelling_units_placed" type="variable_definition">alldata.aggregate_all(parcel.aggregate(building.residential_units))</variable>
      <variable use="both" source="expression" name="building.building_walk10_wait10" type="variable_definition">building.disaggregate(zone.walk10_wait10,intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="building.building_walk25_wait10" type="variable_definition">building.disaggregate(zone.walk25_wait10,intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="building.building_walk25_wait25" type="variable_definition">building.disaggregate(zone.walk25_wait25,intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="building.building_walk50_wait10" type="variable_definition">building.disaggregate(zone.walk50_wait10,intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="building.building_walk50_wait25" type="variable_definition">building.disaggregate(zone.walk50_wait25,intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="building.building_walk50_wait50" type="variable_definition">building.disaggregate(zone.walk50_wait50,intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="employment_submarket.employment_submarket_walk10_wait10" type="variable_definition">employment_submarket.disaggregate(zone.walk10_wait10)</variable>
      <variable use="both" source="expression" name="employment_submarket.employment_submarket_walk25_wait10" type="variable_definition">employment_submarket.disaggregate(zone.walk25_wait10)</variable>
      <variable use="both" source="expression" name="employment_submarket.employment_submarket_walk25_wait25" type="variable_definition">employment_submarket.disaggregate(zone.walk25_wait25)</variable>
      <variable use="both" source="expression" name="employment_submarket.employment_submarket_walk50_wait10" type="variable_definition">employment_submarket.disaggregate(zone.walk50_wait10)</variable>
      <variable use="both" source="expression" name="employment_submarket.employment_submarket_walk50_wait25" type="variable_definition">employment_submarket.disaggregate(zone.walk50_wait25)</variable>
      <variable use="both" source="expression" name="employment_submarket.employment_submarket_walk50_wait50" type="variable_definition">employment_submarket.disaggregate(zone.walk50_wait50)</variable>
      <variable use="both" source="expression" name="submarket.submarket_walk10_wait10" type="variable_definition">submarket.disaggregate(zone.walk10_wait10)</variable>
      <variable use="both" source="expression" name="submarket.submarket_walk25_wait10" type="variable_definition">submarket.disaggregate(zone.walk25_wait10)</variable>
      <variable use="both" source="expression" name="submarket.submarket_walk25_wait25" type="variable_definition">submarket.disaggregate(zone.walk25_wait25)</variable>
      <variable use="both" source="expression" name="submarket.submarket_walk50_wait10" type="variable_definition">submarket.disaggregate(zone.walk50_wait10)</variable>
      <variable use="both" source="expression" name="submarket.submarket_walk50_wait25" type="variable_definition">submarket.disaggregate(zone.walk50_wait25)</variable>
      <variable use="both" source="expression" name="submarket.submarket_walk50_wait50" type="variable_definition">submarket.disaggregate(zone.walk50_wait50)</variable>
      <variable use="both" source="expression" name="zone.resort_units_zone" type="variable_definition">zone.aggregate(building.resort_units,intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.hotel_units_zone" type="variable_definition">zone.aggregate(building.hotel_units,intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="tract.s1w0i100" type="variable_definition">tract.aggregate((household.persons==1)*(household.workers==0)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s2w0i100" type="variable_definition">tract.aggregate((household.persons==2)*(household.workers==0)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s3w0i100" type="variable_definition">tract.aggregate((household.persons==3)*(household.workers==0)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s4w0i100" type="variable_definition">tract.aggregate((household.persons==4)*(household.workers==0)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s5w0i100" type="variable_definition">tract.aggregate((household.persons&gt;4)*(household.workers==0)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s1w1i100" type="variable_definition">tract.aggregate((household.persons==1)*(household.workers==1)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s2w1i100" type="variable_definition">tract.aggregate((household.persons==2)*(household.workers==1)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s3w1i100" type="variable_definition">tract.aggregate((household.persons==3)*(household.workers==1)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s4w1i100" type="variable_definition">tract.aggregate((household.persons==4)*(household.workers==1)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s5w1i100" type="variable_definition">tract.aggregate((household.persons&gt;4)*(household.workers==1)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s2w2i100" type="variable_definition">tract.aggregate((household.persons==2)*(household.workers==2)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s3w2i100" type="variable_definition">tract.aggregate((household.persons==3)*(household.workers==2)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s4w2i100" type="variable_definition">tract.aggregate((household.persons==4)*(household.workers==2)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s5w2i100" type="variable_definition">tract.aggregate((household.persons&gt;4)*(household.workers==2)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s3w3ui100" type="variable_definition">tract.aggregate((household.persons==3)*(household.workers&gt;2)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s4w3ui100" type="variable_definition">tract.aggregate((household.persons==4)*(household.workers&gt;2)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s5w3ui100" type="variable_definition">tract.aggregate((household.persons&gt;4)*(household.workers&gt;2)*(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000)))</variable>
      <variable use="both" source="expression" name="tract.s1w0i100u" type="variable_definition">tract.aggregate((household.persons==1)*(household.workers==0)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s2w0i100u" type="variable_definition">tract.aggregate((household.persons==2)*(household.workers==0)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s3w0i100u" type="variable_definition">tract.aggregate((household.persons==3)*(household.workers==0)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s4w0i100u" type="variable_definition">tract.aggregate((household.persons==4)*(household.workers==0)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s5w0i100u" type="variable_definition">tract.aggregate((household.persons&gt;4)*(household.workers==0)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s1w1i100u" type="variable_definition">tract.aggregate((household.persons==1)*(household.workers==1)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s2w1i100u" type="variable_definition">tract.aggregate((household.persons==2)*(household.workers==1)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s3w1i100u" type="variable_definition">tract.aggregate((household.persons==3)*(household.workers==1)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s4w1i100u" type="variable_definition">tract.aggregate((household.persons==4)*(household.workers==1)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s5w1i100u" type="variable_definition">tract.aggregate((household.persons&gt;4)*(household.workers==1)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s2w2i100u" type="variable_definition">tract.aggregate((household.persons==2)*(household.workers==2)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s3w2i100u" type="variable_definition">tract.aggregate((household.persons==3)*(household.workers==2)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s4w2i100u" type="variable_definition">tract.aggregate((household.persons==4)*(household.workers==2)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s5w2i100u" type="variable_definition">tract.aggregate((household.persons&gt;4)*(household.workers==2)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s3w3ui100u" type="variable_definition">tract.aggregate((household.persons==3)*(household.workers&gt;2)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s4w3ui100u" type="variable_definition">tract.aggregate((household.persons==4)*(household.workers&gt;2)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s5w3ui100u" type="variable_definition">tract.aggregate((household.persons&gt;4)*(household.workers&gt;2)*((household.income*1.31) &gt; 99999))</variable>
      <variable use="both" source="expression" name="tract.s1w0i30" type="variable_definition">tract.aggregate((household.persons==1)*(household.workers==0)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s2w0i30" type="variable_definition">tract.aggregate((household.persons==2)*(household.workers==0)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s3w0i30" type="variable_definition">tract.aggregate((household.persons==3)*(household.workers==0)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s4w0i30" type="variable_definition">tract.aggregate((household.persons==4)*(household.workers==0)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s5w0i30" type="variable_definition">tract.aggregate((household.persons&gt;4)*(household.workers==0)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s1w1i30" type="variable_definition">tract.aggregate((household.persons==1)*(household.workers==1)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s2w1i30" type="variable_definition">tract.aggregate((household.persons==2)*(household.workers==1)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s3w1i30" type="variable_definition">tract.aggregate((household.persons==3)*(household.workers==1)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s4w1i30" type="variable_definition">tract.aggregate((household.persons==4)*(household.workers==1)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s5w1i30" type="variable_definition">tract.aggregate((household.persons&gt;4)*(household.workers==1)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s2w2i30" type="variable_definition">tract.aggregate((household.persons==2)*(household.workers==2)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s3w2i30" type="variable_definition">tract.aggregate((household.persons==3)*(household.workers==2)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s4w2i30" type="variable_definition">tract.aggregate((household.persons==4)*(household.workers==2)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s5w2i30" type="variable_definition">tract.aggregate((household.persons&gt;4)*(household.workers==2)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s3w3ui30" type="variable_definition">tract.aggregate((household.persons==3)*(household.workers&gt;2)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s4w3ui30" type="variable_definition">tract.aggregate((household.persons==4)*(household.workers&gt;2)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s5w3ui30" type="variable_definition">tract.aggregate((household.persons&gt;4)*(household.workers&gt;2)*((household.income*1.31) &lt; 30000))</variable>
      <variable use="both" source="expression" name="tract.s1w0i60" type="variable_definition">tract.aggregate((household.persons==1)*(household.workers==0)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.s2w0i60" type="variable_definition">tract.aggregate((household.persons==2)*(household.workers==0)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.s3w0i60" type="variable_definition">tract.aggregate((household.persons==3)*(household.workers==0)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.s4w0i60" type="variable_definition">tract.aggregate((household.persons==4)*(household.workers==0)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.s5w0i60" type="variable_definition">tract.aggregate((household.persons&gt;4)*(household.workers==0)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.s1w1i60" type="variable_definition">tract.aggregate((household.persons==1)*(household.workers==1)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.s2w1i60" type="variable_definition">tract.aggregate((household.persons==2)*(household.workers==1)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.s3w1i60" type="variable_definition">tract.aggregate((household.persons==3)*(household.workers==1)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.s4w1i60" type="variable_definition">tract.aggregate((household.persons==4)*(household.workers==1)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.s5w1i60" type="variable_definition">tract.aggregate((household.persons&gt;4)*(household.workers==1)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.s2w2i60" type="variable_definition">tract.aggregate((household.persons==2)*(household.workers==2)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.s3w2i60" type="variable_definition">tract.aggregate((household.persons==3)*(household.workers==2)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.s4w2i60" type="variable_definition">tract.aggregate((household.persons==4)*(household.workers==2)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.s5w2i60" type="variable_definition">tract.aggregate((household.persons&gt;4)*(household.workers==2)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.s3w3ui60" type="variable_definition">tract.aggregate((household.persons==3)*(household.workers&gt;2)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.s4w3ui60" type="variable_definition">tract.aggregate((household.persons==4)*(household.workers&gt;2)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.s5w3ui60" type="variable_definition">tract.aggregate((household.persons&gt;4)*(household.workers&gt;2)*(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000)))</variable>
      <variable use="both" source="expression" name="tract.w3" type="variable_definition">tract.aggregate((household.workers&gt;2))</variable>
      <variable use="both" source="expression" name="tract.w2" type="variable_definition">tract.aggregate((household.workers==2))</variable>
      <variable use="both" source="expression" name="tract.w1" type="variable_definition">tract.aggregate((household.workers==1))</variable>
      <variable use="both" source="expression" name="tract.w0" type="variable_definition">tract.aggregate((household.workers==0))</variable>
      <variable use="both" source="expression" name="tract.i4" type="variable_definition">tract.aggregate((household.income*1.31) &gt; 99999)</variable>
      <variable use="both" source="expression" name="tract.i3" type="variable_definition">tract.aggregate(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000))</variable>
      <variable use="both" source="expression" name="tract.i2" type="variable_definition">tract.aggregate(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000))</variable>
      <variable use="both" source="expression" name="tract.i1" type="variable_definition">tract.aggregate((household.income*1.31) &lt; 30000)</variable>
      <variable use="both" source="expression" name="tract.s5" type="variable_definition">tract.aggregate((household.persons&gt;4))</variable>
      <variable use="both" source="expression" name="tract.s4" type="variable_definition">tract.aggregate((household.persons==4))</variable>
      <variable use="both" source="expression" name="tract.s3" type="variable_definition">tract.aggregate((household.persons==3))</variable>
      <variable use="both" source="expression" name="tract.s2" type="variable_definition">tract.aggregate((household.persons==2))</variable>
      <variable use="both" source="expression" name="tract.s1" type="variable_definition">tract.aggregate((household.persons==1))</variable>
      <variable use="both" source="expression" name="tract.worker3up" type="variable_definition">tract.aggregate((household.workers&gt;2))</variable>
      <variable use="both" source="expression" name="tract.worker2" type="variable_definition">tract.aggregate((household.workers==2))</variable>
      <variable use="both" source="expression" name="tract.worker1" type="variable_definition">tract.aggregate((household.workers==1))</variable>
      <variable use="both" source="expression" name="tract.worker0" type="variable_definition">tract.aggregate((household.workers==0))</variable>
      <variable use="both" source="expression" name="tract.income4" type="variable_definition">tract.aggregate((household.income*1.31) &gt; 99999)</variable>
      <variable use="both" source="expression" name="tract.income3" type="variable_definition">tract.aggregate(((household.income*1.31) &gt; 59999) * ((household.income*1.31) &lt; 100000))</variable>
      <variable use="both" source="expression" name="tract.income2" type="variable_definition">tract.aggregate(((household.income*1.31) &gt; 29999) * ((household.income*1.31) &lt; 60000))</variable>
      <variable use="both" source="expression" name="tract.income1" type="variable_definition">tract.aggregate((household.income*1.31) &lt; 30000)</variable>
      <variable use="both" source="expression" name="tract.tract_own5" type="variable_definition">tract.aggregate((household.tenure==1)*(household.persons&gt;4))</variable>
      <variable use="both" source="expression" name="tract.tract_own4" type="variable_definition">tract.aggregate((household.tenure==1)*(household.persons==4))</variable>
      <variable use="both" source="expression" name="tract.tract_own3" type="variable_definition">tract.aggregate((household.tenure==1)*(household.persons==3))</variable>
      <variable use="both" source="expression" name="tract.tract_own2" type="variable_definition">tract.aggregate((household.tenure==1)*(household.persons==2))</variable>
      <variable use="both" source="expression" name="tract.tract_own1" type="variable_definition">tract.aggregate((household.tenure==1)*(household.persons==1))</variable>
      <variable use="both" source="expression" name="tract.tract_rent5" type="variable_definition">tract.aggregate((household.tenure==2)*(household.persons&gt;4))</variable>
      <variable use="both" source="expression" name="tract.tract_rent4" type="variable_definition">tract.aggregate((household.tenure==2)*(household.persons==4))</variable>
      <variable use="both" source="expression" name="tract.tract_rent3" type="variable_definition">tract.aggregate((household.tenure==2)*(household.persons==3))</variable>
      <variable use="both" source="expression" name="tract.tract_rent2" type="variable_definition">tract.aggregate((household.tenure==2)*(household.persons==2))</variable>
      <variable use="both" source="expression" name="tract.tract_rent1" type="variable_definition">tract.aggregate((household.tenure==2)*(household.persons==1))</variable>
      <variable use="both" source="expression" name="tract.tract_households" type="variable_definition">tract.number_of_agents(household)</variable>
      <variable use="both" source="expression" name="zone.east_honolulu" type="variable_definition">zone.dpa_id==40</variable>
      <variable use="both" source="expression" name="zone.waikiki" type="variable_definition">zone.area_of_interest_id==28</variable>
      <variable use="both" source="primary attribute" name="zone.zone_elevation_mean" type="variable_definition">zone.elevation_mean</variable>
      <variable use="both" source="primary attribute" name="zone.zone_distance_to_coast" type="variable_definition">zone.distance_to_coast</variable>
      <variable use="both" source="primary attribute" name="zone.zone_travel_time_to_waikiki" type="variable_definition">zone.travel_time_to_waikiki</variable>
      <variable use="both" source="primary attribute" name="zone.visitor_units" type="variable_definition">zone.visitor_units</variable>
      <variable use="both" source="expression" name="parcel.p_in_central_oahu" type="variable_definition">parcel.dpa_id==30</variable>
      <variable use="both" source="expression" name="parcel.p_in_ewa" type="variable_definition">parcel.dpa_id==20</variable>
      <variable use="both" source="expression" name="submarket.dpa_is_ewa" type="variable_definition">submarket.disaggregate(zone.dpa_id==20)</variable>
      <variable use="both" source="expression" name="household_x_submarket.dpa_northshore_x_workathome" type="variable_definition">household.aggregate((person.relation==1)*(person.mode_to_work==11))*submarket.disaggregate(zone.dpa_id==70)</variable>
      <variable use="both" source="expression" name="household_x_submarket.dpa_waianae_x_not_in_labor_force" type="variable_definition">household.aggregate((person.relation==1)*(person.employment_status==6))*submarket.disaggregate(zone.dpa_id==80)</variable>
      <variable use="both" source="expression" name="household_x_submarket.dpa_ewa_x_employed" type="variable_definition">household.aggregate((person.relation==1)*(person.employment_status==1))*submarket.disaggregate(zone.dpa_id==20)</variable>
      <variable use="both" source="expression" name="household_x_submarket.dpa_waianae_x_collegegrad" type="variable_definition">household.aggregate((person.relation==1)*(person.education&gt;12))*submarket.disaggregate(zone.dpa_id==80)</variable>
      <variable use="both" source="expression" name="household_x_submarket.dpa_easthonolulu_x_collegegrad" type="variable_definition">household.aggregate((person.relation==1)*(person.education&gt;12))*submarket.disaggregate(zone.dpa_id==40)</variable>
      <variable use="both" source="expression" name="household_x_submarket.dpa_waianae_x_hhsize" type="variable_definition">(household.number_of_agents(person))*(submarket.disaggregate(zone.dpa_id==80))</variable>
      <variable use="both" source="expression" name="household_x_submarket.dpa_ewa_x_hhsize" type="variable_definition">(household.number_of_agents(person))*(submarket.disaggregate(zone.dpa_id==20))</variable>
      <variable use="both" source="expression" name="household_x_submarket.dpa_puc_x_nonfamily" type="variable_definition">(household.family_type==2)*(submarket.disaggregate(zone.dpa_id&lt;14))</variable>
      <variable use="both" source="expression" name="household_x_submarket.dpa_northshore_x_nonfamily" type="variable_definition">(household.family_type==2)*(submarket.disaggregate(zone.dpa_id==70))</variable>
      <variable use="both" source="expression" name="household_x_submarket.dpa_centraloahu_x_black" type="variable_definition">household.aggregate((person.relation==1)*(person.race==2))*submarket.disaggregate(zone.dpa_id==30)</variable>
      <variable use="both" source="expression" name="household_x_submarket.dpa_northshore_x_white" type="variable_definition">household.aggregate((person.relation==1)*(person.race==1))*submarket.disaggregate(zone.dpa_id==70)</variable>
      <variable use="both" source="expression" name="household_x_submarket.dpa_waianae_x_islander" type="variable_definition">household.aggregate((person.relation==1)*(person.race==5))*submarket.disaggregate(zone.dpa_id==80)</variable>
      <variable use="both" source="expression" name="household_x_submarket.dpa_koolauloa_x_islander" type="variable_definition">household.aggregate((person.relation==1)*(person.race==5))*submarket.disaggregate(zone.dpa_id==60)</variable>
      <variable use="both" source="expression" name="household_x_submarket.dpa_easthonolulu_x_median_age" type="variable_definition">(household.aggregate(person.age,function=median))*(submarket.disaggregate(zone.dpa_id==40))</variable>
      <variable use="both" source="expression" name="household_x_submarket.dpa_koolauloa_x_median_age" type="variable_definition">(household.aggregate(person.age,function=median))*(submarket.disaggregate(zone.dpa_id==60))</variable>
      <variable use="both" source="expression" name="household_x_submarket.dpa_waianae_x_median_age" type="variable_definition">(household.aggregate(person.age,function=median))*(submarket.disaggregate(zone.dpa_id==80))</variable>
      <variable use="both" source="expression" name="parcel.p_district9" type="variable_definition">parcel.disaggregate(zone.council_district_id==9)</variable>
      <variable use="both" source="expression" name="parcel.p_district2" type="variable_definition">parcel.disaggregate(zone.council_district_id==2)</variable>
      <variable use="both" source="expression" name="parcel.p_district1" type="variable_definition">parcel.disaggregate(zone.council_district_id==1)</variable>
      <variable use="both" source="expression" name="submarket.district9" type="variable_definition">submarket.disaggregate(zone.council_district_id==9)</variable>
      <variable use="both" source="expression" name="submarket.district4" type="variable_definition">submarket.disaggregate(zone.council_district_id==4)</variable>
      <variable use="both" source="expression" name="submarket.district2" type="variable_definition">submarket.disaggregate(zone.council_district_id==2)</variable>
      <variable use="both" source="expression" name="submarket.district1" type="variable_definition">submarket.disaggregate(zone.council_district_id==1)</variable>
      <variable use="both" source="expression" name="zone.h_test_apt" type="variable_definition">zone.aggregate(((building.residential_units)*(building.building_type_id==3)),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.h_test_dup" type="variable_definition">zone.aggregate(((building.residential_units)*(building.building_type_id==2)),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.h_nprice" type="variable_definition">safe_array_divide(zone.aggregate(building.improvement_value*(building.building_type_id&gt;6)),zone.aggregate(building.non_residential_sqft*(building.building_type_id&gt;6)))</variable>
      <variable use="both" source="expression" name="zone.h_nsqft" type="variable_definition">zone.aggregate(building.non_residential_sqft,intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.zone_jobs_hotel" type="variable_definition">zone.aggregate(building.aggregate(job.sector_id==17),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.zone_jobs_finance" type="variable_definition">zone.aggregate(building.aggregate(job.sector_id==10),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.zone_jobs_retail" type="variable_definition">zone.aggregate(building.aggregate(job.sector_id==9),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.zone_jobs" type="variable_definition">zone.aggregate(building.number_of_agents(job),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.h_kid" type="variable_definition">zone.aggregate(household.children&gt;0,intermediates=[building,parcel])</variable>
      <variable use="both" source="expression" name="zone.h_rprice" type="variable_definition">safe_array_divide(zone.aggregate(building.improvement_value*(building.building_type_id&lt;5)),zone.aggregate(building.residential_units*(building.building_type_id&lt;5)))</variable>
      <variable use="both" source="expression" name="zone.h_rent" type="variable_definition">zone.aggregate(household.tenure==2,intermediates=[building,parcel])</variable>
      <variable use="both" source="expression" name="zone.h_own" type="variable_definition">zone.aggregate(household.tenure==1,intermediates=[building,parcel])</variable>
      <variable use="both" source="expression" name="zone.h_twn" type="variable_definition">zone.aggregate((building.residential_units)*(building.building_type_id==4),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.h_dup" type="variable_definition">zone.aggregate((building.building_type_id==2)*(building.residential_units))</variable>
      <variable use="both" source="expression" name="zone.h_inc3" type="variable_definition">zone.aggregate((household.income&gt;47619)*(household.income&lt;80800),intermediates=[building,parcel])</variable>
      <variable use="both" source="expression" name="zone.h_runit" type="variable_definition">zone.aggregate(building.residential_units,intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.h_apt" type="variable_definition">zone.aggregate((building.building_type_id==3)*(building.residential_units))</variable>
      <variable use="both" source="expression" name="zone.h_sfd" type="variable_definition">zone.aggregate((building.residential_units)*(building.building_type_id==1),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="alldata.hh_in_sf_detached" type="variable_definition">alldata.aggregate_all(household.building_type_id==1)</variable>
      <variable use="both" source="expression" name="alldata.renters" type="variable_definition">alldata.aggregate_all(household.tenure==2)</variable>
      <variable use="both" source="expression" name="alldata.owners" type="variable_definition">alldata.aggregate_all(household.tenure==1)</variable>
      <variable use="both" source="expression" name="alldata.region_households" type="variable_definition">alldata.aggregate_all(building.number_of_agents(household))</variable>
      <variable use="both" source="expression" name="alldata.region_employment_including_unplaced" type="variable_definition">alldata.aggregate_all(job.job_id&gt;0)</variable>
      <variable use="both" source="expression" name="alldata.region_non_residential_sqft" type="variable_definition">alldata.aggregate_all(building.non_residential_sqft)</variable>
      <variable use="both" source="expression" name="alldata.region_employment" type="variable_definition">alldata.aggregate_all(building.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="alldata.region_households_including_unplaced" type="variable_definition">alldata.aggregate_all(household.persons&gt;0)</variable>
      <variable use="both" source="expression" name="alldata.region_dwelling_units" type="variable_definition">alldata.aggregate_all(building.residential_units)</variable>
      <variable use="both" source="expression" name="alldata.region_population" type="variable_definition">alldata.aggregate_all(household.persons)</variable>
      <variable use="both" source="expression" name="zone.h_inc4" type="variable_definition">zone.aggregate(household.income&gt;80799,intermediates=[building,parcel])</variable>
      <variable use="both" source="expression" name="zone.h_inc2" type="variable_definition">zone.aggregate((household.income&gt;20699)*(household.income&lt;47620),intermediates=[building,parcel])</variable>
      <variable use="both" source="expression" name="zone.h_inc1" type="variable_definition">zone.aggregate(household.income&lt;20700,intermediates=[building,parcel])</variable>
      <variable use="both" source="primary attribute" name="zone.zone_acres" type="variable_definition">zone.acres</variable>
      <variable use="both" source="expression" name="zone.zone_household_population" type="variable_definition">zone.aggregate(building.aggregate(household.persons),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="zone.h_hh" type="variable_definition">zone.aggregate(building.number_of_agents(household),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="parcel.p_ln_parcel_sqft" type="variable_definition">ln(parcel.parcel_sqft)</variable>
      <variable use="both" source="expression" name="parcel.parcel_resdensity" type="variable_definition">safe_array_divide(parcel.parcel_sqft,parcel.aggregate(building.residential_units))</variable>
      <variable use="both" source="expression" name="parcel.parcel_travel_time_to_waikiki" type="variable_definition">parcel.disaggregate(zone.travel_time_to_waikiki)</variable>
      <variable use="both" source="expression" name="parcel.parcel_travel_time_to_cbd" type="variable_definition">parcel.disaggregate(zone.travel_time_to_cbd)</variable>
      <variable use="both" source="expression" name="parcel.parcel_stdev_elevation_in_zone" type="variable_definition">parcel.disaggregate(zone.elevation_stdev)</variable>
      <variable use="both" source="expression" name="parcel.parcel_bus_stops_per_acre_in_zone" type="variable_definition">parcel.disaggregate(zone.bus_stops_per_acre)</variable>
      <variable use="both" source="primary attribute" name="parcel.parcel_elevation" type="variable_definition">parcel.elevation</variable>
      <variable use="both" source="primary attribute" name="parcel.parcel_distance_to_public_school" type="variable_definition">parcel.distance_to_public_school</variable>
      <variable use="both" source="primary attribute" name="parcel.parcel_distance_to_park" type="variable_definition">parcel.distance_to_park</variable>
      <variable use="both" source="primary attribute" name="parcel.parcel_distance_to_highway" type="variable_definition">parcel.distance_to_highway</variable>
      <variable use="both" source="primary attribute" name="parcel.parcel_distance_to_bus_stop" type="variable_definition">parcel.distance_to_bus_stop</variable>
      <variable use="model variable" source="Python class" name="employment_submarket.iv_price_residual_esubmarket" type="variable_definition">honolulu_parcel.employment_submarket.price_residual</variable>
      <variable use="model variable" source="Python class" name="employment_submarket.iv_ln_price_residual_esubmarket" type="variable_definition">honolulu_parcel.employment_submarket.ln_price_residual</variable>
      <variable use="both" source="expression" name="household_x_submarket.avg_unit_price_submarket_10xmore_than_income" type="variable_definition">safe_array_divide(safe_array_divide(submarket.aggregate(building.improvement_value),submarket.aggregate(building.residential_units)),household.income)&gt;10</variable>
      <variable use="both" source="expression" name="household_x_submarket.avg_unit_price_submarket_5xmore_than_income" type="variable_definition">safe_array_divide(safe_array_divide(submarket.aggregate(building.improvement_value),submarket.aggregate(building.residential_units)),household.income)&gt;5</variable>
      <variable use="model variable" source="expression" name="household_x_submarket.age_ln_jobs_30_min_submarket" type="variable_definition">household.age_of_head*ln_bounded(submarket.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="submarket.submarket_elevation_stdev" type="variable_definition">submarket.disaggregate(zone.elevation_stdev)</variable>
      <variable use="both" source="expression" name="submarket.submarket_elevation_mean" type="variable_definition">submarket.disaggregate(zone.elevation_mean)</variable>
      <variable use="both" source="expression" name="submarket.submarket_bus_stops_per_acre" type="variable_definition">submarket.disaggregate(zone.bus_stops_per_acre)</variable>
      <variable use="both" source="expression" name="submarket.submarket_distance_to_freeway" type="variable_definition">submarket.disaggregate(zone.distance_to_freeway)</variable>
      <variable use="both" source="expression" name="submarket.submarket_distance_to_coast" type="variable_definition">submarket.disaggregate(zone.distance_to_coast)</variable>
      <variable use="both" source="expression" name="employment_submarket.esubmarket_elevation_stdev" type="variable_definition">employment_submarket.disaggregate(zone.elevation_stdev)</variable>
      <variable use="both" source="expression" name="employment_submarket.esubmarket_elevation_mean" type="variable_definition">employment_submarket.disaggregate(zone.elevation_mean)</variable>
      <variable use="both" source="expression" name="employment_submarket.esubmarket_bus_stops_per_acre" type="variable_definition">employment_submarket.disaggregate(zone.bus_stops_per_acre)</variable>
      <variable use="both" source="expression" name="employment_submarket.esubmarket_distance_to_freeway" type="variable_definition">employment_submarket.disaggregate(zone.distance_to_freeway)</variable>
      <variable use="both" source="expression" name="employment_submarket.esubmarket_distance_to_coast" type="variable_definition">employment_submarket.disaggregate(zone.distance_to_coast)</variable>
      <variable use="both" source="primary attribute" name="parcel.parcel_distance_to_coast" type="variable_definition">parcel.distance_to_coast</variable>
      <variable use="both" source="expression" name="building.jobs10_finance_jobs_in_zone" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==10))</variable>
      <variable use="both" source="expression" name="building.jobs9_retail_jobs_in_zone" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==9))</variable>
      <variable use="both" source="expression" name="building.jobs5_transportation_jobs_in_zone" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==5))</variable>
      <variable use="both" source="expression" name="building.jobs8_warehouse_jobs_in_zone" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==8))</variable>
      <variable use="both" source="expression" name="building.jobs17_hotel_jobs_in_zone" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==17))</variable>
      <variable use="both" source="expression" name="building.jobs4_manufacturing_jobs_in_zone" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==4))</variable>
      <variable use="both" source="expression" name="building.jobs3_foodprocessing_job_in_zone" type="variable_definition">building.disaggregate(zone.aggregate(job.sector_id==3))</variable>
      <variable use="both" source="expression" name="building.num_floors" type="variable_definition">building.stories</variable>
      <variable use="both" source="expression" name="building.in_core_area" type="variable_definition">building.disaggregate((zone.council_district_id&gt;3)*(zone.council_district_id&lt;7),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="building.avg_income_in_neighborhood_board" type="variable_definition">building.disaggregate(neighborhood_board.aggregate(household.income,function=mean,intermediates=[building,parcel]),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="building.residential_density_in_zone" type="variable_definition">building.disaggregate(safe_array_divide((zone.aggregate(building.residential_units,intermediates=[parcel])),(zone.aggregate(building.land_area,intermediates=[parcel]))))</variable>
      <variable use="both" source="expression" name="building.built_pre_1940" type="variable_definition">(building.year_built&gt;1849)*(building.year_built&lt;1941)</variable>
      <variable use="both" source="expression" name="building.parcel_hillshade" type="variable_definition">building.disaggregate(parcel.hillshade)</variable>
      <variable use="both" source="expression" name="building.parcel_elevation" type="variable_definition">building.disaggregate(parcel.elevation)</variable>
      <variable use="both" source="expression" name="building.elevation_range_in_zone" type="variable_definition">building.disaggregate(zone.elevation_range,intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="building.elevation_stdev_in_zone" type="variable_definition">building.disaggregate(zone.elevation_stdev,intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="building.bus_stop_density" type="variable_definition">building.disaggregate(zone.bus_stops_per_acre,intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="building.distance_to_public_school" type="variable_definition">building.disaggregate(parcel.distance_to_public_school)</variable>
      <variable use="both" source="expression" name="building.distance_to_park" type="variable_definition">building.disaggregate(parcel.distance_to_park)</variable>
      <variable use="both" source="expression" name="building.distance_to_the_highway" type="variable_definition">building.disaggregate(parcel.distance_to_highway)</variable>
      <variable use="both" source="expression" name="building.distance_to_coast" type="variable_definition">building.disaggregate(parcel.distance_to_coast)</variable>
      <variable use="both" source="expression" name="building.distance_to_bus_stop" type="variable_definition">building.disaggregate(parcel.distance_to_bus_stop)</variable>
      <variable use="both" source="expression" name="parcel.p_jobs10_finance_jobs_in_zone" type="variable_definition">parcel.disaggregate(zone.aggregate(job.sector_id==10))</variable>
      <variable use="both" source="expression" name="parcel.p_jobs9_retail_jobs_in_zone" type="variable_definition">parcel.disaggregate(zone.aggregate(job.sector_id==9))</variable>
      <variable use="both" source="expression" name="parcel.p_jobs5_transportation_jobs_in_zone" type="variable_definition">parcel.disaggregate(zone.aggregate(job.sector_id==5))</variable>
      <variable use="both" source="expression" name="parcel.p_jobs8_warehouse_jobs_in_zone" type="variable_definition">parcel.disaggregate(zone.aggregate(job.sector_id==8))</variable>
      <variable use="both" source="expression" name="parcel.p_jobs17_hotel_jobs_in_zone" type="variable_definition">parcel.disaggregate(zone.aggregate(job.sector_id==17))</variable>
      <variable use="both" source="expression" name="parcel.p_jobs4_manufacturing_jobs_in_zone" type="variable_definition">parcel.disaggregate(zone.aggregate(job.sector_id==4))</variable>
      <variable use="both" source="expression" name="parcel.p_jobs3_foodprocessing_job_in_zone" type="variable_definition">parcel.disaggregate(zone.aggregate(job.sector_id==3))</variable>
      <variable use="both" source="expression" name="parcel.p_in_core_area" type="variable_definition">parcel.disaggregate((zone.council_district_id&gt;3)*(zone.council_district_id&lt;7),intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="parcel.p_avg_income_in_neighborhood_board" type="variable_definition">parcel.disaggregate(neighborhood_board.aggregate(household.income,function=mean,intermediates=[building,parcel]))</variable>
      <variable use="both" source="expression" name="parcel.p_residential_density_in_zone" type="variable_definition">parcel.disaggregate(safe_array_divide((zone.aggregate(building.residential_units,intermediates=[parcel])),(zone.aggregate(parcel.parcel_sqft/43560))))</variable>
      <variable use="model variable" source="expression" name="parcel.p_ln_pop_10_min" type="variable_definition">ln_bounded(parcel.disaggregate(urbansim_zone.zone.population_within_10_am_single_vehicle_to_work_travel_time_threshold))</variable>
      <variable use="both" source="expression" name="parcel.proportion_sf_units_in_zone" type="variable_definition">parcel.disaggregate(safe_array_divide(zone.aggregate((building.residential_units)*(building.building_type_id==1)), zone.aggregate(building.residential_units)))</variable>
      <variable use="both" source="expression" name="parcel.p_zone_ln_avg_income" type="variable_definition">parcel.disaggregate(ln(zone.aggregate(household.income, function=mean)))</variable>
      <variable use="both" source="expression" name="parcel.p_zone_ln_emp_30_min" type="variable_definition">parcel.disaggregate(ln(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="parcel.p_zone_ln_emp_15_min" type="variable_definition">parcel.disaggregate(ln(urbansim_parcel.zone.employment_within_15_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="parcel.p_zone_ln_pop" type="variable_definition">parcel.disaggregate(ln(zone.aggregate(household.persons)))</variable>
      <variable use="model variable" source="expression" name="parcel.p_zone_ln_jobs" type="variable_definition">parcel.disaggregate(ln(zone.number_of_agents(job)))</variable>
      <variable use="both" source="expression" name="parcel.p_avg_resunit_price_in_zone" type="variable_definition">parcel.disaggregate(safe_array_divide(zone.aggregate(building.improvement_value*(building.building_type_id&lt;5)),zone.aggregate(building.residential_units*(building.building_type_id&lt;5))))</variable>
      <variable use="both" source="expression" name="parcel.p_avg_nonres_sqft_price_in_zone" type="variable_definition">parcel.disaggregate(safe_array_divide(zone.aggregate(building.improvement_value*(building.building_type_id&gt;6)),zone.aggregate(building.non_residential_sqft*(building.building_type_id&gt;6))))</variable>
      <variable use="both" source="primary attribute" name="building.building_year_built" type="variable_definition">building.year_built</variable>
      <variable use="both" source="expression" name="employment_submarket.non_residential_sqft_esubmarket" type="variable_definition">employment_submarket.aggregate(building.non_residential_sqft)</variable>
      <variable use="both" source="expression" name="submarket.average_income_in_submarket" type="variable_definition">submarket.aggregate(household.income,function=mean)</variable>
      <variable use="both" source="expression" name="household_x_submarket.children_x_average_stories" type="variable_definition">household.children*(submarket.aggregate(building.stories)*1.0)/submarket.aggregate(building.stories&gt;0)</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids" type="variable_definition">(household.children&gt;0)*(safe_array_divide(submarket.aggregate(household.children&gt;0),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="submarket.time_to_cbd_submarket" type="variable_definition">submarket.disaggregate(zone.travel_time_to_cbd)</variable>
      <variable use="model variable" source="expression" name="submarket.ln_jobs_30_min_submarket" type="variable_definition">ln_bounded(submarket.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="submarket.avg_unit_price_submarket" type="variable_definition">safe_array_divide(submarket.aggregate(building.improvement_value),submarket.aggregate(building.residential_units))</variable>
      <variable use="both" source="expression" name="household_x_submarket.age_x_average_year_built" type="variable_definition">household.age_of_head*(submarket.aggregate(building.year_built)*1.0)/submarket.aggregate(building.year_built&gt;0)</variable>
      <variable use="both" source="expression" name="household_x_submarket.income_x_average_year_built" type="variable_definition">household.income*(submarket.aggregate(building.year_built)*1.0)/submarket.aggregate(building.year_built&gt;0)</variable>
      <variable use="both" source="expression" name="household_x_submarket.children_x_core_submarket" type="variable_definition">household.children*submarket.disaggregate((zone.council_district_id&gt;3)*(zone.council_district_id&lt;7))</variable>
      <variable use="both" source="expression" name="household_x_submarket.income_x_core_submarket" type="variable_definition">household.income*submarket.disaggregate((zone.council_district_id&gt;3)*(zone.council_district_id&lt;7))</variable>
      <variable use="both" source="expression" name="submarket.core_submarket" type="variable_definition">submarket.disaggregate((zone.council_district_id&gt;3)*(zone.council_district_id&lt;7))</variable>
      <variable use="both" source="expression" name="zone.inner_outer_area" type="variable_definition">(zone.council_district_id&gt;3)*(zone.council_district_id&lt;7)</variable>
      <variable use="both" source="expression" name="household_x_submarket.college_grad_x_time_to_cbd" type="variable_definition">household.aggregate((person.relation==1)*(person.education&gt;12))*submarket.disaggregate(zone.travel_time_to_cbd)</variable>
      <variable use="model variable" source="expression" name="household_x_submarket.hours_head_works_ln_jobs_30_min" type="variable_definition">household.aggregate((person.relation==1)*(person.work_hours))*ln_bounded(submarket.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="household_x_submarket.hours_head_works_x_time_to_cbd" type="variable_definition">household.aggregate((person.relation==1)*(person.work_hours))*submarket.disaggregate(zone.travel_time_to_cbd)</variable>
      <variable use="both" source="expression" name="household_x_submarket.fulltime_x_distance_to_waikiki" type="variable_definition">household.aggregate((person.relation==1)*(person.work_hours&gt;39))*submarket.disaggregate(zone.travel_time_to_waikiki)</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_40plus_hrs_worked_if_hh_head_does" type="variable_definition">household.aggregate((person.relation==1)*(person.work_hours&gt;39))*(safe_array_divide(submarket.aggregate(household.aggregate((person.relation==1)*(person.work_hours&gt;39))),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_college_grad_if_hh_head_grad" type="variable_definition">household.aggregate((person.relation==1)*(person.education&gt;12))*(safe_array_divide(submarket.aggregate(household.aggregate((person.relation==1)*(person.education&gt;12))),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle" type="variable_definition">(household.vehicles==0)*(safe_array_divide(submarket.aggregate(household.vehicles==0),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle" type="variable_definition">(household.vehicles&gt;2)*(safe_array_divide(submarket.aggregate(household.vehicles&gt;2),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_more_than_1_vehicle_if_hh_more_than_1_vehicle" type="variable_definition">(household.vehicles&gt;1)*(safe_array_divide(submarket.aggregate(household.vehicles&gt;1),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="household_x_submarket.age_x_travel_time_to_waikiki" type="variable_definition">household.age_of_head*submarket.disaggregate(zone.travel_time_to_waikiki)</variable>
      <variable use="both" source="expression" name="household_x_submarket.workers_x_travel_time_to_waikiki_submarket" type="variable_definition">household.workers*submarket.disaggregate(zone.travel_time_to_waikiki)</variable>
      <variable use="both" source="expression" name="submarket.travel_time_to_waikiki_submarket" type="variable_definition">submarket.disaggregate(zone.travel_time_to_waikiki)</variable>
      <variable use="both" source="expression" name="employment_submarket.travel_time_to_waikiki_esubmarket" type="variable_definition">employment_submarket.disaggregate(zone.travel_time_to_waikiki)</variable>
      <variable use="both" source="expression" name="household_x_submarket.vehicles_x_average_stories" type="variable_definition">household.vehicles*(submarket.aggregate(building.stories)*1.0)/submarket.aggregate(building.stories&gt;0)</variable>
      <variable use="both" source="expression" name="household_x_submarket.hhsize_x_ln_job_density" type="variable_definition">household.persons*ln(submarket.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="both" source="expression" name="household_x_submarket.vehicles_x_ln_job_density" type="variable_definition">household.vehicles*ln(submarket.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="both" source="expression" name="household_x_submarket.age_x_ln_job_density" type="variable_definition">household.age_of_head*ln(submarket.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="both" source="expression" name="household_x_submarket.income_x_ln_job_density" type="variable_definition">household.income*ln(submarket.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="both" source="expression" name="household_x_submarket.workers_x_ln_job_density" type="variable_definition">household.workers*ln(submarket.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="model variable" source="expression" name="household_x_submarket.children_ln_jobs_30_min_submarket" type="variable_definition">household.children*ln_bounded(submarket.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="household_x_submarket.income_ln_jobs_30_min_submarket" type="variable_definition">household.income*ln_bounded(submarket.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="household_x_submarket.hh_income_within50percent_submarket_avginc" type="variable_definition">(safe_array_divide(household.income,(submarket.aggregate(household.income, function=mean)))&gt;.5)*(safe_array_divide(household.income,(submarket.aggregate(household.income, function=mean)))&lt;1.5)</variable>
      <variable use="both" source="expression" name="household_x_submarket.children_x_ln_job_density" type="variable_definition">household.children*ln(submarket.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_younghead_if_hh_younghead" type="variable_definition">household.aggregate((person.relation==1)*(person.age&lt;30))*(safe_array_divide(submarket.aggregate(household.aggregate((person.relation==1)*(person.age&lt;30))),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_white_if_hh_white" type="variable_definition">household.aggregate((person.relation==1)*(person.race==1))*(safe_array_divide(submarket.aggregate(household.aggregate((person.relation==1)*(person.race==1))),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_asian_if_hh_asian" type="variable_definition">household.aggregate((person.relation==1)*(person.race==4))*(safe_array_divide(submarket.aggregate(household.aggregate((person.relation==1)*(person.race==4))),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="submarket.average_stories" type="variable_definition">(submarket.aggregate(building.stories)*1.0)/submarket.aggregate(building.stories&gt;0)</variable>
      <variable use="both" source="expression" name="submarket.average_year_built" type="variable_definition">(submarket.aggregate(building.year_built)*1.0)/submarket.aggregate(building.year_built&gt;0)</variable>
      <variable use="both" source="expression" name="submarket.ln_avg_unit_size" type="variable_definition">safe_array_divide(submarket.aggregate(building.total_building_sqft - building.non_residential_sqft),submarket.aggregate(building.residential_units))</variable>
      <variable use="both" source="expression" name="submarket.ln_job_density_zone_submarket" type="variable_definition">ln(submarket.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="both" source="expression" name="employment_submarket.ln_job_density_zone_esubmarket" type="variable_definition">ln(employment_submarket.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="both" source="expression" name="submarket.ln_avg_unit_price_submarket" type="variable_definition">ln(safe_array_divide(submarket.aggregate(building.improvement_value),submarket.aggregate(building.residential_units)))</variable>
      <variable use="both" source="expression" name="submarket.ln_residential_units_in_submarket" type="variable_definition">ln(submarket.aggregate(building.residential_units))</variable>
      <variable use="both" source="expression" name="employment_submarket.ln_residential_units_esubmarket" type="variable_definition">ln(employment_submarket.aggregate(building.residential_units))</variable>
      <variable use="both" source="expression" name="household_x_submarket.hh_income_close_to_submarket_avginc" type="variable_definition">(safe_array_divide(household.income,(submarket.aggregate(household.income, function=mean)))&gt;.8)*(safe_array_divide(household.income,(submarket.aggregate(household.income, function=mean)))&lt;1.2)</variable>
      <variable use="both" source="expression" name="submarket.proportion_renter_hh_in_submarket" type="variable_definition">safe_array_divide(submarket.aggregate(household.tenure==2),submarket.number_of_agents(household))</variable>
      <variable use="both" source="expression" name="building.jobs1_agriculture" type="variable_definition">building.aggregate(job.sector_id==1)</variable>
      <variable use="both" source="expression" name="building.jobs2_miningconstruct" type="variable_definition">building.aggregate(job.sector_id==2)</variable>
      <variable use="both" source="expression" name="building.jobs3_foodprocess" type="variable_definition">building.aggregate(job.sector_id==3)</variable>
      <variable use="both" source="expression" name="building.jobs4_manufacture" type="variable_definition">building.aggregate(job.sector_id==4)</variable>
      <variable use="both" source="expression" name="building.jobs5_transport" type="variable_definition">building.aggregate(job.sector_id==5)</variable>
      <variable use="both" source="expression" name="building.jobs6_information" type="variable_definition">building.aggregate(job.sector_id==6)</variable>
      <variable use="both" source="expression" name="building.jobs7_utilities" type="variable_definition">building.aggregate(job.sector_id==7)</variable>
      <variable use="both" source="expression" name="building.jobs8_wholesale" type="variable_definition">building.aggregate(job.sector_id==8)</variable>
      <variable use="both" source="expression" name="building.jobs9_retail" type="variable_definition">building.aggregate(job.sector_id==9)</variable>
      <variable use="both" source="expression" name="building.jobs10_finance" type="variable_definition">building.aggregate(job.sector_id==10)</variable>
      <variable use="both" source="expression" name="building.jobs11_realestate" type="variable_definition">building.aggregate(job.sector_id==11)</variable>
      <variable use="both" source="expression" name="building.jobs12_professional" type="variable_definition">building.aggregate(job.sector_id==12)</variable>
      <variable use="both" source="expression" name="building.jobs13_business" type="variable_definition">building.aggregate(job.sector_id==13)</variable>
      <variable use="both" source="expression" name="building.jobs14_education" type="variable_definition">building.aggregate(job.sector_id==14)</variable>
      <variable use="both" source="expression" name="building.jobs15_health" type="variable_definition">building.aggregate(job.sector_id==15)</variable>
      <variable use="both" source="expression" name="building.jobs16_entertain" type="variable_definition">building.aggregate(job.sector_id==16)</variable>
      <variable use="both" source="expression" name="building.jobs17_hotel" type="variable_definition">building.aggregate(job.sector_id==17)</variable>
      <variable use="both" source="expression" name="building.jobs18_eatdrink" type="variable_definition">building.aggregate(job.sector_id==18)</variable>
      <variable use="both" source="expression" name="building.jobs19_otherservices" type="variable_definition">building.aggregate(job.sector_id==19)</variable>
      <variable use="both" source="expression" name="building.jobs20_gov" type="variable_definition">building.aggregate(job.sector_id==20)</variable>
      <variable use="both" source="expression" name="employment_submarket.jobs20_gov_esubmarket" type="variable_definition">employment_submarket.aggregate(job.sector_id==20,intermediates=[building])</variable>
      <variable use="both" source="expression" name="employment_submarket.jobs_esubmarket" type="variable_definition">employment_submarket.aggregate(building.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.industrial_repair_sqft" type="variable_definition">(building.building_type_id==8)*(building.non_residential_sqft)</variable>
      <variable use="both" source="expression" name="building.gov_jobs" type="variable_definition">building.aggregate(job.sector_id==20)</variable>
      <variable use="both" source="expression" name="household.head_is_asian" type="variable_definition">household.aggregate((person.relation==1)*(person.race==4))</variable>
      <variable use="both" source="expression" name="household.head_is_white" type="variable_definition">household.aggregate((person.relation==1)*(person.race==1))</variable>
      <variable use="both" source="expression" name="household.wealthy_hh" type="variable_definition">household.income_group&gt;6</variable>
      <variable use="both" source="expression" name="household.workers_per_person" type="variable_definition">safe_array_divide(household.workers * 1.0,household.persons)</variable>
      <variable use="both" source="expression" name="household.avg_edu_hh" type="variable_definition">household.aggregate(person.education, function=mean)</variable>
      <variable use="both" source="expression" name="building.is_central" type="variable_definition">(building.disaggregate((zone.council_district_id&gt;3)*(zone.council_district_id&lt;7)))</variable>
      <variable use="both" source="expression" name="building.council_district1" type="variable_definition">(building.disaggregate(zone.council_district_id==1))</variable>
      <variable use="both" source="expression" name="building.council_district2" type="variable_definition">(building.disaggregate(zone.council_district_id==2))</variable>
      <variable use="both" source="expression" name="building.council_district3" type="variable_definition">(building.disaggregate(zone.council_district_id==3))</variable>
      <variable use="both" source="expression" name="building.council_district4" type="variable_definition">(building.disaggregate(zone.council_district_id==4))</variable>
      <variable use="both" source="expression" name="building.council_district5" type="variable_definition">(building.disaggregate(zone.council_district_id==5))</variable>
      <variable use="both" source="expression" name="building.council_district6" type="variable_definition">(building.disaggregate(zone.council_district_id==6))</variable>
      <variable use="both" source="expression" name="building.council_district7" type="variable_definition">(building.disaggregate(zone.council_district_id==7))</variable>
      <variable use="both" source="expression" name="building.council_district8" type="variable_definition">(building.disaggregate(zone.council_district_id==8))</variable>
      <variable use="both" source="expression" name="building.council_district9" type="variable_definition">(building.disaggregate(zone.council_district_id==9))</variable>
      <variable use="both" source="expression" name="household.council_district_id" type="variable_definition"> household.area_type + 1</variable>
      <variable use="both" source="expression" name="household.typetenurearea_id" type="variable_definition">1*((household.building_type_id==1)*(household.tenure==1)*(household.area_type==1))+2*((household.building_type_id==1)*(household.tenure==2)*(household.area_type==1))+ 3*((household.building_type_id==2)*(household.tenure==1)*(household.area_type==1))+4*((household.building_type_id==2)*(household.tenure==2)*(household.area_type==1))+ 5*((household.building_type_id==3)*(household.tenure==1)*(household.area_type==1))+6*((household.building_type_id==3)*(household.tenure==2)*(household.area_type==1))+ 7*((household.building_type_id==4)*(household.tenure==1)*(household.area_type==1))+8*((household.building_type_id==4)*(household.tenure==2)*(household.area_type==1))+ 9*((household.building_type_id==1)*(household.tenure==1)*(household.area_type==0))+10*((household.building_type_id==1)*(household.tenure==2)*(household.area_type==0))+ 11*((household.building_type_id==2)*(household.tenure==1)*(household.area_type==0))+12*((household.building_type_id==2)*(household.tenure==2)*(household.area_type==0))+ 13*((household.building_type_id==3)*(household.tenure==1)*(household.area_type==0))+14*((household.building_type_id==3)*(household.tenure==2)*(household.area_type==0))+ 15*((household.building_type_id==4)*(household.tenure==1)*(household.area_type==0))+16*((household.building_type_id==4)*(household.tenure==2)*(household.area_type==0))</variable>
      <variable use="both" source="expression" name="zone.zone_proportion_hh_in_apartment" type="variable_definition">safe_array_divide(zone.aggregate(building.aggregate(household.building_type_id==3) + building.aggregate(household.building_type_id==37)),zone.aggregate(building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="zone.zone_proportion_largehh" type="variable_definition">safe_array_divide(zone.aggregate(building.aggregate(household.persons&gt;3)),zone.aggregate(building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="zone.zone_proportion_oldhead" type="variable_definition">safe_array_divide(zone.aggregate(building.aggregate(household.age_of_head&gt;64)),zone.aggregate(building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="zone.zone_proportion_wealthy" type="variable_definition">safe_array_divide(zone.aggregate(building.aggregate(household.income_group&gt;6)),zone.aggregate(building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="building.ln_households_within_30_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.households_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="building.ln_households_within_10_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.households_within_10_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="building.ln_pop_10_min" type="variable_definition">ln_bounded(building.disaggregate(urbansim_zone.zone.population_within_10_am_single_vehicle_to_work_travel_time_threshold))</variable>
      <variable use="model variable" source="expression" name="employment_submarket.ln_pop_10_min_esubmarket" type="variable_definition">ln_bounded(employment_submarket.disaggregate(urbansim_zone.zone.population_within_10_am_single_vehicle_to_work_travel_time_threshold))</variable>
      <variable use="both" source="expression" name="zone.zonal_households" type="variable_definition">zone.aggregate(building.number_of_agents(household))</variable>
      <variable use="both" source="expression" name="zone.zone_ln_pop_1" type="variable_definition">ln(zone.aggregate(household.persons))</variable>
      <variable use="both" source="expression" name="building.hotel_sqft" type="variable_definition">(building.building_type_id==7)*(building.non_residential_sqft)</variable>
      <variable use="both" source="expression" name="employment_submarket.hotel_sqft_esubmarket" type="variable_definition">(employment_submarket.building_type_id==4)*(employment_submarket.aggregate(building.non_residential_sqft))</variable>
      <variable use="both" source="expression" name="building.land_per_nonres_sqft" type="variable_definition">(building.land_area*1.0)/building.non_residential_sqft</variable>
      <variable use="both" source="expression" name="employment_submarket.land_per_nonres_sqft_esubmarket" type="variable_definition">safe_array_divide(employment_submarket.aggregate(building.land_area),employment_submarket.aggregate(building.non_residential_sqft))</variable>
      <variable use="both" source="expression" name="building.average_value_per_sqft" type="variable_definition">building.average_value_per_unit * building.disaggregate(building_type.is_residential==0)</variable>
      <variable use="both" source="expression" name="employment_submarket.average_value_per_sqft_esubmarket" type="variable_definition">safe_array_divide(employment_submarket.aggregate(building.improvement_value),employment_submarket.aggregate(building.non_residential_sqft))</variable>
      <variable use="both" source="expression" name="employment_submarket.ln_average_value_per_sqft_esubmarket" type="variable_definition">ln(safe_array_divide(employment_submarket.aggregate(building.improvement_value),employment_submarket.aggregate(building.non_residential_sqft)))</variable>
      <variable use="both" source="primary attribute" name="household.year_moved" type="variable_definition">household.year_moved</variable>
      <variable use="both" source="expression" name="building.emp_retail_200" type="variable_definition">where(building.disaggregate(zone.aggregate(job.sector_id==9))&lt;200,building.disaggregate(zone.aggregate(job.sector_id==9)),200)/200</variable>
      <variable use="both" source="expression" name="building.land_per_unit_1k" type="variable_definition">(building.land_area/building.residential_units)/1000</variable>
      <variable use="both" source="expression" name="household_x_building.children_and_lot_size" type="variable_definition">ln_bounded(household.children*((building.land_area/building.residential_units)/1000))</variable>
      <variable use="both" source="expression" name="building.ln_bldg_landarea" type="variable_definition">ln_bounded(building.land_area)</variable>
      <variable use="both" source="expression" name="building.res_sqft_per_unit_1k" type="variable_definition">building.sqft_per_unit*(building.building_type_id&lt;3)/1000</variable>
      <variable use="both" source="expression" name="building.ln_price" type="variable_definition">ln_bounded(building.average_value_per_unit)</variable>
      <variable use="both" source="expression" name="household.young_adults" type="variable_definition">(household.children==0)*(household.age_of_head&lt;35)*(household.aggregate(person.age&gt;34) ==0)*(household.aggregate(person.age&lt;25) ==0)</variable>
      <variable use="both" source="expression" name="household.renter_hh" type="variable_definition">household.tenure==2</variable>
      <variable use="both" source="expression" name="building.year_built_building" type="variable_definition">(building.year_built) * (building.year_built &gt; 0)</variable>
      <variable use="both" source="expression" name="building.apartment_unit_price" type="variable_definition">(building.building_type_id==3) * (building.average_value_per_unit)</variable>
      <variable use="both" source="expression" name="building.apartment_units" type="variable_definition">(building.building_type_id==3) * (building.residential_units)</variable>
      <variable use="model variable" source="expression" name="building.ln_avg_val_res_sqft" type="variable_definition">safe_array_divide(building.improvement_value,building.residential_sqft)</variable>
      <variable use="both" source="expression" name="building.ln_sqft_per_unit" type="variable_definition">ln(building.sqft_per_unit)</variable>
      <variable use="both" source="primary attribute" name="building.sqft_per_unit" type="variable_definition">building.sqft_per_unit</variable>
      <variable use="both" source="expression" name="building.proportion_apartment_zone" type="variable_definition">building.disaggregate(safe_array_divide(zone.aggregate((building.residential_units)*(building.building_type_id==3)), zone.aggregate(building.residential_units)))</variable>
      <variable use="both" source="expression" name="building.ln_apartment_unit_price" type="variable_definition">ln((building.building_type_id==3) * (building.average_value_per_unit))</variable>
      <variable use="both" source="expression" name="building.ln_apartment_units" type="variable_definition">ln((building.building_type_id==3) * (building.residential_units))</variable>
      <variable use="model variable" source="expression" name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket" type="variable_definition">safe_array_divide(household.workers,household.persons)*ln_bounded(submarket.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="building.proportion_sf_zone" type="variable_definition">building.disaggregate(safe_array_divide(zone.aggregate((building.residential_units)*(building.building_type_id==1)), zone.aggregate(building.residential_units)))</variable>
      <variable use="both" source="expression" name="household_x_building.inc_avginc_ratio_close" type="variable_definition">(safe_array_divide(household.income,(building.aggregate(household.income, function=mean)))&gt;.8)*(safe_array_divide(household.income,(building.aggregate(household.income, function=mean)))&lt;1.2)</variable>
      <variable use="both" source="expression" name="household_x_building.children_x_apartment" type="variable_definition">(household.children&gt;1) * (building.building_type_id==3)</variable>
      <variable use="both" source="expression" name="household_x_building.highinc_yearbuilt" type="variable_definition">(household.income_group&gt;6) * (building.year_built &gt; 1990)</variable>
      <variable use="both" source="expression" name="household_x_building.younghh_apartment" type="variable_definition">(household.age_of_head &lt; 35)*(building.building_type_id == 3)</variable>
      <variable use="both" source="expression" name="building.travel_time_to_waikiki" type="variable_definition">building.disaggregate(zone.travel_time_to_waikiki)</variable>
      <variable use="both" source="expression" name="zone.zone_ln_time_cbd" type="variable_definition">ln(zone.travel_time_to_cbd)</variable>
      <variable use="both" source="expression" name="zone.zone_ln_res_units" type="variable_definition">ln(zone.aggregate(building.residential_units))</variable>
      <variable use="both" source="primary attribute" name="zone.zone_time_cbd" type="variable_definition">zone.travel_time_to_cbd</variable>
      <variable use="both" source="expression" name="zone.zone_ln_avg_income" type="variable_definition">ln(zone.aggregate(household.income, function=mean))</variable>
      <variable use="both" source="expression" name="building.ln_inv_far" type="variable_definition">ln(safe_array_divide(building.land_area, building.non_residential_sqft))</variable>
      <variable use="both" source="expression" name="building.ln_pop_zone" type="variable_definition">ln(building.disaggregate(zone.aggregate(household.persons)))</variable>
      <variable use="both" source="expression" name="building.ln_non_residential_sqft" type="variable_definition">ln(building.non_residential_sqft)</variable>
      <variable use="both" source="expression" name="employment_submarket.ln_non_residential_sqft_esubmarket" type="variable_definition">ln(employment_submarket.aggregate(building.non_residential_sqft))</variable>
      <variable use="model variable" source="primary attribute" name="building.unit_price" type="variable_definition">building.average_value_per_unit</variable>
      <variable use="both" source="expression" name="building.is_transport" type="variable_definition">building.building_type_id==18</variable>
      <variable use="both" source="expression" name="building.is_manufacturing" type="variable_definition">building.building_type_id==9</variable>
      <variable use="both" source="expression" name="building.is_office" type="variable_definition">building.building_type_id==22</variable>
      <variable use="both" source="expression" name="building.is_parking" type="variable_definition">building.building_type_id==33</variable>
      <variable use="both" source="expression" name="building.is_warehouse" type="variable_definition">building.building_type_id==15</variable>
      <variable use="both" source="expression" name="building.is_service_shops_supplies" type="variable_definition">building.building_type_id==24</variable>
      <variable use="both" source="expression" name="building.is_neighborhood_retail" type="variable_definition">building.building_type_id==19</variable>
      <variable use="both" source="expression" name="building.is_utility" type="variable_definition">building.building_type_id==13</variable>
      <variable use="both" source="expression" name="building.is_regional_retail" type="variable_definition">building.building_type_id==20</variable>
      <variable use="both" source="expression" name="building.is_classroom" type="variable_definition">building.building_type_id==29</variable>
      <variable use="both" source="expression" name="building.is_hospital" type="variable_definition">building.building_type_id==30</variable>
      <variable use="both" source="expression" name="building.is_community" type="variable_definition">building.building_type_id==28</variable>
      <variable use="both" source="expression" name="building.is_hotel" type="variable_definition">building.building_type_id==7</variable>
      <variable use="both" source="expression" name="building.is_singlefam" type="variable_definition">building.building_type_id==1</variable>
      <variable use="both" source="expression" name="building.is_duplex" type="variable_definition">building.building_type_id==2</variable>
      <variable use="both" source="expression" name="building.is_apartment" type="variable_definition">building.building_type_id==3</variable>
      <variable use="both" source="expression" name="building.is_townhome" type="variable_definition">building.building_type_id==4</variable>
      <variable use="both" source="expression" name="employment_submarket.is_transport_esubmarket" type="variable_definition">employment_submarket.building_type_id==7</variable>
      <variable use="both" source="expression" name="employment_submarket.is_manufacturing_esubmarket" type="variable_definition">employment_submarket.building_type_id==6</variable>
      <variable use="both" source="expression" name="employment_submarket.is_office_esubmarket" type="variable_definition">employment_submarket.building_type_id==8</variable>
      <variable use="both" source="expression" name="employment_submarket.is_parking_esubmarket" type="variable_definition">employment_submarket.building_type_id==11</variable>
      <variable use="both" source="expression" name="employment_submarket.is_warehouse_esubmarket" type="variable_definition">employment_submarket.building_type_id==7</variable>
      <variable use="both" source="expression" name="employment_submarket.is_service_shops_supplies_esubmarket" type="variable_definition">employment_submarket.building_type_id==9</variable>
      <variable use="both" source="expression" name="employment_submarket.is_neighborhood_retail_esubmarket" type="variable_definition">employment_submarket.building_type_id==9</variable>
      <variable use="both" source="expression" name="employment_submarket.is_utility_esubmarket" type="variable_definition">employment_submarket.building_type_id==6</variable>
      <variable use="both" source="expression" name="employment_submarket.is_regional_retail_esubmarket" type="variable_definition">employment_submarket.building_type_id==20</variable>
      <variable use="both" source="expression" name="employment_submarket.is_classroom_esubmarket" type="variable_definition">employment_submarket.building_type_id==10</variable>
      <variable use="both" source="expression" name="employment_submarket.is_hospital_esubmarket" type="variable_definition">employment_submarket.building_type_id==10</variable>
      <variable use="both" source="expression" name="employment_submarket.is_community_esubmarket" type="variable_definition">employment_submarket.building_type_id==10</variable>
      <variable use="both" source="expression" name="employment_submarket.is_hotel_esubmarket" type="variable_definition">employment_submarket.building_type_id==7</variable>
      <variable use="both" source="expression" name="employment_submarket.is_singlefam_esubmarket" type="variable_definition">employment_submarket.building_type_id==1</variable>
      <variable use="both" source="expression" name="employment_submarket.is_duplex_esubmarket" type="variable_definition">employment_submarket.building_type_id==2</variable>
      <variable use="both" source="expression" name="employment_submarket.is_apartment_esubmarket" type="variable_definition">employment_submarket.building_type_id==3</variable>
      <variable use="both" source="expression" name="employment_submarket.is_townhome_esubmarket" type="variable_definition">employment_submarket.building_type_id==4</variable>
      <variable use="both" source="expression" name="building.ln_land_per_unit" type="variable_definition">ln_bounded(safe_array_divide(building.land_area, building.residential_units))</variable>
      <variable use="model variable" source="expression" name="building.ln_avg_hh_income" type="variable_definition">building.disaggregate(ln(zone.aggregate(household.income, function=mean,intermediates=[building,parcel])))</variable>
      <variable use="both" source="expression" name="building.land_per_unit" type="variable_definition">building.land_area/building.residential_units</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs_within_30_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="employment_submarket.ln_jobs_within_30_min_esubmarket" type="variable_definition">ln(employment_submarket.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="employment_submarket.ln_jobs_within_15_min_esubmarket" type="variable_definition">ln(employment_submarket.disaggregate(urbansim_parcel.zone.employment_within_15_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="building.ln_number_jobs_retail" type="variable_definition">ln(building.disaggregate(urbansim.zone.number_of_jobs_of_sector_5))</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs_within_15_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.employment_within_15_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="building.ln_pop_density_zone" type="variable_definition">ln(43560*safe_array_divide(building.aggregate(household.persons), building.disaggregate(zone.aggregate(building.land_area))))</variable>
      <variable use="model variable" source="expression" name="building.cbd_time_sq" type="variable_definition">building.disaggregate(zone.travel_time_to_cbd)**2</variable>
      <variable use="model variable" source="expression" name="building.ln_cbd_time" type="variable_definition">ln(building.disaggregate(zone.travel_time_to_cbd))</variable>
      <variable use="model variable" source="expression" name="building.ln_avg_hh_income_zonal" type="variable_definition">building.disaggregate(ln(zone.aggregate(household.income, function=mean,intermediates=[building,parcel])))</variable>
      <variable use="model variable" source="primary attribute" name="building.ln_avg_val_per_unit" type="variable_definition">ln(building.average_value_per_unit)</variable>
      <variable use="both" source="expression" name="building.ln_residential_units" type="variable_definition">ln(building.residential_units)</variable>
      <variable use="both" source="expression" name="building.is_single_family" type="variable_definition">building.building_type_id == 1</variable>
      <variable use="both" source="expression" name="building.ln_job_density_zone" type="variable_definition">ln(building.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="model variable" source="primary attribute" name="building.avg_value_per_unit" type="variable_definition">building.average_value_per_unit</variable>
      <variable use="model variable" source="expression" name="building.avg_hh_income" type="variable_definition">building.aggregate(household.income, function=mean)</variable>
      <variable use="model variable" source="expression" name="building.avg_hh_income_zonal" type="variable_definition">building.disaggregate(zone.aggregate(household.income, function=mean, intermediates=[parcel]))</variable>
      <variable use="model variable" source="expression" name="employment_submarket.avg_hh_income_zonal_esubmarket" type="variable_definition">employment_submarket.disaggregate(zone.aggregate(household.income, function=mean))</variable>
      <variable use="model variable" source="expression" name="building.inv_jobs" type="variable_definition">safe_array_divide(1,(building.number_of_agents(job)),0)</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs" type="variable_definition">ln(building.number_of_agents(job))</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs_in_zone" type="variable_definition">ln(building.disaggregate(zone.number_of_agents(job)))</variable>
      <variable use="model variable" source="expression" name="building.ln_dev_acre_in_zone" type="variable_definition">ln(building.disaggregate(zone.dev_acre))</variable>
      <variable use="both" source="expression" name="building.zone_ln_emp_30_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="building.cbd_time" type="variable_definition">building.disaggregate(zone.travel_time_to_cbd, intermediates=[parcel])</variable>
      <variable use="model variable" source="expression" name="employment_submarket.cbd_time_esubmarket" type="variable_definition">employment_submarket.disaggregate(zone.travel_time_to_cbd)</variable>
      <variable use="both" source="expression" name="building.ln_sf_unit_price" type="variable_definition">ln((building.building_type_id==1) * (building.average_value_per_unit))</variable>
      <variable use="both" source="expression" name="building.ln_sf_units" type="variable_definition">ln((building.building_type_id==1) * (building.residential_units))</variable>
      <variable use="both" source="expression" name="building.ln_mf_unit_price" type="variable_definition">ln((building.building_type_id==3) * (building.average_value_per_unit))</variable>
      <variable use="both" source="expression" name="building.ln_mf_units" type="variable_definition">ln((building.building_type_id==3) * (building.residential_units))</variable>
      <variable use="both" source="expression" name="building.ln_average_value_per_sqft" type="variable_definition">ln(building.average_value_per_unit * building.disaggregate(building_type.is_residential==0))</variable>
      <variable use="both" source="expression" name="household.workers_id" type="variable_definition"> 1*(household.workers==0) +2*(household.workers==1) +3*(household.workers&gt;=2)</variable>
      <variable use="both" source="expression" name="household.typetenure_id" type="variable_definition"> 1*((household.building_type_id==1)*(household.tenure==1))+2*((household.building_type_id==35)*(household.tenure==2))+ 3*((household.building_type_id==2)*(household.tenure==1))+4*((household.building_type_id==36)*(household.tenure==2))+ 5*((household.building_type_id==3)*(household.tenure==1))+6*((household.building_type_id==37)*(household.tenure==2))+ 7*((household.building_type_id==4)*(household.tenure==1))+8*((household.building_type_id==38)*(household.tenure==2))</variable>
      <variable use="both" source="primary attribute" name="household.age_of_head" type="variable_definition">household.age_of_head</variable>
      <variable use="both" source="expression" name="household.oldhead" type="variable_definition">household.age_of_head &gt; 64</variable>
      <variable use="both" source="primary attribute" name="household.persons" type="variable_definition">household.persons</variable>
      <variable use="both" source="primary attribute" name="household.children" type="variable_definition">household.children</variable>
      <variable use="both" source="primary attribute" name="household.workers" type="variable_definition">household.workers</variable>
      <variable use="both" source="primary attribute" name="household.income" type="variable_definition">household.income</variable>
      <variable use="both" source="expression" name="household.ln_income" type="variable_definition">ln(household.income)</variable>
      <variable use="both" source="expression" name="household.nonfamily" type="variable_definition">household.family_type==2</variable>
      <variable use="both" source="primary attribute" name="household.vehicles" type="variable_definition">household.vehicles</variable>
      <variable use="both" source="expression" name="household.veh_per_person" type="variable_definition">safe_array_divide(household.vehicles * 1.0,household.persons)</variable>
      <variable use="both" source="expression" name="household.enrollment_of_head" type="variable_definition">household.aggregate((person.school_enrollment&gt;1)*(person.relation ==1)) </variable>
      <variable use="both" source="primary attribute" name="household.building_type_id" type="variable_definition">household.building_type_id</variable>
      <variable use="both" source="expression" name="household.buildingtype_id" type="variable_definition"> 1*(household.building_type_id==1) +2*(household.building_type_id==2) +3*(household.building_type_id==3) + 4*(household.building_type_id==4)</variable>
      <variable use="both" source="expression" name="building.proportion_renter_hh" type="variable_definition">(safe_array_divide(building.aggregate(household.tenure==2), building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="building.households_in_zone" type="variable_definition">building.disaggregate(zone.aggregate(building.number_of_agents(household)), intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="employment_submarket.households_in_zone_esubmarket" type="variable_definition">employment_submarket.disaggregate(zone.aggregate(building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="household_x_submarket.hh_income_x_average_unit_size" type="variable_definition">household.income*(submarket.aggregate(building.building_sqft - building.non_residential_sqft)*1.0)/submarket.aggregate(building.residential_units)</variable>
      <variable use="both" source="expression" name="household_x_submarket.hh_cars_x_single_family_detached" type="variable_definition">(household.cars)*(submarket.building_type==1)</variable>
      <variable use="both" source="expression" name="household_x_submarket.young_head_of_hh_x_multifamily" type="variable_definition">(household.age_of_head&lt;35)*(submarket.building_type==3)</variable>
      <variable use="both" source="expression" name="submarket.average_unit_size" type="variable_definition">(submarket.aggregate(building.total_building_sqft - building.non_residential_sqft)*1.0)/submarket.aggregate(building.residential_units)</variable>
      <variable use="both" source="expression" name="submarket.median_age_of_head" type="variable_definition">submarket.aggregate(household.age_of_head, function=median)</variable>
      <variable use="both" source="expression" name="submarket.median_stories" type="variable_definition">submarket.aggregate(building.stories, function=median)</variable>
      <variable use="both" source="expression" name="submarket.median_year_built" type="variable_definition">submarket.aggregate(building.year_built, function=median)</variable>
      <variable use="both" source="expression" name="submarket.proportion_hh_where_cars_exceed_persons" type="variable_definition">(safe_array_divide(submarket.aggregate(household.cars&gt;household.persons), submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="submarket.number_of_households" type="variable_definition">submarket.number_of_agents(household)</variable>
      <variable use="both" source="expression" name="submarket.residential_units" type="variable_definition">submarket.aggregate(building.residential_units)</variable>
      <variable use="both" source="expression" name="residential_building_type.number_of_households" type="variable_definition">residential_building_type.number_of_agents(household)</variable>
      <variable use="both" source="expression" name="residential_building_type.residential_units" type="variable_definition">residential_building_type.aggregate(building.residential_units)</variable>
      <variable use="model variable" source="expression" name="submarket.iv_price_residual" type="variable_definition">honolulu_parcel.submarket.price_residual</variable>
      <variable use="model variable" source="expression" name="submarket.iv_ln_price_residual" type="variable_definition">honolulu_parcel.submarket.ln_price_residual</variable>
    </expression_library>
    <dataset_pool_configuration type="class" hidden="True">
      <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
      <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
      <argument name="package_order" type="list">['honolulu_parcel','urbansim_parcel','urbansim','opus_core']</argument>
    </dataset_pool_configuration>
    <available_datasets type="list">['parcel','building','household_x_building','zone','faz','gridcell','city','county','alldata','node','household_x_submarket','residential_unit','submarket','residential_building_type','employment_submarket','job','building_type','neighborhood_board','tract','dpa']</available_datasets>
    <spatial_datasets type="list">['parcel','zone','faz','gridcell','city','county','node']</spatial_datasets>
  </general>
  <data_manager>
    <tool_library setexpanded="True">
      <tool_group name="opus_data_import_export_tools" setexpanded="True">
        <tool name="csv_data_to_opus_tool">
          <params>
            <param name="csv_data_path" param_type="dir_path" required="True">C:\Users\janowicz\Desktop</param>
            <param name="csv_table_name" param_type="string" required="True">non_home_based_employment_location_choice_model_coefficients</param>
            <param name="opus_data_directory" param_type="dir_path" required="True">c:/opus/data/oahu/base_year_data</param>
            <param name="opus_data_year" param_type="string" required="True">2010</param>
          </params>
        </tool>
      </tool_group>
    </tool_library>
  </data_manager>
  <model_manager>
    <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model name="test_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">honolulu_parcel.models.test_model</class_module>
            <class_name type="string">TestModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">TestModel</name>
          </init>
          <run type="dictionary">
          </run>
        </structure>
      </model>
      <model name="visitor_unit_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.regression_model</class_module>
            <class_name type="string">RegressionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">RegressionModel</name>
            <argument name="regression_procedure" parser_action="quote_string" type="string">opus_core.linear_regression</argument>
            <argument convert_blank_to_none="True" name="submodel_string" type="string" model_dependency_type="variable"/>
            <argument convert_blank_to_none="True" name="run_config" type="string"/>
            <argument convert_blank_to_none="True" name="estimate_config" type="string"/>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="dataset" type="string" model_dependency_type="dataset">zone</argument>
            <argument convert_blank_to_none="True" hidden="True" name="index" type="string">rm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument convert_blank_to_none="True" name="dataset" type="string" model_dependency_type="dataset">zone</argument>
            <argument convert_blank_to_none="True" name="dataset_filter" parser_action="quote_string" type="string" model_dependency_type="variable">(zone.visitor_units + zone.aggregate(building.aggregate(job.sector_id==17),intermediates=[parcel])) &gt; 0</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">visitor_unit_model_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">visitor_unit_model_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
            <output name="output" type="string">(specification, coefficients, rm_index)</output>
          </prepare_for_run>
          <estimate type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="dataset" type="string" model_dependency_type="dataset">zone</argument>
            <argument config_name="outcome_attribute" name="dependent_variable" parser_action="quote_string" type="string" model_dependency_type="variable">zone.visitor_units</argument>
            <argument convert_blank_to_none="True" name="index" type="string">rm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.estimate_linear_regression</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <output name="output" type="string">(coefficients, dummy)</output>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <argument convert_blank_to_none="True" name="dataset" type="string" model_dependency_type="dataset">zone</argument>
            <argument convert_blank_to_none="True" name="dataset_filter" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">regression_model_template_specification</argument>
            <output name="output" type="string">(specification, rm_index)</output>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="Submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="zone.h_runit"/>
              <variable_spec name="zone.waikiki"/>
              <variable_spec name="zone.zone_jobs_hotel"/>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="scheduled_development_events_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.scheduled_events_model</class_module>
            <class_name>ScheduledEventsModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">ScheduledEventsModel</name>
            <argument name="dataset" type="string">building</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Scheduled Development Events Model</argument>
            <argument name="model_short_name" parser_action="quote_string" type="string">SDEM</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument name="scheduled_events_table" parser_action="quote_string" type="string">scheduled_development_events</argument>
            <argument name="scheduled_events_storage" type="string">base_cache_storage</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="year" type="string">year</argument>
          </run>
        </structure>
      </model>
      <model name="add_dpa" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">honolulu_parcel.models.add_dpa</class_module>
            <class_name type="string">AddDpa</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AddDpa</name>
          </init>
          <run type="dictionary">
          </run>
        </structure>
      </model>
      <model name="honolulu_building_transition_model" type="model">
        <structure type="dictionary">
          <import hidden="False" name="import" type="dictionary">
            <class_module type="string">urbansim.models.real_estate_transition_model</class_module>
            <class_name>RealEstateTransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="False" name="name" type="string">RealEstateTransitionModel</name>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">_DISCARD</output>
            <argument name="storage" type="string">base_cache_storage</argument>
            <argument name="dataset_name" parser_action="quote_string" type="string">target_vacancy</argument>
            <argument name="table_name" parser_action="quote_string" type="string">target_vacancies</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <output name="output" type="string">building, new_building_index</output>
            <argument name="realestate_dataset" type="string">building</argument>
            <argument name="year" type="string">year</argument>
            <argument name="occupied_spaces_variable" parser_action="quote_string" type="string">occupied_spaces</argument>
            <argument name="total_spaces_variable" parser_action="quote_string" type="string">total_spaces</argument>
            <argument name="sample_from_dataset" type="string">building</argument>
            <argument name="reset_attribute_value" type="string">{'parcel_id':-1}</argument>.
            <argument name="append_to_realestate_dataset" type="string">True</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="sample_filter" type="string">"(building.building_type_id==1)*(building.year_built&gt;1989) +  (building.building_type_id==3)*(building.year_built&gt;1979) +  (building.building_type_id==2)*(building.year_built&gt;1989)+ (building.building_type_id&gt;3)*(building.building_type_id&lt;10)"</argument>
            <argument name="resources" type="string">model_resources</argument>
          </run>
        </structure>
      </model>
      <model name="sf_building_location_choice_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument name="location_set" type="string" model_dependency_type="dataset">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">parcel.disaggregate(zoning.allow_sf==1)</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable">(building.building_type_id)*(building.building_type_id==1)</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">BuildingLocationChoiceModel_sf</argument>
            <argument name="short_name" parser_action="quote_string" type="string">BLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">50</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" name="capacity_string" type="string" model_dependency_type="variable">clip_to_zero((safe_array_divide(parcel.parcel_sqft,parcel.disaggregate(zoning.min_lot_size)).round().astype(int32)) - (parcel.number_of_agents(building)))</key>
              <key convert_blank_to_none="True" name="number_of_units_string" type="string" model_dependency_type="variable">(safe_array_divide(parcel.parcel_sqft,parcel.disaggregate(zoning.min_lot_size)).round().astype(int32))</key>
              <key convert_blank_to_none="True" name="number_of_agents_string" type="string" model_dependency_type="variable">(parcel.number_of_agents(building))</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" name="weights_for_estimation_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">sf_building_location_choice_model_specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">buildings</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"/>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">building.year_built&gt;1989</argument>
            <argument convert_blank_to_none="True" name="location_id_variable" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">sf_building_location_choice_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">sf_building_location_choice_model_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument convert_blank_to_none="True" name="agents_filter" type="string">'building.building_type_id==1'</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="sf_detached" submodel_id="1" type="submodel">
            <description type="string">sf_detached</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.p_avg_resunit_price_in_zone"/>
              <variable_spec name="parcel.p_in_core_area"/>
              <variable_spec name="parcel.p_ln_pop_10_min"/>
              <variable_spec name="parcel.p_residential_density_in_zone"/>
              <variable_spec name="parcel.p_zone_ln_avg_income"/>
              <variable_spec name="parcel.p_zone_ln_emp_15_min"/>
              <variable_spec name="parcel.parcel_distance_to_highway"/>
              <variable_spec name="parcel.parcel_travel_time_to_waikiki"/>
              <variable_spec name="parcel.parcel_walk50_wait25"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="mf_building_location_choice_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument name="location_set" type="string" model_dependency_type="dataset">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">parcel.disaggregate(zoning.allow_mf==1)</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable">(building.building_type_id)*(building.building_type_id&lt;4)*(building.building_type_id&gt;1)</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">BuildingLocationChoiceModel_mf</argument>
            <argument name="short_name" parser_action="quote_string" type="string">BLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">50</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" name="capacity_string" type="string" model_dependency_type="variable">clip_to_zero(((((parcel.parcel_sqft)*parcel.disaggregate(zoning.max_far)).round().astype(int32)) - (parcel.aggregate(building.non_residential_sqft)))/1000 - (parcel.aggregate(building.residential_units)))</key>
              <key convert_blank_to_none="True" name="number_of_units_string" type="string" model_dependency_type="variable">((((parcel.parcel_sqft)*parcel.disaggregate(zoning.max_far)).round().astype(int32)) - (parcel.aggregate(building.non_residential_sqft)))/1000</key>
              <key convert_blank_to_none="True" name="number_of_agents_string" type="string" model_dependency_type="variable">(parcel.aggregate(building.residential_units))</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" name="weights_for_estimation_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">mf_building_location_choice_model_specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">buildings</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"/>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">building.year_built&gt;1979</argument>
            <argument convert_blank_to_none="True" name="location_id_variable" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">mf_building_location_choice_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">mf_building_location_choice_model_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument convert_blank_to_none="True" name="agents_filter" type="string">'(building.building_type_id&lt;4)*(building.building_type_id&gt;1)'</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="townhome" submodel_id="2" type="submodel">
            <description type="string">townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.p_district2"/>
              <variable_spec name="parcel.p_in_ewa"/>
              <variable_spec name="parcel.p_ln_parcel_sqft"/>
              <variable_spec name="parcel.p_ln_pop_10_min"/>
              <variable_spec name="parcel.p_residential_density_in_zone"/>
              <variable_spec name="parcel.p_zone_ln_avg_income"/>
              <variable_spec name="parcel.parcel_distance_to_highway"/>
              <variable_spec name="parcel.parcel_distance_to_public_school"/>
              <variable_spec name="parcel.parcel_travel_time_to_waikiki"/>
              <variable_spec name="parcel.proportion_sf_units_in_zone"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="apartment" submodel_id="3" type="submodel">
            <description type="string">apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.p_ln_parcel_sqft"/>
              <variable_spec name="parcel.p_zone_ln_emp_30_min"/>
              <variable_spec name="parcel.parcel_distance_to_coast"/>
              <variable_spec name="parcel.parcel_distance_to_highway"/>
              <variable_spec name="parcel.parcel_distance_to_public_school"/>
              <variable_spec name="parcel.parcel_travel_time_to_waikiki"/>
              <variable_spec name="parcel.parcel_walk50_wait25"/>
              <variable_spec name="parcel.proportion_sf_units_in_zone"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="commercial_building_location_choice_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument name="location_set" type="string" model_dependency_type="dataset">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">parcel.disaggregate(zoning.allow_comm==1)</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable">(building.building_type_id)*(building.building_type_id&lt;10)*(building.building_type_id&gt;7)</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">BuildingLocationChoiceModel_c</argument>
            <argument name="short_name" parser_action="quote_string" type="string">BLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">50</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" name="capacity_string" type="string" model_dependency_type="variable">clip_to_zero((((parcel.parcel_sqft)*parcel.disaggregate(zoning.max_far)).round().astype(int32)-(parcel.aggregate(1000*building.residential_units))) - (parcel.aggregate(building.non_residential_sqft)))</key>
              <key convert_blank_to_none="True" name="number_of_units_string" type="string" model_dependency_type="variable">(((parcel.parcel_sqft)*parcel.disaggregate(zoning.max_far)).round().astype(int32)-(parcel.aggregate(1000*building.residential_units)))</key>
              <key convert_blank_to_none="True" name="number_of_agents_string" type="string" model_dependency_type="variable">(parcel.aggregate(building.non_residential_sqft))</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" name="weights_for_estimation_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">commercial_building_location_choice_model_specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">buildings</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"/>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">building.year_built&gt;0</argument>
            <argument convert_blank_to_none="True" name="location_id_variable" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">commercial_building_location_choice_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">commercial_building_location_choice_model_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument convert_blank_to_none="True" name="agents_filter" type="string">'(building.building_type_id&lt;10)*(building.building_type_id&gt;7)'</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="office" submodel_id="8" type="submodel">
            <description type="string">office</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.p_avg_nonres_sqft_price_in_zone"/>
              <variable_spec name="parcel.p_ln_parcel_sqft"/>
              <variable_spec name="parcel.p_zone_ln_emp_15_min"/>
              <variable_spec name="parcel.parcel_distance_to_highway"/>
              <variable_spec name="parcel.parcel_walk50_wait25"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="neighborhood_retail" submodel_id="9" type="submodel">
            <description type="string">neighborhood_retail</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.p_avg_nonres_sqft_price_in_zone"/>
              <variable_spec name="parcel.p_ln_parcel_sqft"/>
              <variable_spec name="parcel.p_ln_pop_10_min"/>
              <variable_spec name="parcel.parcel_distance_to_highway"/>
              <variable_spec name="parcel.parcel_walk50_wait25"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="industrial_building_location_choice_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument name="location_set" type="string" model_dependency_type="dataset">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">parcel.disaggregate(zoning.allow_indust==1)</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">BuildingLocationChoiceModel_i</argument>
            <argument name="short_name" parser_action="quote_string" type="string">BLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">50</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" name="capacity_string" type="string" model_dependency_type="variable">clip_to_zero((((parcel.parcel_sqft)*parcel.disaggregate(zoning.max_far)).round().astype(int32)-(parcel.aggregate(1000*building.residential_units))) - (parcel.aggregate(building.non_residential_sqft)))</key>
              <key convert_blank_to_none="True" name="number_of_units_string" type="string" model_dependency_type="variable">(((parcel.parcel_sqft)*parcel.disaggregate(zoning.max_far)).round().astype(int32)-(parcel.aggregate(1000*building.residential_units)))</key>
              <key convert_blank_to_none="True" name="number_of_agents_string" type="string" model_dependency_type="variable">(parcel.aggregate(building.non_residential_sqft))</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" name="weights_for_estimation_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">industrial_building_location_choice_model_specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">buildings</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"/>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">(building.year_built&gt;1979)*(building.building_type_id&lt;8)*(building.building_type_id&gt;5)</argument>
            <argument convert_blank_to_none="True" name="location_id_variable" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">industrial_building_location_choice_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">industrial_building_location_choice_model_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument convert_blank_to_none="True" name="agents_filter" type="string">'(building.building_type_id&lt;8)*(building.building_type_id&gt;5)'</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="industrial or warehouse" submodel_id="-2" type="submodel">
            <description type="string">industrial or warehouse</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.p_ln_parcel_sqft"/>
              <variable_spec name="parcel.p_ln_pop_10_min"/>
              <variable_spec name="parcel.parcel_distance_to_highway"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="visitor_building_location_choice_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument name="location_set" type="string" model_dependency_type="dataset">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">parcel.disaggregate(zoning.allow_hotel==1)</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">BuildingLocationChoiceModel_h</argument>
            <argument name="short_name" parser_action="quote_string" type="string">BLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">50</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" name="capacity_string" type="string" model_dependency_type="variable">clip_to_zero((((parcel.parcel_sqft)*parcel.disaggregate(zoning.max_far)).round().astype(int32)-(parcel.aggregate(1000*building.residential_units))) - (parcel.aggregate(building.non_residential_sqft)))</key>
              <key convert_blank_to_none="True" name="number_of_units_string" type="string" model_dependency_type="variable">(((parcel.parcel_sqft)*parcel.disaggregate(zoning.max_far)).round().astype(int32)-(parcel.aggregate(1000*building.residential_units)))</key>
              <key convert_blank_to_none="True" name="number_of_agents_string" type="string" model_dependency_type="variable">(parcel.aggregate(building.non_residential_sqft))</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" name="weights_for_estimation_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">visitor_building_location_choice_model_specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">buildings</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"/>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">(building.year_built&gt;0)*(numpy.in1d(building.building_type_id,[4,5]))</argument>
            <argument convert_blank_to_none="True" name="location_id_variable" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">visitor_building_location_choice_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">visitor_building_location_choice_model_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument convert_blank_to_none="True" name="agents_filter" type="string">'(numpy.in1d(building.building_type_id,[4,5]))*(building.parcel_id==-1)'</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="hotel" submodel_id="-2" type="submodel">
            <description type="string">hotel</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.p_avg_nonres_sqft_price_in_zone"/>
              <variable_spec name="parcel.p_hotel_and_resort_units_in_zone"/>
              <variable_spec name="parcel.p_ln_parcel_sqft"/>
              <variable_spec name="parcel.parcel_distance_to_coast"/>
              <variable_spec name="parcel.parcel_distance_to_highway"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="household2010_allocation_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">honolulu_parcel.models.household2010_allocation_model</class_module>
            <class_name type="string">Household2010AllocationModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">Household2010AllocationModel</name>
          </init>
          <run type="dictionary">
          </run>
        </structure>
      </model>
      <model name="employment2010_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">honolulu_parcel.models.employment2010_model</class_module>
            <class_name type="string">Employment2010Model</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">Employment2010Model</name>
          </init>
          <run type="dictionary">
          </run>
        </structure>
      </model>
      <model name="buildings2010_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">honolulu_parcel.models.buildings2010_transition_model</class_module>
            <class_name type="string">Buildings2010TransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">Buildings2010TransitionModel</name>
          </init>
          <run type="dictionary">
          </run>
        </structure>
      </model>
      <model name="real_estate_transition_model_by_submarkets" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">honolulu_parcel.models.real_estate_transition_model_by_submarkets</class_module>
            <class_name type="string">RealEstateTransitionModelBySubmarkets</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">RealEstateTransitionModelBySubmarkets</name>
          </init>
          <run type="dictionary">
          </run>
        </structure>
      </model>
      <model name="update_hh_building_type_id" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">honolulu_parcel.models.update_hh_building_type_id</class_module>
            <class_name type="string">UpdateHhBuildingTypeId</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">UpdateHhBuildingTypeId</name>
          </init>
          <run type="dictionary">
          </run>
        </structure>
      </model>
      <model name="emp_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.transition_model</class_module>
            <class_name>TransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">TransitionModel</name>
            <argument name="dataset" type="string" model_dependency_type="dataset">job</argument>
            <argument name="dataset_accounting_attribute" parser_action="quote_string" type="string" convert_blank_to_none="True" model_dependency_type="variable">None</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Emp Transition Model</argument>
            <argument name="model_short_name" parser_action="quote_string" type="string">JTM</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument name="control_total_table" parser_action="quote_string" type="string" model_dependency_type="table">annual_employment_control_totals</argument>
            <argument name="control_total_storage" type="string">base_cache_storage</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="year" type="string">year</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string" model_dependency_type="variable">number_of_jobs</argument>
            <argument name="reset_dataset_attribute_value" type="string">{'building_id':-1}</argument>
          </run>
        </structure>
      </model>
      <model name="employment_location_choice_model" type="model">
        <dependencies type="list">['employment_relocation_model']</dependencies>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <group_by_attribute type="list">('home_based_status', 'name')</group_by_attribute>
          <import name="import" type="dictionary" hidden="True">
            <class_module type="string">urbansim.models.employment_location_choice_model</class_module>
            <class_name>EmploymentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <argument name="agents_grouping_attribute" parser_action="quote_string" type="string">job.home_based_status</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string">honolulu_parcel.job.employment_submarket_id</argument>
            <argument name="number_of_units_string" parser_action="quote_string" type="string" model_dependency_type="variable">total_SSS_job_space</argument>
            <argument name="compute_capacity_flag" type="boolean">True</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string" model_dependency_type="variable">vacant_SSS_job_space</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string" model_dependency_type="variable">vacant_SSS_job_space</argument>
            <argument name="dataset_pool" type="string" hidden="True">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="filter" type="string" model_dependency_type="variable"/>
            <argument name="variable_package" parser_action="quote_string" type="string">honolulu_parcel</argument>
            <argument name="run_config" type="dictionary">
              <key name="lottery_max_iterations" type="integer">5</key>
              <key name="accept_unavailability_of_choices" type="boolean">True</key>
              <key convert_blank_to_none="True" name="agent_units_string" type="string" model_dependency_type="variable"/>
            </argument>
            <argument name="location_set" type="string" model_dependency_type="dataset">employment_submarket</argument>
            <argument name="estimation_size_agents" type="float">.25</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">vacant_SSS_job_space</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="sample_size_locations" type="integer">50</argument>
            <name name="name" type="string" hidden="True">EmploymentLocationChoiceModel</name>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string" hidden="True">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">employment_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">employment_location_choice_model_specification</argument>
            <name name="name" type="string" hidden="True">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'records_per_chunk':25000}</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
            <argument name="specification" type="string" hidden="True">specification</argument>
            <argument name="maximum_runs" type="integer">5</argument>
            <argument name="agents_index" type="string" hidden="True">erm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string" hidden="True">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string" hidden="True">(specification, index)</output>
            <argument name="portion_to_unplace" type="integer">0</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">employment_location_choice_model_specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string" parser_action="quote_string" model_dependency_type="variable"/>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">jobs_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <name name="name" type="string" hidden="True">prepare_for_estimate</name>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string" hidden="True">(coefficients, _)</output>
            <argument name="specification" type="string" hidden="True">specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string" hidden="True">index</argument>
            <argument name="debuglevel" type="string" hidden="True">debuglevel</argument>
          </estimate>
        </structure>
        <specification type="dictionary">
          <submodel_group name="home_based" type="submodel_group">
            <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
                <variable_spec name="employment_submarket.ln_residential_units_esubmarket"/>
              </variable_list>
            </submodel>
          </submodel_group>
          <submodel_group name="non_home_based" type="submodel_group">
            <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list"/>
            </submodel>
            <submodel hidden="Children" name="Agriculture" submodel_id="1" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.esubmarket_distance_to_coast"/>
                <variable_spec name="employment_submarket.esubmarket_distance_to_freeway"/>
                <variable_spec name="employment_submarket.esubmarket_elevation_mean"/>
                <variable_spec name="employment_submarket.esubmarket_elevation_stdev"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_transport_esubmarket"/>
                <variable_spec name="employment_submarket.land_per_nonres_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.ln_average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.ln_pop_10_min_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="MiningConstruction" submodel_id="2" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.cbd_time_esubmarket"/>
                <variable_spec name="employment_submarket.esubmarket_distance_to_coast"/>
                <variable_spec name="employment_submarket.esubmarket_distance_to_freeway"/>
                <variable_spec name="employment_submarket.esubmarket_elevation_mean"/>
                <variable_spec name="employment_submarket.esubmarket_elevation_stdev"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_parking_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.is_warehouse_esubmarket"/>
                <variable_spec name="employment_submarket.iv_ln_price_residual_esubmarket"/>
                <variable_spec name="employment_submarket.ln_average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.ln_pop_10_min_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Manufacturing" submodel_id="4" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.esubmarket_distance_to_freeway"/>
                <variable_spec name="employment_submarket.is_manufacturing_esubmarket"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_warehouse_esubmarket"/>
                <variable_spec name="employment_submarket.ln_pop_10_min_esubmarket"/>
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Transport" submodel_id="7" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.esubmarket_distance_to_freeway"/>
                <variable_spec name="employment_submarket.esubmarket_elevation_mean"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.is_transport_esubmarket"/>
                <variable_spec name="employment_submarket.is_utility_esubmarket"/>
                <variable_spec name="employment_submarket.ln_jobs_within_15_min_esubmarket"/>
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Information" submodel_id="8" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_utility_esubmarket"/>
                <variable_spec name="employment_submarket.is_warehouse_esubmarket"/>
                <variable_spec name="employment_submarket.ln_jobs_within_15_min_esubmarket"/>
                <variable_spec name="employment_submarket.ln_pop_10_min_esubmarket"/>
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Utilities" submodel_id="3" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.is_utility_esubmarket"/>
                <variable_spec name="employment_submarket.ln_jobs_within_15_min_esubmarket"/>
                <variable_spec name="employment_submarket.ln_pop_10_min_esubmarket"/>
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Wholesale" submodel_id="5" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.esubmarket_distance_to_freeway"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_warehouse_esubmarket"/>
                <variable_spec name="employment_submarket.ln_pop_10_min_esubmarket"/>
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Retail" submodel_id="6" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.avg_hh_income_zonal_esubmarket"/>
                <variable_spec name="employment_submarket.esubmarket_distance_to_freeway"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_warehouse_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="FinanceInsurance" submodel_id="9" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.avg_hh_income_zonal_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.ln_job_density_zone_esubmarket"/>
                <variable_spec name="employment_submarket.ln_pop_10_min_esubmarket"/>
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="RealEstate" submodel_id="10" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.avg_hh_income_zonal_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.is_warehouse_esubmarket"/>
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="ProfessionalServices" submodel_id="11" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_hospital_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.is_warehouse_esubmarket"/>
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="BusinessServices" submodel_id="12" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.ln_average_value_per_sqft_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="EducationalServices" submodel_id="13" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.avg_hh_income_zonal_esubmarket"/>
                <variable_spec name="employment_submarket.esubmarket_distance_to_freeway"/>
                <variable_spec name="employment_submarket.is_classroom_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="HealthServices" submodel_id="14" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.esubmarket_distance_to_freeway"/>
                <variable_spec name="employment_submarket.is_hospital_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="ArtsEntertainment" submodel_id="15" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.avg_hh_income_zonal_esubmarket"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_community_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.ln_average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="EatingDrinking" submodel_id="16" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.esubmarket_distance_to_freeway"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.travel_time_to_waikiki_esubmarket"/>
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="OtherServices" submodel_id="17" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.esubmarket_distance_to_freeway"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_community_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.ln_average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Government" submodel_id="18" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.employment_submarket_walk50_wait25"/>
                <variable_spec name="employment_submarket.jobs20_gov_esubmarket"/>
              </variable_list>
            </submodel>
          </submodel_group>
        </specification>
      </model>
      <model name="tenure_choice_model" type="model">
        <dependencies type="list">['household_relocation_model']</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.choice_model</class_module>
            <class_name type="string">ChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">ChoiceModel</name>
            <argument name="choice_set" type="string" model_dependency_type="dataset">[1,2]</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">honolulu_parcel.household.income_4</argument>
            <argument name="choice_attribute_name" parser_action="quote_string" type="string" model_dependency_type="variable">tenure</argument>
            <argument name="interaction_pkg" parser_action="quote_string" type="string">opus_core</argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"/>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument convert_blank_to_none="True" name="chunk_specification" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(specification, coefficients, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">tenure_choice_model_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">tenure_choice_model_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
          </prepare_for_run>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, dummy)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(specification, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string" model_dependency_type="variable">household.year_moved==1</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">choice_model_template_specification</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" dynamic="True">
          <submodel hidden="Children" name="low_inc" submodel_id="1" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="own">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="rent">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head"/>
                <variable_spec name="household.avg_edu_hh"/>
                <variable_spec name="household.children"/>
                <variable_spec name="constant"/>
                <variable_spec name="household.nonfamily"/>
                <variable_spec name="household.oldhead"/>
                <variable_spec name="household.persons"/>
                <variable_spec name="household.vehicles"/>
                <variable_spec name="household.workers_per_person"/>
                <variable_spec name="household.young_adults"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="lowmid_inc" submodel_id="2" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="own">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="rent">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head"/>
                <variable_spec name="household.avg_edu_hh"/>
                <variable_spec name="household.children"/>
                <variable_spec name="constant"/>
                <variable_spec name="household.enrollment_of_head"/>
                <variable_spec name="household.income"/>
                <variable_spec name="household.oldhead"/>
                <variable_spec name="household.persons"/>
                <variable_spec name="household.vehicles"/>
                <variable_spec name="household.workers_per_person"/>
                <variable_spec name="household.young_adults"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="highmid_inc" submodel_id="3" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="own">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="rent">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head"/>
                <variable_spec name="household.children"/>
                <variable_spec name="constant"/>
                <variable_spec name="household.enrollment_of_head"/>
                <variable_spec name="household.income"/>
                <variable_spec name="household.nonfamily"/>
                <variable_spec name="household.oldhead"/>
                <variable_spec name="household.persons"/>
                <variable_spec name="household.vehicles"/>
                <variable_spec name="household.young_adults"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="high_inc" submodel_id="4" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="own">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="rent">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head"/>
                <variable_spec name="household.avg_edu_hh"/>
                <variable_spec name="household.children"/>
                <variable_spec name="constant"/>
                <variable_spec name="household.enrollment_of_head"/>
                <variable_spec name="household.income"/>
                <variable_spec name="household.nonfamily"/>
                <variable_spec name="household.oldhead"/>
                <variable_spec name="household.persons"/>
                <variable_spec name="household.vehicles"/>
                <variable_spec name="household.wealthy_hh"/>
              </variable_list>
            </equation>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="residential_building_type_choice_model_owner" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument convert_blank_to_none="True" name="agents_filter" type="string">'(household.tenure==1)'</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">honolulu_parcel</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string">honolulu_parcel.household.residential_building_type_id</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">honolulu_parcel.household.income_4</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">clip_to_zero(residential_building_type.residential_units-residential_building_type.number_of_households)</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string">residential_building_type.residential_building_type_id&lt;4</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">residential_building_type.residential_units</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 3, })</argument>
            <argument name="location_set" type="string">residential_building_type</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string">1</argument>
            <argument convert_blank_to_none="True" name="sampler" parser_action="quote_string" type="string"/>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">clip_to_zero(residential_building_type.residential_units-residential_building_type.number_of_households)</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation_with_diagnose</argument>
            <argument name="estimate_config" type="string">Resources({})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">residential_building_type_choice_model_owner_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">residential_building_type_choice_model_owner_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">residential_building_type_choice_model_owner_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string">'((household.year_moved==1)*(household.tenure==1))'</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel hidden="Children" name="low_inc" submodel_id="1" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="single_family">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="townhome_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="townhomechildren"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.workers_per_person" coefficient_name="townhome_workers_per_person"/>
                <variable_spec name="household.young_adults" coefficient_name="townhome_young_adults"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="apartment_age_of_head"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="apartment_enrollment_of_head"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.oldhead" coefficient_name="apartment_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="lowmid_inc" submodel_id="2" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="single_family">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.children" coefficient_name="townhomechildren"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.oldhead" coefficient_name="townhome_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
                <variable_spec name="household.workers_per_person" coefficient_name="townhome_workers_per_person"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.avg_edu_hh" coefficient_name="apartment_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="apartment_nonfamily"/>
                <variable_spec name="household.oldhead" coefficient_name="apartment_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="highmid_inc" submodel_id="3" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="single_family">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="townhome_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="townhomechildren"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="townhome_enrollment_of_head"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.oldhead" coefficient_name="townhome_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
                <variable_spec name="household.workers_per_person" coefficient_name="townhome_workers_per_person"/>
                <variable_spec name="household.young_adults" coefficient_name="townhome_young_adults"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="apartment_age_of_head"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="apartment_nonfamily"/>
                <variable_spec name="household.oldhead" coefficient_name="apartment_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
                <variable_spec name="household.workers_per_person" coefficient_name="apartment_workers_per_person"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="high_inc" submodel_id="4" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="single_family">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="townhome_nonfamily"/>
                <variable_spec name="household.oldhead" coefficient_name="townhome_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
                <variable_spec name="household.workers_per_person" coefficient_name="townhome_workers_per_person"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.avg_edu_hh" coefficient_name="apartment_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="apartment_children"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="apartment_nonfamily"/>
                <variable_spec name="household.oldhead" coefficient_name="apartment_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="apartment_wealthy_hh"/>
                <variable_spec name="household.young_adults" coefficient_name="apartment_young_adults"/>
              </variable_list>
            </equation>
          </submodel>
        </specification>
      </model>
      <model name="residential_building_type_choice_model_renter" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument convert_blank_to_none="True" name="agents_filter" type="string">'(household.tenure==2)'</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">honolulu_parcel</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string">honolulu_parcel.household.residential_building_type_id</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">honolulu_parcel.household.income_4</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">clip_to_zero(residential_building_type.residential_units-residential_building_type.number_of_households)</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string">residential_building_type.residential_building_type_id&lt;4</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">residential_building_type.residential_units</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 3, })</argument>
            <argument name="location_set" type="string">residential_building_type</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string">1</argument>
            <argument convert_blank_to_none="True" name="sampler" parser_action="quote_string" type="string"/>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">clip_to_zero(residential_building_type.residential_units-residential_building_type.number_of_households)</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation_with_diagnose</argument>
            <argument name="estimate_config" type="string">Resources({})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">residential_building_type_choice_model_renter_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">residential_building_type_choice_model_renter_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">residential_building_type_choice_model_renter_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string">'((household.year_moved==1)*(household.tenure==2))'</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel hidden="Children" name="low_inc" submodel_id="1" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="single_family">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="townhome_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="townhomechildren"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="townhome_enrollment_of_head"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="townhome_nonfamily"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
                <variable_spec name="household.workers_per_person" coefficient_name="townhome_workers_per_person"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="apartment_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="apartment_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.nonfamily" coefficient_name="apartment_nonfamily"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
                <variable_spec name="household.young_adults" coefficient_name="apartment_young_adults"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="lowmid_inc" submodel_id="2" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="single_family">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="townhome_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.oldhead" coefficient_name="townhome_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="apartment_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="apartment_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="apartment_enrollment_of_head"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="apartment_nonfamily"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
                <variable_spec name="household.workers_per_person" coefficient_name="apartment_workers_per_person"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="highmid_inc" submodel_id="3" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="single_family">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="townhome_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="townhomechildren"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="townhome_enrollment_of_head"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="townhome_nonfamily"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
                <variable_spec name="household.young_adults" coefficient_name="townhome_young_adults"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.children" coefficient_name="apartment_children"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
                <variable_spec name="household.young_adults" coefficient_name="apartment_young_adults"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="high_inc" submodel_id="4" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="single_family">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="townhome_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="townhome_wealthy_hh"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="apartment_age_of_head"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="apartment_nonfamily"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="apartment_wealthy_hh"/>
                <variable_spec name="household.workers_per_person" coefficient_name="apartment_workers_per_person"/>
              </variable_list>
            </equation>
          </submodel>
        </specification>
      </model>
      <model name="submarket_household_location_choice_model_owner_sf" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':3}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">5</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument convert_blank_to_none="True" name="agents_filter" type="string">'(household.tenure==1)*(household.building_type_id==1)'</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">honolulu_parcel</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string">honolulu_parcel.household.submarket_id</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">honolulu_parcel.household.income_4</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">clip_to_zero(submarket.residential_units-submarket.number_of_households)</argument>
            <argument name="filter" parser_action="quote_string" type="string">(submarket.residential_building_type_id==1)*(submarket.residential_units&gt;0)</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">submarket.residential_units</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 10})</argument>
            <argument name="location_set" type="string">submarket</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string">1</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">None</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation_with_diagnose</argument>
            <argument name="sample_size_locations" type="integer">50</argument>
            <argument name="estimate_config" type="string">Resources({})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_owner_sf_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_owner_sf_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_owner_sf_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string">'(household.tenure==1)*(household.building_type_id==1)*(household.year_moved==1)'</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel name="lowinc_sfdetached" submodel_id="1" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_submarket.age_x_travel_time_to_waikiki"/>
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.core_submarket"/>
              <variable_spec name="household_x_submarket.dpa_ewa_x_hhsize"/>
              <variable_spec name="household_x_submarket.dpa_northshore_x_nonfamily"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_hhsize"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="submarket.submarket_elevation_stdev"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_sfdetached" submodel_id="2" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_submarket.age_x_travel_time_to_waikiki"/>
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="household_x_submarket.dpa_easthonolulu_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_ewa_x_hhsize"/>
              <variable_spec name="household_x_submarket.dpa_northshore_x_nonfamily"/>
              <variable_spec name="household_x_submarket.dpa_puc_x_nonfamily"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_hhsize"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_not_in_labor_force"/>
              <variable_spec name="household_x_submarket.hh_income_within50percent_submarket_avginc"/>
              <variable_spec name="household_x_submarket.income_x_ln_job_density"/>
              <variable_spec name="submarket.iv_ln_price_residual"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="submarket.submarket_distance_to_freeway"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_sfdetached" submodel_id="3" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.district1"/>
              <variable_spec name="submarket.district2"/>
              <variable_spec name="household_x_submarket.dpa_ewa_x_hhsize"/>
              <variable_spec name="household_x_submarket.dpa_northshore_x_workathome"/>
              <variable_spec name="household_x_submarket.dpa_puc_x_nonfamily"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_collegegrad"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_hhsize"/>
              <variable_spec name="household_x_submarket.hh_income_close_to_submarket_avginc"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="submarket.submarket_distance_to_freeway"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_sfdetached" submodel_id="4" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="household_x_submarket.dpa_easthonolulu_x_collegegrad"/>
              <variable_spec name="household_x_submarket.dpa_ewa_x_hhsize"/>
              <variable_spec name="submarket.dpa_is_ewa"/>
              <variable_spec name="household_x_submarket.dpa_koolauloa_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_northshore_x_nonfamily"/>
              <variable_spec name="household_x_submarket.dpa_northshore_x_workathome"/>
              <variable_spec name="household_x_submarket.dpa_puc_x_nonfamily"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_collegegrad"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_hhsize"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_median_age"/>
              <variable_spec name="submarket.iv_price_residual"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="submarket.submarket_distance_to_coast"/>
              <variable_spec name="submarket.submarket_distance_to_freeway"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="submarket_household_location_choice_model_owner_apartment" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':3}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">5</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument convert_blank_to_none="True" name="agents_filter" type="string">'(household.tenure==1)*(household.building_type_id==3)'</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">honolulu_parcel</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string">honolulu_parcel.household.submarket_id</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">honolulu_parcel.household.income_4</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">clip_to_zero(submarket.residential_units-submarket.number_of_households)</argument>
            <argument name="filter" parser_action="quote_string" type="string">(submarket.residential_building_type_id==3)*(submarket.residential_units&gt;0)</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">submarket.residential_units</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 10})</argument>
            <argument name="location_set" type="string">submarket</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string">1</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">None</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation_with_diagnose</argument>
            <argument name="sample_size_locations" type="integer">50</argument>
            <argument name="estimate_config" type="string">Resources({"sample_alternatives_by_submodel":True})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_owner_apartment_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_owner_apartment_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_owner_apartment_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string">'(household.tenure==1)*(household.building_type_id==3)*(household.year_moved==1)'</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel name="lowinc_apartment" submodel_id="1" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="household_x_submarket.dpa_easthonolulu_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_hhsize"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_median_age"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="submarket.submarket_elevation_mean"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_apartment" submodel_id="2" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="household_x_submarket.dpa_easthonolulu_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_koolauloa_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_hhsize"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_median_age"/>
              <variable_spec name="submarket.iv_ln_price_residual"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="submarket.submarket_distance_to_freeway"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
              <variable_spec name="submarket.travel_time_to_waikiki_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_apartment" submodel_id="3" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="household_x_submarket.dpa_easthonolulu_x_collegegrad"/>
              <variable_spec name="household_x_submarket.dpa_easthonolulu_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_ewa_x_employed"/>
              <variable_spec name="household_x_submarket.dpa_ewa_x_hhsize"/>
              <variable_spec name="submarket.dpa_is_ewa"/>
              <variable_spec name="household_x_submarket.dpa_koolauloa_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_northshore_x_nonfamily"/>
              <variable_spec name="household_x_submarket.dpa_northshore_x_workathome"/>
              <variable_spec name="household_x_submarket.dpa_puc_x_nonfamily"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_collegegrad"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_hhsize"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_not_in_labor_force"/>
              <variable_spec name="household_x_submarket.hh_income_within50percent_submarket_avginc"/>
              <variable_spec name="submarket.iv_ln_price_residual"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
              <variable_spec name="submarket.submarket_distance_to_freeway"/>
              <variable_spec name="submarket.travel_time_to_waikiki_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_apartment" submodel_id="4" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_income_in_submarket"/>
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="household_x_submarket.dpa_easthonolulu_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_ewa_x_hhsize"/>
              <variable_spec name="household_x_submarket.dpa_koolauloa_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_hhsize"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_median_age"/>
              <variable_spec name="submarket.iv_price_residual"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
              <variable_spec name="submarket.submarket_elevation_mean"/>
              <variable_spec name="submarket.travel_time_to_waikiki_submarket"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="submarket_household_location_choice_model_owner_townhome" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">5</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument convert_blank_to_none="True" name="agents_filter" type="string">'(household.tenure==1)*(household.building_type_id==2)'</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">honolulu_parcel</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string">honolulu_parcel.household.submarket_id</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">honolulu_parcel.household.income_4</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">clip_to_zero(submarket.residential_units-submarket.number_of_households)</argument>
            <argument name="filter" parser_action="quote_string" type="string">(submarket.residential_building_type_id==2)*(submarket.residential_units&gt;0)</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">submarket.residential_units</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 10})</argument>
            <argument name="location_set" type="string">submarket</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string">1</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">None</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation_with_diagnose</argument>
            <argument name="sample_size_locations" type="integer">50</argument>
            <argument name="estimate_config" type="string">Resources({"sample_alternatives_by_submodel":True})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_owner_townhome_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_owner_townhome_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_owner_townhome_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string">'(household.tenure==1)*(household.building_type_id==2)'</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel name="lowinc_townhome" submodel_id="1" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
              <variable_spec name="submarket.submarket_distance_to_freeway"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_townhome" submodel_id="2" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_within50percent_submarket_avginc"/>
              <variable_spec name="submarket.ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
              <variable_spec name="submarket.submarket_distance_to_freeway"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_townhome" submodel_id="3" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
              <variable_spec name="submarket.submarket_distance_to_freeway"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_townhome" submodel_id="4" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
              <variable_spec name="submarket.submarket_distance_to_coast"/>
              <variable_spec name="submarket.submarket_elevation_stdev"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="submarket_household_location_choice_model_renter_sf" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">5</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument convert_blank_to_none="True" name="agents_filter" type="string">'(household.tenure==2)*(household.building_type_id==1)'</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">honolulu_parcel</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string">honolulu_parcel.household.submarket_id</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">honolulu_parcel.household.income_4</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">clip_to_zero(submarket.residential_units-submarket.number_of_households)</argument>
            <argument name="filter" parser_action="quote_string" type="string">(submarket.residential_building_type_id==1)*(submarket.residential_units&gt;0)</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">submarket.residential_units</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 10})</argument>
            <argument name="location_set" type="string">submarket</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string">1</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">None</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation_with_diagnose</argument>
            <argument name="sample_size_locations" type="integer">50</argument>
            <argument name="estimate_config" type="string">Resources({"sample_alternatives_by_submodel":True})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_renter_sf_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_renter_sf_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_renter_sf_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string">'(household.tenure==2)*(household.building_type_id==1)*(household.year_moved==1)'</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel name="lowinc_sfdetached" submodel_id="1" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="household_x_submarket.dpa_easthonolulu_x_collegegrad"/>
              <variable_spec name="household_x_submarket.dpa_ewa_x_employed"/>
              <variable_spec name="household_x_submarket.dpa_koolauloa_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_northshore_x_nonfamily"/>
              <variable_spec name="household_x_submarket.dpa_northshore_x_workathome"/>
              <variable_spec name="household_x_submarket.dpa_puc_x_nonfamily"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_collegegrad"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_hhsize"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_median_age"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="submarket.submarket_distance_to_coast"/>
              <variable_spec name="submarket.travel_time_to_waikiki_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_sfdetached" submodel_id="2" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_submarket.dpa_ewa_x_employed"/>
              <variable_spec name="household_x_submarket.dpa_koolauloa_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_puc_x_nonfamily"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_hhsize"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_not_in_labor_force"/>
              <variable_spec name="submarket.iv_ln_price_residual"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="submarket.submarket_distance_to_coast"/>
              <variable_spec name="submarket.submarket_distance_to_freeway"/>
              <variable_spec name="submarket.travel_time_to_waikiki_submarket"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_sfdetached" submodel_id="3" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="submarket.core_submarket"/>
              <variable_spec name="household_x_submarket.dpa_ewa_x_employed"/>
              <variable_spec name="household_x_submarket.dpa_ewa_x_hhsize"/>
              <variable_spec name="household_x_submarket.dpa_puc_x_nonfamily"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_hhsize"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_not_in_labor_force"/>
              <variable_spec name="household_x_submarket.hh_income_close_to_submarket_avginc"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="submarket.submarket_distance_to_coast"/>
              <variable_spec name="submarket.submarket_distance_to_freeway"/>
              <variable_spec name="submarket.travel_time_to_waikiki_submarket"/>
              <variable_spec name="household_x_submarket.vehicles_x_average_stories"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_sfdetached" submodel_id="4" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="household_x_submarket.dpa_easthonolulu_x_collegegrad"/>
              <variable_spec name="household_x_submarket.dpa_easthonolulu_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_ewa_x_employed"/>
              <variable_spec name="household_x_submarket.dpa_ewa_x_hhsize"/>
              <variable_spec name="household_x_submarket.dpa_northshore_x_nonfamily"/>
              <variable_spec name="household_x_submarket.dpa_northshore_x_workathome"/>
              <variable_spec name="household_x_submarket.dpa_puc_x_nonfamily"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_collegegrad"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_hhsize"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_not_in_labor_force"/>
              <variable_spec name="household_x_submarket.hh_income_close_to_submarket_avginc"/>
              <variable_spec name="submarket.iv_price_residual"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="submarket.submarket_distance_to_coast"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="submarket_household_location_choice_model_renter_apartment" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':3}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">5</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument convert_blank_to_none="True" name="agents_filter" type="string">'(household.tenure==2)*(household.building_type_id==3)'</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">honolulu_parcel</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string">honolulu_parcel.household.submarket_id</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">honolulu_parcel.household.income_4</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">clip_to_zero(submarket.residential_units-submarket.number_of_households)</argument>
            <argument name="filter" parser_action="quote_string" type="string">(submarket.residential_building_type_id==3)*(submarket.residential_units&gt;0)</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">submarket.residential_units</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 10})</argument>
            <argument name="location_set" type="string">submarket</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string">.5</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">None</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation_with_diagnose</argument>
            <argument name="sample_size_locations" type="integer">50</argument>
            <argument name="estimate_config" type="string">Resources({"sample_alternatives_by_submodel":True})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_renter_apartment_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_renter_apartment_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_renter_apartment_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string">'(household.tenure==2)*(household.building_type_id==3)*(household.year_moved==1)'</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel name="lowinc_apartment" submodel_id="1" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.core_submarket"/>
              <variable_spec name="household_x_submarket.dpa_puc_x_nonfamily"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="submarket.submarket_distance_to_freeway"/>
              <variable_spec name="submarket.travel_time_to_waikiki_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_apartment" submodel_id="2" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_income_in_submarket"/>
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="household_x_submarket.dpa_easthonolulu_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_ewa_x_employed"/>
              <variable_spec name="submarket.dpa_is_ewa"/>
              <variable_spec name="household_x_submarket.dpa_koolauloa_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_puc_x_nonfamily"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_collegegrad"/>
              <variable_spec name="household_x_submarket.hh_income_close_to_submarket_avginc"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="submarket.submarket_distance_to_freeway"/>
              <variable_spec name="submarket.submarket_elevation_mean"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
              <variable_spec name="submarket.travel_time_to_waikiki_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_apartment" submodel_id="3" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_income_in_submarket"/>
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="household_x_submarket.dpa_easthonolulu_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_ewa_x_employed"/>
              <variable_spec name="submarket.dpa_is_ewa"/>
              <variable_spec name="household_x_submarket.dpa_koolauloa_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_puc_x_nonfamily"/>
              <variable_spec name="household_x_submarket.hh_income_within50percent_submarket_avginc"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_apartment" submodel_id="4" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_income_in_submarket"/>
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="household_x_submarket.dpa_ewa_x_employed"/>
              <variable_spec name="submarket.dpa_is_ewa"/>
              <variable_spec name="household_x_submarket.dpa_koolauloa_x_median_age"/>
              <variable_spec name="household_x_submarket.dpa_waianae_x_collegegrad"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="submarket_household_location_choice_model_renter_townhome" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">5</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument convert_blank_to_none="True" name="agents_filter" type="string">'(household.tenure==2)*(household.building_type_id==2)'</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">honolulu_parcel</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string">honolulu_parcel.household.submarket_id</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">honolulu_parcel.household.income_4</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">clip_to_zero(submarket.residential_units-submarket.number_of_households)</argument>
            <argument name="filter" parser_action="quote_string" type="string">(submarket.residential_building_type_id==2)*(submarket.residential_units&gt;0)</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">submarket.residential_units</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 10})</argument>
            <argument name="location_set" type="string">submarket</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string">1</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">None</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation_with_diagnose</argument>
            <argument name="sample_size_locations" type="integer">50</argument>
            <argument name="estimate_config" type="string">Resources({"sample_alternatives_by_submodel":True})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_renter_townhome_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_renter_townhome_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_renter_townhome_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string">'(household.tenure==2)*(household.building_type_id==2)'</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel name="lowinc_townhome" submodel_id="1" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_submarket.avg_unit_price_submarket_5xmore_than_income"/>
              <variable_spec name="submarket.ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="submarket.submarket_distance_to_freeway"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_townhome" submodel_id="2" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_within50percent_submarket_avginc"/>
              <variable_spec name="submarket.ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
              <variable_spec name="submarket.submarket_distance_to_freeway"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_townhome" submodel_id="3" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_townhome" submodel_id="4" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="submarket.submarket_walk50_wait25"/>
              <variable_spec name="submarket.submarket_distance_to_coast"/>
              <variable_spec name="submarket.submarket_elevation_mean"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="household_allocation_to_building_model" type="model">
        <dependencies type="list">['household_relocation_model']</dependencies>
        <structure type="dictionary">
          <estimate type="dictionary">
            <output hidden="True" name="output" type="string">(coefficients, _)</output>
            <argument name="agent_set" type="string">household</argument>
            <argument hidden="True" name="agents_index" type="string">_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument hidden="True" name="specification" type="string">_specification</argument>
          </estimate>
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">honolulu_parcel.models.household_location_choice_model_by_submarkets</class_module>
            <class_name>HouseholdLocationChoiceModelBySubmarkets</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">HouseholdLocationChoiceModelBySubmarkets</name>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_wesml_mnl_estimation</argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="location_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="sample_size_locations" type="integer">30</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string" model_dependency_type="variable">clip_to_zero(building.residential_units - building.number_of_agents(household))</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string" model_dependency_type="variable">building.residential_units</argument>
            <argument name="number_of_units_string" convert_blank_to_none="True" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="number_of_agents_string" convert_blank_to_none="True" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="location_id_string" parser_action="quote_string" type="string">building_id</argument>
            <argument name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="estimation_size_agents" type="float">0.5</argument>
            <argument name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">building.residential_units&gt;0</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 7,"accept_unavailability_of_choices":True})</argument>
            <argument name="estimate_config" type="string">Resources({'wesml_sampling_correction_variable':'psrc_parcel.building.wesml_sampling_correction_variable'})</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim_parcel</argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_estimate</name>
            <output hidden="True" name="output" type="string">(_specification, _index)</output>
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">households_for_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument name="portion_to_unplace" type="string">.1</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">household_allocation_to_building_model_specification</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">numpy.logical_and(household.building_id&gt;0, household.disaggregate(building.residential_units&gt;0))</argument>
          </prepare_for_estimate>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <output hidden="True" name="output" type="string">(_specification, _coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">household_allocation_to_building_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">household_allocation_to_building_model_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument hidden="True" name="agents_index" type="string">hrm_index</argument>
            <argument name="chunk_specification" type="string">None</argument>
            <argument hidden="True" name="coefficients" type="string">_coefficients</argument>
            <argument hidden="True" name="data_objects" type="string">datasets</argument>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument hidden="True" name="specification" type="string">_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list">
              <variable_spec name="building.building_year_built"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="job_allocation_to_building_model" type="model">
        <dependencies type="list">['employment_relocation_model']</dependencies>
        <structure type="dictionary">
          <estimate type="dictionary">
            <output hidden="True" name="output" type="string">(coefficients, _)</output>
            <argument name="agent_set" type="string">job</argument>
            <argument hidden="True" name="agents_index" type="string">_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument hidden="True" name="specification" type="string">_specification</argument>
          </estimate>
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">honolulu_parcel.models.job_location_choice_model_by_submarkets</class_module>
            <class_name>JobLocationChoiceModelBySubmarkets</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">JobLocationChoiceModelBySubmarkets</name>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_wesml_mnl_estimation</argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="location_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="sample_size_locations" type="integer">30</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string" model_dependency_type="variable">clip_to_zero((building.non_residential_sqft/250) - building.number_of_agents(job))</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string" model_dependency_type="variable">building.non_residential_sqft</argument>
            <argument name="number_of_units_string" convert_blank_to_none="True" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="number_of_agents_string" convert_blank_to_none="True" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="location_id_string" parser_action="quote_string" type="string">building_id</argument>
            <argument name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="estimation_size_agents" type="float">0.5</argument>
            <argument name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">building.non_residential_sqft&gt;0</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 7,"accept_unavailability_of_choices":True})</argument>
            <argument name="estimate_config" type="string">Resources({'wesml_sampling_correction_variable':'psrc_parcel.building.wesml_sampling_correction_variable'})</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim_parcel</argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_estimate</name>
            <output hidden="True" name="output" type="string">(_specification, _index)</output>
            <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">jobs_for_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument name="portion_to_unplace" type="string">.1</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">job_allocation_to_building_model_specification</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">numpy.logical_and(job.building_id&gt;0, job.disaggregate(building.non_residential_sqft&gt;0))</argument>
          </prepare_for_estimate>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <output hidden="True" name="output" type="string">(_specification, _coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">job_allocation_to_building_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">job_allocation_to_building_model_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
            <argument hidden="True" name="agents_index" type="string">erm_index</argument>
            <argument name="chunk_specification" type="string">None</argument>
            <argument hidden="True" name="coefficients" type="string">_coefficients</argument>
            <argument hidden="True" name="data_objects" type="string">datasets</argument>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument hidden="True" name="specification" type="string">_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list">
              <variable_spec name="building.building_year_built"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="residential_price_model" type="model">
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="specification" type="string" hidden="True">specification</argument>
            <argument name="dataset" type="string" model_dependency_type="dataset">building</argument>
            <argument name="data_objects" type="string" hidden="True">datasets</argument>
            <argument name="coefficients" type="string" hidden="True">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument name="outcome_attribute" parser_action="quote_string" type="string">ln_unit_price_residential=ln(building.unit_price_residential)</argument>
            <argument convert_blank_to_none="True" name="filter_attribute" type="string" parser_action="quote_string" model_dependency_type="variable">building.building_type_id&lt;4</argument>
            <argument name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable">building.building_type_id</argument>
            <argument name="dataset_pool" type="string" hidden="True">dataset_pool</argument>
            <name name="name" type="string" hidden="True">RealEstatePriceModel</name>
          </init>
          <import name="import" type="dictionary" hidden="True">
            <class_module type="string">urbansim.models.real_estate_price_model</class_module>
            <class_name>RealEstatePriceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string" hidden="True">(coefficients, _)</output>
            <argument name="index" type="string" hidden="True">repm_index</argument>
            <argument name="outcome_attribute" parser_action="quote_string" type="string">ln_unit_price_residential=ln(building.unit_price_residential)</argument>
            <argument name="specification" type="string" hidden="True">specification</argument>
            <argument name="dataset" type="string" model_dependency_type="dataset">building</argument>
            <argument name="data_objects" type="string" hidden="True">datasets</argument>
            <argument name="debuglevel" type="string" hidden="True">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string" hidden="True">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">residential_price_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">residential_price_model_specification</argument>
            <name name="name" type="string" hidden="True">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string" hidden="True">(specification, repm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">residential_price_model_specification</argument>
            <argument convert_blank_to_none="True" name="filter_variable" type="string" parser_action="quote_string" model_dependency_type="variable">(building.improvement_value&gt;80000)*(building.residential_units&gt;0)</argument>
            <argument name="dataset" type="string" model_dependency_type="dataset">building</argument>
            <name name="name" type="string" hidden="True">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="single_family" submodel_id="1" type="submodel">
            <description type="string">single_family</description>
            <variable_list type="variable_list">
              <variable_spec name="building.built_pre_1940"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.distance_to_coast"/>
              <variable_spec name="building.distance_to_park"/>
              <variable_spec name="building.distance_to_the_highway"/>
              <variable_spec name="building.in_core_area"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_land_per_unit"/>
              <variable_spec name="building.num_floors"/>
              <variable_spec name="building.parcel_elevation"/>
              <variable_spec name="building.population_density"/>
              <variable_spec name="building.sqft_per_unit"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="townhome" submodel_id="2" type="submodel">
            <description type="string">townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.distance_to_coast"/>
              <variable_spec name="building.distance_to_the_highway"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="building.ln_jobs_within_15_min"/>
              <variable_spec name="building.ln_land_per_unit"/>
              <variable_spec name="building.num_floors"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="apartment" submodel_id="3" type="submodel">
            <description type="string">apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="building.built_pre_1940"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.distance_to_coast"/>
              <variable_spec name="building.elevation_stdev_in_zone"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="building.ln_jobs_within_15_min"/>
              <variable_spec name="building.num_floors"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="non_residential_price_model" type="model">
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="specification" type="string" hidden="True">specification</argument>
            <argument name="dataset" type="string" model_dependency_type="dataset">building</argument>
            <argument name="data_objects" type="string" hidden="True">datasets</argument>
            <argument name="coefficients" type="string" hidden="True">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument name="outcome_attribute" parser_action="quote_string" type="string">ln_unit_price_non_residential=ln(building.unit_price_non_residential)</argument>
            <argument convert_blank_to_none="True" name="filter_attribute" type="string" parser_action="quote_string" model_dependency_type="variable">building.building_type_id&gt;3</argument>
            <argument name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable">building.building_type_id</argument>
            <argument name="dataset_pool" type="string" hidden="True">dataset_pool</argument>
            <name name="name" type="string" hidden="True">RealEstatePriceModel</name>
          </init>
          <import name="import" type="dictionary" hidden="True">
            <class_module type="string">urbansim.models.real_estate_price_model</class_module>
            <class_name>RealEstatePriceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string" hidden="True">(coefficients, _)</output>
            <argument name="index" type="string" hidden="True">repm_index</argument>
            <argument name="outcome_attribute" parser_action="quote_string" type="string">ln_unit_price_non_residential=ln(building.unit_price_non_residential)</argument>
            <argument name="specification" type="string" hidden="True">specification</argument>
            <argument name="dataset" type="string" model_dependency_type="dataset">building</argument>
            <argument name="data_objects" type="string" hidden="True">datasets</argument>
            <argument name="debuglevel" type="string" hidden="True">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string" hidden="True">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">non_residential_price_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">non_residential_price_model_specification</argument>
            <name name="name" type="string" hidden="True">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string" hidden="True">(specification, repm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">non_residential_price_model_specification</argument>
            <argument convert_blank_to_none="True" name="filter_variable" type="string" parser_action="quote_string" model_dependency_type="variable">(building.improvement_value&gt;40000)*(building.non_residential_sqft&gt;0)</argument>
            <argument name="dataset" type="string" model_dependency_type="dataset">building</argument>
            <name name="name" type="string" hidden="True">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="hotel" submodel_id="4" type="submodel">
            <description type="string">hotel</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.distance_to_coast"/>
              <variable_spec name="building.elevation_stdev_in_zone"/>
              <variable_spec name="building.jobs17_hotel_jobs_in_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="resort" submodel_id="5" type="submodel">
            <description type="string">resort</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.distance_to_coast"/>
              <variable_spec name="building.elevation_stdev_in_zone"/>
              <variable_spec name="building.jobs17_hotel_jobs_in_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial" submodel_id="6" type="submodel">
            <description type="string">industrial</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.distance_to_the_highway"/>
              <variable_spec name="building.elevation_stdev_in_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_pop_10_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="warehouse" submodel_id="7" type="submodel">
            <description type="string">warehouse</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.distance_to_coast"/>
              <variable_spec name="building.jobs8_warehouse_jobs_in_zone"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="office" submodel_id="8" type="submodel">
            <description type="string">office</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.jobs10_finance_jobs_in_zone"/>
              <variable_spec name="building.ln_jobs_within_15_min"/>
              <variable_spec name="building.num_floors"/>
              <variable_spec name="building.year_built_building"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="retail" submodel_id="9" type="submodel">
            <description type="string">retail</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.building_walk50_wait25"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.distance_to_the_highway"/>
              <variable_spec name="building.jobs9_retail_jobs_in_zone"/>
              <variable_spec name="building.ln_inv_far"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="community" submodel_id="10" type="submodel">
            <description type="string">community</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.distance_to_park"/>
              <variable_spec name="building.distance_to_public_school"/>
              <variable_spec name="building.households_in_zone"/>
              <variable_spec name="building.ln_inv_far"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.num_floors"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="other" submodel_id="11" type="submodel">
            <description type="string">other</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.distance_to_coast"/>
              <variable_spec name="building.elevation_stdev_in_zone"/>
              <variable_spec name="building.ln_pop_10_min"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="household_relocation_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.agent_relocation_model</class_module>
            <class_name>AgentRelocationModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">AgentRelocationModel</name>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Household Relocation Model</argument>
            <argument name="location_id_name" parser_action="quote_string" type="string">honolulu_parcel.household.submarket_id</argument>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">hrm_resources</output>
            <argument name="rate_storage" type="string">base_cache_storage</argument>
            <argument name="rate_table" parser_action="quote_string" type="string" model_dependency_type="table">annual_household_relocation_rates</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <output name="output" type="string">hrm_index</output>
            <argument name="resources" type="string">hrm_resources</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
          </run>
        </structure>
      </model>
      <model name="household_transition_model_size_workers" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.transition_model</class_module>
            <class_name>TransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">TransitionModel</name>
            <argument name="dataset" type="string">household</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Household Transition Model</argument>
            <argument name="model_short_name" parser_action="quote_string" type="string">HTM</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument name="control_total_table" parser_action="quote_string" type="string">annual_household_control_totals_workers</argument>
            <argument name="control_total_storage" type="string">base_cache_storage</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="sampling_hierarchy" type="string">['tract_id', 'tract_region']</argument>
            <argument name="sampling_threshold" parser_action="quote_string" type="string">10</argument>
            <argument name="year" type="string">year</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string">total_number_of_households</argument>
            <argument name="reset_dataset_attribute_value" type="string">{'building_id':-1}</argument>
            <argument name="sync_dataset" type="string">person</argument>
          </run>
        </structure>
      </model>
      <model name="household_transition_model_size_tenure" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.transition_model</class_module>
            <class_name>TransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">TransitionModel</name>
            <argument name="dataset" type="string">household</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Household Transition Model</argument>
            <argument name="model_short_name" parser_action="quote_string" type="string">HTM</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument name="control_total_table" parser_action="quote_string" type="string">annual_household_control_totals_size</argument>
            <argument name="control_total_storage" type="string">base_cache_storage</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="sampling_hierarchy" type="string">['tract_id', 'tract_region']</argument>
            <argument name="sampling_threshold" parser_action="quote_string" type="string">10</argument>
            <argument name="year" type="string">year</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string">total_number_of_households</argument>
            <argument name="reset_dataset_attribute_value" type="string">{'building_id':-1}</argument>
            <argument name="sync_dataset" type="string">person</argument>
          </run>
        </structure>
      </model>
      <model name="household_transition_model_income" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.transition_model</class_module>
            <class_name>TransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">TransitionModel</name>
            <argument name="dataset" type="string">household</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Household Transition Model</argument>
            <argument name="model_short_name" parser_action="quote_string" type="string">HTM</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument name="control_total_table" parser_action="quote_string" type="string">annual_household_control_totals_income</argument>
            <argument name="control_total_storage" type="string">base_cache_storage</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="sampling_hierarchy" type="string">['tract_id', 'tract_region']</argument>
            <argument name="sampling_threshold" parser_action="quote_string" type="string">10</argument>
            <argument name="year" type="string">year</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string">total_number_of_households</argument>
            <argument name="reset_dataset_attribute_value" type="string">{'building_id':-1}</argument>
            <argument name="sync_dataset" type="string">person</argument>
          </run>
        </structure>
      </model>
      <model name="household_transition_model_with_persons" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.transition_model</class_module>
            <class_name>TransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">TransitionModel</name>
            <argument name="dataset" type="string">household</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Household Transition Model</argument>
            <argument name="model_short_name" parser_action="quote_string" type="string">HTM</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument name="control_total_table" parser_action="quote_string" type="string">annual_household_control_totals</argument>
            <argument name="control_total_storage" type="string">base_cache_storage</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="year" type="string">year</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string">total_number_of_households</argument>
            <argument name="reset_dataset_attribute_value" type="string">{'building_id':-1, 'submarket_id':-1}</argument>
            <argument name="sync_dataset" type="string">person</argument>
          </run>
        </structure>
      </model>
      <model name="hotel_room_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.transition_model</class_module>
            <class_name>TransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">TransitionModel</name>
            <argument name="dataset" type="string">building</argument>
            <argument name="dataset_accounting_attribute" parser_action="quote_string" type="string">hotel_units</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Hotel Room Transition Model</argument>
            <argument name="model_short_name" parser_action="quote_string" type="string">HTM</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument name="control_total_table" parser_action="quote_string" type="string">annual_hotel_room_control_totals</argument>
            <argument name="control_total_storage" type="string">base_cache_storage</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="year" type="string">year</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string">total_number_of_hotel_units</argument>
            <argument name="reset_dataset_attribute_value" type="string">{'parcel_id':-1}</argument>
          </run>
        </structure>
      </model>
      <model name="resort_unit_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.transition_model</class_module>
            <class_name>TransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">TransitionModel</name>
            <argument name="dataset" type="string">building</argument>
            <argument name="dataset_accounting_attribute" parser_action="quote_string" type="string">resort_units</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Resort Unit Transition Model</argument>
            <argument name="model_short_name" parser_action="quote_string" type="string">RTM</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument name="control_total_table" parser_action="quote_string" type="string">annual_resort_unit_control_totals</argument>
            <argument name="control_total_storage" type="string">base_cache_storage</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="year" type="string">year</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string">total_number_of_resort_units</argument>
            <argument name="reset_dataset_attribute_value" type="string">{'parcel_id':-1}</argument>
          </run>
        </structure>
      </model>
    </models>
    <templates hidden="True" name="Model Templates" parser_action="skip"/>
    <estimation_config config_name="estimation_config" name="Estimation Configuration" type="configuration">
      <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
        <selectable name="building" type="selectable">True</selectable>
        <selectable name="household" type="selectable">True</selectable>
        <selectable name="job" type="selectable">True</selectable>
        <selectable name="parcel" type="selectable">True</selectable>
        <selectable name="submarket" type="selectable">True</selectable>
        <selectable name="node" type="selectable">False</selectable>
        <selectable name="residential_building_type" type="selectable">True</selectable>
      </datasets_to_preload>
      <save_estimation_results type="boolean">True</save_estimation_results>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory" field_identifier="Cache Directory" field_description="Directory for base_year cache, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/base_year_data">oahu/base_year_data</cache_directory>
      <estimation_database_configuration type="class">
        <class_name hidden="True" type="string">EstimationDatabaseConfiguration</class_name>
        <class_module hidden="True" type="string">opus_core.database_management.configurations.estimation_database_configuration</class_module>
        <argument name="database_name" type="string">seattle_2000_parcel_baseyear_data</argument>
      </estimation_database_configuration>
      <dataset_pool_configuration type="class">
        <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
        <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
        <argument name="package_order" type="list">['honolulu_parcel','urbansim_parcel', 'urbansim', 'opus_core']</argument>
      </dataset_pool_configuration>
      <datasets_to_cache_after_each_model type="list">[]</datasets_to_cache_after_each_model>
      <low_memory_mode type="boolean">False</low_memory_mode>
      <base_year type="integer" field_identifier="Base Year">2000</base_year>
      <years type="tuple">
        <firstyear type="integer" field_identifier="Base Year">2000</firstyear>
        <lastyear type="integer" field_identifier="Base Year">2000</lastyear>
      </years>
    </estimation_config>
    <travel_model_configuration type="dictionary">
      <transcad_binary type="string">C:\\Program Files (x86)\\TransCAD\\tcw.exe</transcad_binary>
      <scenario_directory type="string">C:\\LUMTM120625</scenario_directory>
      <generic_directory type="string">C:\\model\\generic</generic_directory>
      <ui_file type="string">C:\\model\\generic\\scripts\ompo5</ui_file>
      <urbansim_to_tm_variable_mapping type="dictionary">
        <DataTable type="string">yYYYYtazdata</DataTable>
        <JoinField type="string">TAZ</JoinField>
        <variable_mapping type="dictionary">
          <variable name="zone.zone_id" type="string">TAZ</variable>
          <variable name="zone.aggregate(household.persons==1)" type="string">HH1</variable>
          <variable name="zone.number_of_agents(job)" type="string">TOTALEMP</variable>
        </variable_mapping>
      </urbansim_to_tm_variable_mapping>
      <tm_to_urbansim_variable_mapping type="dictionary">
        <row_index_name type="string">ZoneID</row_index_name>
        <col_index_name type="string">ZoneID</col_index_name>
        <matrix name="AMHwySkims" type="dictionary">
          <variable name="hwyam_sov" type="string">am_single_vehicle_to_work_travel_time</variable>
        </matrix>
      </tm_to_urbansim_variable_mapping>
      <macro type="dictionary">
        <get_cache_data_into_transcad type="string">tazmanager</get_cache_data_into_transcad>
        <get_transcad_data_into_cache type="string">ConvertMatricesToCSV</get_transcad_data_into_cache>
        <run_transcad_travel_model type="string">OMPO5</run_transcad_travel_model>
      </macro>
      <locations_to_disaggregate type="list">['parcel', 'building']</locations_to_disaggregate>
      <models type="selectable_list">
        <selectable name="honolulu_parcel.transcad.get_cache_data_into_transcad" type="selectable">True</selectable>
        <selectable name="honolulu_parcel.transcad.run_transcad_travel_model" type="selectable">True</selectable>
        <selectable name="opus_transcad.models.get_transcad_data_into_cache" type="selectable">True</selectable>
      </models>
    </travel_model_configuration>
  </model_manager>
  <scenario_manager>
    <scenario executable="True" name="building_synthesis" type="scenario">
      <parent type="scenario_name">urbansim_parcel_baseline</parent>
      <base_year type="integer">2010</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2011</firstyear>
        <lastyear type="integer">2011</lastyear>
      </years_to_run>
      <models_to_run config_name="models" type="selectable_list">
        <selectable return_value="buildings2010_transition_model" type="selectable" name="buildings2010_transition_model_1">False</selectable>
        <selectable return_value="employment2010_model" type="selectable" name="employment2010_model_1">False</selectable>
        <selectable return_value="household2010_allocation_model" type="selectable" name="household2010_allocation_model_1">False</selectable>
        <selectable return_value="scheduled_development_events_model" type="selectable" name="scheduled_development_events_model_1">True</selectable>
      </models_to_run>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory">oahu/base_year_data</cache_directory>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfiguration</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">oahu/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">oahu/base_year_data</argument>
        </argument>
        <argument hidden="True" name="unroll_gridcells" type="boolean">False</argument>
        <argument name="advanced" type="category">
          <baseyear_database_configuration config_name="scenario_database_configuration" type="class">
            <class_name hidden="True" type="string">ScenarioDatabaseConfiguration</class_name>
            <class_module hidden="True" type="string">opus_core.database_management.configurations.scenario_database_configuration</class_module>
            <argument name="database_name" type="string">seattle_2000_parcel_baseyear_data</argument>
          </baseyear_database_configuration>
          <cache_from_database type="boolean">False</cache_from_database>
          <cache_scenario_database type="string">urbansim.model_coordinators.cache_scenario_database</cache_scenario_database>
          <tables_to_cache type="selectable_list">
            <selectable name="annual_employment_control_totals" type="selectable">False</selectable>
            <selectable name="annual_household_control_totals" type="selectable">False</selectable>
            <selectable name="annual_relocation_rates_for_households" type="selectable">False</selectable>
            <selectable name="annual_relocation_rates_for_jobs" type="selectable">False</selectable>
            <selectable name="building_sqft_per_job" type="selectable">False</selectable>
            <selectable name="building_types" type="selectable">True</selectable>
            <selectable name="buildings" type="selectable">True</selectable>
            <selectable name="cities" type="selectable">False</selectable>
            <selectable name="constant_taz_columns" type="selectable">False</selectable>
            <selectable name="counties" type="selectable">False</selectable>
            <selectable name="demolition_cost_per_sqft" type="selectable">False</selectable>
            <selectable name="development_constraints" type="selectable">False</selectable>
            <selectable name="development_template_components" type="selectable">False</selectable>
            <selectable name="development_templates" type="selectable">False</selectable>
            <selectable name="employment_adhoc_sector_group_definitions" type="selectable">False</selectable>
            <selectable name="employment_adhoc_sector_groups" type="selectable">False</selectable>
            <selectable name="employment_sectors" type="selectable">False</selectable>
            <selectable name="fazes" type="selectable">False</selectable>
            <selectable name="generic_land_use_types" type="selectable">False</selectable>
            <selectable name="gridcells" type="selectable">False</selectable>
            <selectable name="home_based_employment_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="home_based_employment_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="household_characteristics_for_ht" type="selectable">False</selectable>
            <selectable name="household_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="household_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="households" type="selectable">True</selectable>
            <selectable name="households_for_estimation" type="selectable">False</selectable>
            <selectable name="job_building_types" type="selectable">False</selectable>
            <selectable name="jobs" type="selectable">True</selectable>
            <selectable name="jobs_for_estimation" type="selectable">False</selectable>
            <selectable name="land_use_types" type="selectable">False</selectable>
            <selectable name="non_home_based_employment_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="non_home_based_employment_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="parcels" type="selectable">True</selectable>
            <selectable name="persons" type="selectable">True</selectable>
            <selectable name="real_estate_price_model_coefficients" type="selectable">False</selectable>
            <selectable name="real_estate_price_model_specification" type="selectable">False</selectable>
            <selectable name="target_vacancies" type="selectable">True</selectable>
            <selectable name="urbansim_constants" type="selectable">False</selectable>
            <selectable name="zones" type="selectable">False</selectable>
            <selectable name="residential_building_types" type="selectable">True</selectable>
          </tables_to_cache>
          <tables_to_cache_nchunks type="dictionary">
            <parcels type="integer">1</parcels>
          </tables_to_cache_nchunks>
        </argument>
      </creating_baseyear_cache_configuration>
      <advanced type="category">
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">[ 'honolulu_parcel','urbansim_parcel','urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
        <flush_dataset_to_cache_after_each_model type="boolean">False</flush_dataset_to_cache_after_each_model>
        <flush_variables type="boolean">False</flush_variables>
        <low_memory_run type="boolean">False</low_memory_run>
        <datasets_to_cache_after_each_model type="list">['parcel', 'building', 'household', 'job','person']</datasets_to_cache_after_each_model>
        <unroll_gridcells hidden="True" type="boolean">False</unroll_gridcells>
        <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
          <selectable name="zone" type="selectable">False</selectable>
          <selectable name="household" type="selectable">True</selectable>
          <selectable name="building" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">True</selectable>
          <selectable name="parcel" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="person" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template_component" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="job" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="submarket" type="selectable">True</selectable>
          <selectable name="development_event_history" type="selectable">False</selectable>
          <selectable name="target_vacancy" type="selectable">True</selectable>
          <selectable name="residential_building_type" type="selectable">True</selectable>
        </datasets_to_preload>
      </advanced>
    </scenario>
    <scenario executable="True" name="test_model" type="scenario">
      <parent type="scenario_name">urbansim_parcel_baseline</parent>
      <base_year type="integer">2010</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2011</firstyear>
        <lastyear type="integer">2035</lastyear>
      </years_to_run>
      <models_to_run config_name="models" type="selectable_list">
        <selectable return_value="test_model" type="selectable" name="test_model_1">False</selectable>
        <selectable return_value="residential_price_model" type="selectable" name="residential_price_model_1">True</selectable>
        <selectable return_value="non_residential_price_model" type="selectable" name="non_residential_price_model_1">True</selectable>
        <selectable return_value="scheduled_development_events_model" type="selectable" name="scheduled_development_events_model_1">False</selectable>
        <selectable return_value="household_transition_model_with_persons" type="selectable" name="household_transition_model_with_persons_1">True</selectable>
        <selectable return_value="household_relocation_model" type="selectable" name="household_relocation_model_1">True</selectable>
        <selectable return_value="tenure_choice_model" type="selectable" name="tenure_choice_model_1">True</selectable>
        <selectable return_value="residential_building_type_choice_model_owner" type="selectable" name="residential_building_type_choice_model_owner_1">True</selectable>
        <selectable return_value="residential_building_type_choice_model_renter" type="selectable" name="residential_building_type_choice_model_renter_1">True</selectable>
        <selectable return_value="update_hh_building_type_id" type="selectable" name="update_hh_building_type_id_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_owner_sf" type="selectable" name="submarket_household_location_choice_model_owner_sf_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_owner_apartment" type="selectable" name="submarket_household_location_choice_model_owner_apartment_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_owner_townhome" type="selectable" name="submarket_household_location_choice_model_owner_townhome_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_renter_sf" type="selectable" name="submarket_household_location_choice_model_renter_sf_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_renter_apartment" type="selectable" name="submarket_household_location_choice_model_renter_apartment_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_renter_townhome" type="selectable" name="submarket_household_location_choice_model_renter_townhome_1">True</selectable>
        <selectable return_value="add_dpa" type="selectable" name="add_dpa_1">True</selectable>
        <selectable return_value="household_allocation_to_building_model" type="selectable" name="household_allocation_to_building_model_1">True</selectable>
        <selectable return_value="emp_transition_model" type="selectable" name="emp_transition_model_1">True</selectable>
        <selectable return_value="employment_relocation_model" type="selectable" name="employment_relocation_model_1">True</selectable>
        <selectable name="employment_location_choice_model" type="model_choice">True<group_members type="string">_all_</group_members>
        </selectable>
        <selectable return_value="job_allocation_to_building_model" type="selectable" name="job_allocation_to_building_model_1">True</selectable>
        <selectable return_value="real_estate_transition_model_by_submarkets" type="selectable" name="real_estate_transition_model_by_submarkets_1">True</selectable>
        <selectable return_value="honolulu_building_transition_model" type="selectable" name="honolulu_building_transition_model_1">True</selectable>
        <selectable return_value="sf_building_location_choice_model" type="selectable" name="sf_building_location_choice_model_1">True</selectable>
        <selectable return_value="mf_building_location_choice_model" type="selectable" name="mf_building_location_choice_model_1">True</selectable>
        <selectable return_value="commercial_building_location_choice_model" type="selectable" name="commercial_building_location_choice_model_1">True</selectable>
        <selectable return_value="industrial_building_location_choice_model" type="selectable" name="industrial_building_location_choice_model_1">True</selectable>
        <selectable return_value="resort_unit_transition_model" type="selectable" name="resort_unit_transition_model_1">True</selectable>
        <selectable return_value="hotel_room_transition_model" type="selectable" name="hotel_room_transition_model_1">True</selectable>
        <selectable return_value="visitor_building_location_choice_model" type="selectable" name="visitor_building_location_choice_model_1">True</selectable>
      </models_to_run>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory">oahu/base_year_data</cache_directory>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfiguration</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">oahu/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">oahu/base_year_data</argument>
        </argument>
        <argument hidden="True" name="unroll_gridcells" type="boolean">False</argument>
        <argument name="advanced" type="category">
          <baseyear_database_configuration config_name="scenario_database_configuration" type="class">
            <class_name hidden="True" type="string">ScenarioDatabaseConfiguration</class_name>
            <class_module hidden="True" type="string">opus_core.database_management.configurations.scenario_database_configuration</class_module>
            <argument name="database_name" type="string">seattle_2000_parcel_baseyear_data</argument>
          </baseyear_database_configuration>
          <cache_from_database type="boolean">False</cache_from_database>
          <cache_scenario_database type="string">urbansim.model_coordinators.cache_scenario_database</cache_scenario_database>
          <tables_to_cache type="selectable_list">
            <selectable name="annual_employment_control_totals" type="selectable">False</selectable>
            <selectable name="annual_household_control_totals" type="selectable">False</selectable>
            <selectable name="annual_relocation_rates_for_households" type="selectable">False</selectable>
            <selectable name="annual_relocation_rates_for_jobs" type="selectable">False</selectable>
            <selectable name="building_sqft_per_job" type="selectable">False</selectable>
            <selectable name="building_types" type="selectable">True</selectable>
            <selectable name="buildings" type="selectable">True</selectable>
            <selectable name="cities" type="selectable">False</selectable>
            <selectable name="constant_taz_columns" type="selectable">False</selectable>
            <selectable name="counties" type="selectable">False</selectable>
            <selectable name="demolition_cost_per_sqft" type="selectable">False</selectable>
            <selectable name="development_constraints" type="selectable">False</selectable>
            <selectable name="development_template_components" type="selectable">False</selectable>
            <selectable name="development_templates" type="selectable">False</selectable>
            <selectable name="employment_adhoc_sector_group_definitions" type="selectable">False</selectable>
            <selectable name="employment_adhoc_sector_groups" type="selectable">False</selectable>
            <selectable name="employment_sectors" type="selectable">False</selectable>
            <selectable name="fazes" type="selectable">False</selectable>
            <selectable name="generic_land_use_types" type="selectable">False</selectable>
            <selectable name="gridcells" type="selectable">False</selectable>
            <selectable name="home_based_employment_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="home_based_employment_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="household_characteristics_for_ht" type="selectable">False</selectable>
            <selectable name="household_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="household_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="households" type="selectable">True</selectable>
            <selectable name="households_for_estimation" type="selectable">False</selectable>
            <selectable name="job_building_types" type="selectable">False</selectable>
            <selectable name="jobs" type="selectable">True</selectable>
            <selectable name="jobs_for_estimation" type="selectable">False</selectable>
            <selectable name="land_use_types" type="selectable">False</selectable>
            <selectable name="non_home_based_employment_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="non_home_based_employment_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="parcels" type="selectable">True</selectable>
            <selectable name="persons" type="selectable">True</selectable>
            <selectable name="real_estate_price_model_coefficients" type="selectable">False</selectable>
            <selectable name="real_estate_price_model_specification" type="selectable">False</selectable>
            <selectable name="target_vacancies" type="selectable">True</selectable>
            <selectable name="urbansim_constants" type="selectable">False</selectable>
            <selectable name="zones" type="selectable">False</selectable>
            <selectable name="residential_building_types" type="selectable">True</selectable>
          </tables_to_cache>
          <tables_to_cache_nchunks type="dictionary">
            <parcels type="integer">1</parcels>
          </tables_to_cache_nchunks>
        </argument>
      </creating_baseyear_cache_configuration>
      <advanced type="category">
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">[ 'honolulu_parcel','urbansim_parcel','urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
        <flush_dataset_to_cache_after_each_model type="boolean">False</flush_dataset_to_cache_after_each_model>
        <flush_variables type="boolean">False</flush_variables>
        <low_memory_run type="boolean">False</low_memory_run>
        <datasets_to_cache_after_each_model type="list">['parcel', 'building', 'household', 'job','person']</datasets_to_cache_after_each_model>
        <unroll_gridcells hidden="True" type="boolean">False</unroll_gridcells>
        <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
          <selectable name="zone" type="selectable">False</selectable>
          <selectable name="household" type="selectable">True</selectable>
          <selectable name="building" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">True</selectable>
          <selectable name="parcel" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="person" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template_component" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="job" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="submarket" type="selectable">True</selectable>
          <selectable name="development_event_history" type="selectable">False</selectable>
          <selectable name="target_vacancy" type="selectable">True</selectable>
          <selectable name="residential_building_type" type="selectable">True</selectable>
        </datasets_to_preload>
      </advanced>
    </scenario>
    <scenario executable="True" name="popsyn_scenario" type="scenario">
      <parent type="scenario_name">urbansim_parcel_baseline</parent>
      <base_year type="integer">2000</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2010</firstyear>
        <lastyear type="integer">2010</lastyear>
      </years_to_run>
      <models_to_run config_name="models" type="selectable_list">
        <selectable return_value="test_model" type="selectable" name="test_model_1">False</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
        <selectable return_value="household_transition_model_size_workers" type="selectable" name="household_transition_model_size_workers_1">True</selectable>
        <selectable return_value="household_transition_model_income" type="selectable" name="household_transition_model_income_1">True</selectable>
        <selectable return_value="household_transition_model_size_tenure" type="selectable" name="household_transition_model_size_tenure_1">True</selectable>
      </models_to_run>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory">oahu/base_year_data</cache_directory>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfiguration</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">oahu/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">oahu/base_year_data</argument>
        </argument>
        <argument hidden="True" name="unroll_gridcells" type="boolean">False</argument>
        <argument name="advanced" type="category">
          <baseyear_database_configuration config_name="scenario_database_configuration" type="class">
            <class_name hidden="True" type="string">ScenarioDatabaseConfiguration</class_name>
            <class_module hidden="True" type="string">opus_core.database_management.configurations.scenario_database_configuration</class_module>
            <argument name="database_name" type="string">seattle_2000_parcel_baseyear_data</argument>
          </baseyear_database_configuration>
          <cache_from_database type="boolean">False</cache_from_database>
          <cache_scenario_database type="string">urbansim.model_coordinators.cache_scenario_database</cache_scenario_database>
          <tables_to_cache type="selectable_list">
            <selectable name="annual_employment_control_totals" type="selectable">False</selectable>
            <selectable name="annual_household_control_totals" type="selectable">False</selectable>
            <selectable name="annual_relocation_rates_for_households" type="selectable">False</selectable>
            <selectable name="annual_relocation_rates_for_jobs" type="selectable">False</selectable>
            <selectable name="building_sqft_per_job" type="selectable">False</selectable>
            <selectable name="building_types" type="selectable">True</selectable>
            <selectable name="buildings" type="selectable">True</selectable>
            <selectable name="cities" type="selectable">False</selectable>
            <selectable name="constant_taz_columns" type="selectable">False</selectable>
            <selectable name="counties" type="selectable">False</selectable>
            <selectable name="demolition_cost_per_sqft" type="selectable">False</selectable>
            <selectable name="development_constraints" type="selectable">False</selectable>
            <selectable name="development_template_components" type="selectable">False</selectable>
            <selectable name="development_templates" type="selectable">False</selectable>
            <selectable name="employment_adhoc_sector_group_definitions" type="selectable">False</selectable>
            <selectable name="employment_adhoc_sector_groups" type="selectable">False</selectable>
            <selectable name="employment_sectors" type="selectable">False</selectable>
            <selectable name="fazes" type="selectable">False</selectable>
            <selectable name="generic_land_use_types" type="selectable">False</selectable>
            <selectable name="gridcells" type="selectable">False</selectable>
            <selectable name="home_based_employment_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="home_based_employment_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="household_characteristics_for_ht" type="selectable">False</selectable>
            <selectable name="household_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="household_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="households" type="selectable">True</selectable>
            <selectable name="households_for_estimation" type="selectable">False</selectable>
            <selectable name="job_building_types" type="selectable">False</selectable>
            <selectable name="jobs" type="selectable">True</selectable>
            <selectable name="jobs_for_estimation" type="selectable">False</selectable>
            <selectable name="land_use_types" type="selectable">False</selectable>
            <selectable name="non_home_based_employment_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="non_home_based_employment_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="parcels" type="selectable">True</selectable>
            <selectable name="persons" type="selectable">True</selectable>
            <selectable name="real_estate_price_model_coefficients" type="selectable">False</selectable>
            <selectable name="real_estate_price_model_specification" type="selectable">False</selectable>
            <selectable name="target_vacancies" type="selectable">True</selectable>
            <selectable name="urbansim_constants" type="selectable">False</selectable>
            <selectable name="zones" type="selectable">False</selectable>
            <selectable name="residential_building_types" type="selectable">True</selectable>
          </tables_to_cache>
          <tables_to_cache_nchunks type="dictionary">
            <parcels type="integer">1</parcels>
          </tables_to_cache_nchunks>
        </argument>
      </creating_baseyear_cache_configuration>
      <advanced type="category">
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">[ 'honolulu_parcel','urbansim_parcel','urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
        <flush_dataset_to_cache_after_each_model type="boolean">False</flush_dataset_to_cache_after_each_model>
        <flush_variables type="boolean">False</flush_variables>
        <low_memory_run type="boolean">False</low_memory_run>
        <datasets_to_cache_after_each_model type="list">['parcel', 'building', 'household', 'job','person']</datasets_to_cache_after_each_model>
        <unroll_gridcells hidden="True" type="boolean">False</unroll_gridcells>
        <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
          <selectable name="zone" type="selectable">False</selectable>
          <selectable name="household" type="selectable">True</selectable>
          <selectable name="building" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">True</selectable>
          <selectable name="parcel" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="person" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template_component" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="job" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="submarket" type="selectable">True</selectable>
          <selectable name="development_event_history" type="selectable">False</selectable>
          <selectable name="target_vacancy" type="selectable">True</selectable>
          <selectable name="residential_building_type" type="selectable">True</selectable>
        </datasets_to_preload>
      </advanced>
    </scenario>
    <scenario executable="True" name="test_scenario" type="scenario">
      <parent type="scenario_name">urbansim_parcel_baseline</parent>
      <base_year type="integer">2000</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2001</firstyear>
        <lastyear type="integer">2002</lastyear>
      </years_to_run>
      <models_to_run config_name="models" type="selectable_list">
        <selectable return_value="residential_price_model" type="selectable" name="residential_price_model_1">True</selectable>
        <selectable return_value="non_residential_price_model" type="selectable" name="non_residential_price_model_1">True</selectable>
        <selectable return_value="household_transition_model_with_persons" type="selectable" name="household_transition_model_with_persons_1">True</selectable>
        <selectable return_value="household_relocation_model" type="selectable" name="household_relocation_model_1">True</selectable>
        <selectable return_value="tenure_choice_model" type="selectable" name="tenure_choice_model_1">True</selectable>
        <selectable return_value="residential_building_type_choice_model_owner" type="selectable" name="residential_building_type_choice_model_owner_1">True</selectable>
        <selectable return_value="residential_building_type_choice_model_renter" type="selectable" name="residential_building_type_choice_model_renter_1">True</selectable>
        <selectable return_value="update_hh_building_type_id" type="selectable" name="update_hh_building_type_id_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_owner_sfdetached" type="selectable" name="submarket_household_location_choice_model_owner_sfdetached_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_owner_duplex" type="selectable" name="submarket_household_location_choice_model_owner_duplex_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_owner_apartment" type="selectable" name="submarket_household_location_choice_model_owner_apartment_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_owner_townhome" type="selectable" name="submarket_household_location_choice_model_owner_townhome_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_renter_sfdetached" type="selectable" name="submarket_household_location_choice_model_renter_sfdetached_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_renter_duplex" type="selectable" name="submarket_household_location_choice_model_renter_duplex_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_renter_apartment" type="selectable" name="submarket_household_location_choice_model_renter_apartment_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_renter_townhome" type="selectable" name="submarket_household_location_choice_model_renter_townhome_1">True</selectable>
        <selectable return_value="household_allocation_to_building_model" type="selectable" name="household_allocation_to_building_model_1">True</selectable>
        <selectable return_value="emp_transition_model" type="selectable" name="emp_transition_model_1">True</selectable>
        <selectable return_value="employment_relocation_model" type="selectable" name="employment_relocation_model_1">True</selectable>
        <selectable name="employment_location_choice_model" type="model_choice">True<group_members type="string">_all_</group_members>
        </selectable>
        <selectable return_value="job_allocation_to_building_model" type="selectable" name="job_allocation_to_building_model_1">True</selectable>
        <selectable return_value="honolulu_building_transition_model" type="selectable" name="SC_building_transition_model_1">True</selectable>
        <selectable return_value="sf_building_location_choice_model" type="selectable" name="sf_building_location_choice_model_1">True</selectable>
        <selectable return_value="mf_building_location_choice_model" type="selectable" name="mf_building_location_choice_model_1">True</selectable>
        <selectable return_value="commercial_building_location_choice_model" type="selectable" name="commercial_building_location_choice_model_1">True</selectable>
        <selectable return_value="industrial_building_location_choice_model" type="selectable" name="industrial_building_location_choice_model_1">True</selectable>
        <selectable return_value="hotel_building_location_choice_model" type="selectable" name="hotel_building_location_choice_model_1">True</selectable>
      </models_to_run>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory">oahu/base_year_data</cache_directory>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfiguration</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">oahu/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">oahu/base_year_data</argument>
        </argument>
        <argument hidden="True" name="unroll_gridcells" type="boolean">False</argument>
        <argument name="advanced" type="category">
          <baseyear_database_configuration config_name="scenario_database_configuration" type="class">
            <class_name hidden="True" type="string">ScenarioDatabaseConfiguration</class_name>
            <class_module hidden="True" type="string">opus_core.database_management.configurations.scenario_database_configuration</class_module>
            <argument name="database_name" type="string">seattle_2000_parcel_baseyear_data</argument>
          </baseyear_database_configuration>
          <cache_from_database type="boolean">False</cache_from_database>
          <cache_scenario_database type="string">urbansim.model_coordinators.cache_scenario_database</cache_scenario_database>
          <tables_to_cache type="selectable_list">
            <selectable name="annual_employment_control_totals" type="selectable">False</selectable>
            <selectable name="annual_household_control_totals" type="selectable">False</selectable>
            <selectable name="annual_relocation_rates_for_households" type="selectable">False</selectable>
            <selectable name="annual_relocation_rates_for_jobs" type="selectable">False</selectable>
            <selectable name="building_sqft_per_job" type="selectable">False</selectable>
            <selectable name="building_types" type="selectable">True</selectable>
            <selectable name="buildings" type="selectable">True</selectable>
            <selectable name="cities" type="selectable">False</selectable>
            <selectable name="constant_taz_columns" type="selectable">False</selectable>
            <selectable name="counties" type="selectable">False</selectable>
            <selectable name="demolition_cost_per_sqft" type="selectable">False</selectable>
            <selectable name="development_constraints" type="selectable">False</selectable>
            <selectable name="development_template_components" type="selectable">False</selectable>
            <selectable name="development_templates" type="selectable">False</selectable>
            <selectable name="employment_adhoc_sector_group_definitions" type="selectable">False</selectable>
            <selectable name="employment_adhoc_sector_groups" type="selectable">False</selectable>
            <selectable name="employment_sectors" type="selectable">False</selectable>
            <selectable name="fazes" type="selectable">False</selectable>
            <selectable name="generic_land_use_types" type="selectable">False</selectable>
            <selectable name="gridcells" type="selectable">False</selectable>
            <selectable name="home_based_employment_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="home_based_employment_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="household_characteristics_for_ht" type="selectable">False</selectable>
            <selectable name="household_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="household_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="households" type="selectable">True</selectable>
            <selectable name="households_for_estimation" type="selectable">False</selectable>
            <selectable name="job_building_types" type="selectable">False</selectable>
            <selectable name="jobs" type="selectable">True</selectable>
            <selectable name="jobs_for_estimation" type="selectable">False</selectable>
            <selectable name="land_use_types" type="selectable">False</selectable>
            <selectable name="non_home_based_employment_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="non_home_based_employment_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="parcels" type="selectable">True</selectable>
            <selectable name="persons" type="selectable">True</selectable>
            <selectable name="real_estate_price_model_coefficients" type="selectable">False</selectable>
            <selectable name="real_estate_price_model_specification" type="selectable">False</selectable>
            <selectable name="target_vacancies" type="selectable">True</selectable>
            <selectable name="urbansim_constants" type="selectable">False</selectable>
            <selectable name="zones" type="selectable">False</selectable>
            <selectable name="residential_building_types" type="selectable">True</selectable>
          </tables_to_cache>
          <tables_to_cache_nchunks type="dictionary">
            <parcels type="integer">1</parcels>
          </tables_to_cache_nchunks>
        </argument>
      </creating_baseyear_cache_configuration>
      <advanced type="category">
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">[ 'honolulu_parcel','urbansim_parcel','urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
        <flush_dataset_to_cache_after_each_model type="boolean">False</flush_dataset_to_cache_after_each_model>
        <flush_variables type="boolean">False</flush_variables>
        <low_memory_run type="boolean">False</low_memory_run>
        <datasets_to_cache_after_each_model type="list">['parcel', 'building', 'household', 'job','person']</datasets_to_cache_after_each_model>
        <unroll_gridcells hidden="True" type="boolean">False</unroll_gridcells>
        <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
          <selectable name="zone" type="selectable">False</selectable>
          <selectable name="household" type="selectable">True</selectable>
          <selectable name="building" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">True</selectable>
          <selectable name="parcel" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="person" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template_component" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="job" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="submarket" type="selectable">True</selectable>
          <selectable name="development_event_history" type="selectable">False</selectable>
          <selectable name="target_vacancy" type="selectable">True</selectable>
          <selectable name="residential_building_type" type="selectable">True</selectable>
        </datasets_to_preload>
      </advanced>
    </scenario>
    <scenario executable="True" name="Baseline" type="scenario">
      <parent type="scenario_name">urbansim_parcel_baseline</parent>
      <base_year type="integer">2000</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2001</firstyear>
        <lastyear type="integer">2002</lastyear>
      </years_to_run>
      <models_to_run config_name="models" type="selectable_list">
        <selectable return_value="scheduled_development_events_model" type="selectable" name="scheduled_development_events_model_1">True</selectable>
        <selectable return_value="residential_price_model" type="selectable" name="residential_price_model_1">True</selectable>
        <selectable return_value="non_residential_price_model" type="selectable" name="non_residential_price_model_1">True</selectable>
        <selectable return_value="household_transition_model_with_persons" type="selectable" name="household_transition_model_with_persons_1">True</selectable>
        <selectable return_value="household_relocation_model" type="selectable" name="household_relocation_model_1">True</selectable>
        <selectable return_value="tenure_choice_model" type="selectable" name="tenure_choice_model_1">True</selectable>
        <selectable return_value="residential_building_type_choice_model_owner" type="selectable" name="residential_building_type_choice_model_owner_1">True</selectable>
        <selectable return_value="residential_building_type_choice_model_renter" type="selectable" name="residential_building_type_choice_model_renter_1">True</selectable>
        <selectable return_value="update_hh_building_type_id" type="selectable" name="update_hh_building_type_id_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_owner_sfdetached" type="selectable" name="submarket_household_location_choice_model_owner_sfdetached_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_owner_duplex" type="selectable" name="submarket_household_location_choice_model_owner_duplex_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_owner_apartment" type="selectable" name="submarket_household_location_choice_model_owner_apartment_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_owner_townhome" type="selectable" name="submarket_household_location_choice_model_owner_townhome_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_renter_sfdetached" type="selectable" name="submarket_household_location_choice_model_renter_sfdetached_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_renter_duplex" type="selectable" name="submarket_household_location_choice_model_renter_duplex_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_renter_apartment" type="selectable" name="submarket_household_location_choice_model_renter_apartment_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_renter_townhome" type="selectable" name="submarket_household_location_choice_model_renter_townhome_1">True</selectable>
        <selectable return_value="add_dpa" type="selectable" name="add_dpa_1">True</selectable>
        <selectable return_value="household_allocation_to_building_model" type="selectable" name="household_allocation_to_building_model_1">True</selectable>
        <selectable return_value="emp_transition_model" type="selectable" name="emp_transition_model_1">True</selectable>
        <selectable return_value="employment_relocation_model" type="selectable" name="employment_relocation_model_1">True</selectable>
        <selectable name="employment_location_choice_model" type="model_choice">True<group_members type="string">_all_</group_members>
        </selectable>
        <selectable return_value="job_allocation_to_building_model" type="selectable" name="job_allocation_to_building_model_1">True</selectable>
        <selectable return_value="honolulu_building_transition_model" type="selectable" name="SC_building_transition_model_1">True</selectable>
        <selectable return_value="sf_building_location_choice_model" type="selectable" name="sf_building_location_choice_model_1">True</selectable>
        <selectable return_value="mf_building_location_choice_model" type="selectable" name="mf_building_location_choice_model_1">True</selectable>
        <selectable return_value="commercial_building_location_choice_model" type="selectable" name="commercial_building_location_choice_model_1">True</selectable>
        <selectable return_value="industrial_building_location_choice_model" type="selectable" name="industrial_building_location_choice_model_1">True</selectable>
        <selectable return_value="hotel_building_location_choice_model" type="selectable" name="hotel_building_location_choice_model_1">True</selectable>
        <selectable return_value="visitor_unit_model" type="selectable" name="visitor_unit_model_1">True</selectable>
      </models_to_run>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory">oahu/base_year_data</cache_directory>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfiguration</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">oahu/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">oahu/base_year_data</argument>
        </argument>
        <argument hidden="True" name="unroll_gridcells" type="boolean">False</argument>
        <argument name="advanced" type="category">
          <baseyear_database_configuration config_name="scenario_database_configuration" type="class">
            <class_name hidden="True" type="string">ScenarioDatabaseConfiguration</class_name>
            <class_module hidden="True" type="string">opus_core.database_management.configurations.scenario_database_configuration</class_module>
            <argument name="database_name" type="string">seattle_2000_parcel_baseyear_data</argument>
          </baseyear_database_configuration>
          <cache_from_database type="boolean">False</cache_from_database>
          <cache_scenario_database type="string">urbansim.model_coordinators.cache_scenario_database</cache_scenario_database>
          <tables_to_cache type="selectable_list">
            <selectable name="annual_employment_control_totals" type="selectable">False</selectable>
            <selectable name="annual_household_control_totals" type="selectable">False</selectable>
            <selectable name="annual_relocation_rates_for_households" type="selectable">False</selectable>
            <selectable name="annual_relocation_rates_for_jobs" type="selectable">False</selectable>
            <selectable name="building_sqft_per_job" type="selectable">False</selectable>
            <selectable name="building_types" type="selectable">True</selectable>
            <selectable name="buildings" type="selectable">True</selectable>
            <selectable name="cities" type="selectable">False</selectable>
            <selectable name="constant_taz_columns" type="selectable">False</selectable>
            <selectable name="counties" type="selectable">False</selectable>
            <selectable name="demolition_cost_per_sqft" type="selectable">False</selectable>
            <selectable name="development_constraints" type="selectable">False</selectable>
            <selectable name="development_template_components" type="selectable">False</selectable>
            <selectable name="development_templates" type="selectable">False</selectable>
            <selectable name="employment_adhoc_sector_group_definitions" type="selectable">False</selectable>
            <selectable name="employment_adhoc_sector_groups" type="selectable">False</selectable>
            <selectable name="employment_sectors" type="selectable">False</selectable>
            <selectable name="fazes" type="selectable">False</selectable>
            <selectable name="generic_land_use_types" type="selectable">False</selectable>
            <selectable name="gridcells" type="selectable">False</selectable>
            <selectable name="home_based_employment_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="home_based_employment_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="household_characteristics_for_ht" type="selectable">False</selectable>
            <selectable name="household_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="household_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="households" type="selectable">True</selectable>
            <selectable name="households_for_estimation" type="selectable">False</selectable>
            <selectable name="job_building_types" type="selectable">False</selectable>
            <selectable name="jobs" type="selectable">True</selectable>
            <selectable name="jobs_for_estimation" type="selectable">False</selectable>
            <selectable name="land_use_types" type="selectable">False</selectable>
            <selectable name="non_home_based_employment_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="non_home_based_employment_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="parcels" type="selectable">True</selectable>
            <selectable name="persons" type="selectable">True</selectable>
            <selectable name="real_estate_price_model_coefficients" type="selectable">False</selectable>
            <selectable name="real_estate_price_model_specification" type="selectable">False</selectable>
            <selectable name="target_vacancies" type="selectable">True</selectable>
            <selectable name="urbansim_constants" type="selectable">False</selectable>
            <selectable name="zones" type="selectable">False</selectable>
            <selectable name="residential_building_types" type="selectable">True</selectable>
          </tables_to_cache>
          <tables_to_cache_nchunks type="dictionary">
            <parcels type="integer">1</parcels>
          </tables_to_cache_nchunks>
        </argument>
      </creating_baseyear_cache_configuration>
      <advanced type="category">
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">[ 'honolulu_parcel','urbansim_parcel','urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
        <flush_dataset_to_cache_after_each_model type="boolean">True</flush_dataset_to_cache_after_each_model>
        <flush_variables type="boolean">False</flush_variables>
        <low_memory_run type="boolean">True</low_memory_run>
        <datasets_to_cache_after_each_model type="list">['parcel', 'building', 'household', 'job','person']</datasets_to_cache_after_each_model>
        <unroll_gridcells hidden="True" type="boolean">False</unroll_gridcells>
        <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
          <selectable name="zone" type="selectable">False</selectable>
          <selectable name="household" type="selectable">True</selectable>
          <selectable name="building" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">True</selectable>
          <selectable name="parcel" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="person" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template_component" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="job" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="submarket" type="selectable">True</selectable>
          <selectable name="development_event_history" type="selectable">False</selectable>
          <selectable name="target_vacancy" type="selectable">True</selectable>
          <selectable name="residential_building_type" type="selectable">True</selectable>
        </datasets_to_preload>
      </advanced>
    </scenario>
    <scenario executable="True" name="baseline_with_tm" type="scenario">
      <parent type="scenario_name">urbansim_parcel_baseline</parent>
      <base_year type="integer">2000</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2001</firstyear>
        <lastyear type="integer">2040</lastyear>
      </years_to_run>
      <models_to_run config_name="models" type="selectable_list">
        <selectable return_value="residential_price_model" type="selectable" name="residential_price_model_1">True</selectable>
        <selectable return_value="non_residential_price_model" type="selectable" name="non_residential_price_model_1">True</selectable>
        <selectable return_value="household_transition_model_with_persons" type="selectable" name="household_transition_model_with_persons_1">True</selectable>
        <selectable return_value="household_relocation_model" type="selectable" name="household_relocation_model_1">True</selectable>
        <selectable return_value="tenure_choice_model" type="selectable" name="tenure_choice_model_1">True</selectable>
        <selectable return_value="residential_building_type_choice_model_owner" type="selectable" name="residential_building_type_choice_model_owner_1">True</selectable>
        <selectable return_value="residential_building_type_choice_model_renter" type="selectable" name="residential_building_type_choice_model_renter_1">True</selectable>
        <selectable return_value="update_hh_building_type_id" type="selectable" name="update_hh_building_type_id_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_owner_sfdetached" type="selectable" name="submarket_household_location_choice_model_owner_sfdetached_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_owner_duplex" type="selectable" name="submarket_household_location_choice_model_owner_duplex_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_owner_apartment" type="selectable" name="submarket_household_location_choice_model_owner_apartment_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_owner_townhome" type="selectable" name="submarket_household_location_choice_model_owner_townhome_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_renter_sfdetached" type="selectable" name="submarket_household_location_choice_model_renter_sfdetached_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_renter_duplex" type="selectable" name="submarket_household_location_choice_model_renter_duplex_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_renter_apartment" type="selectable" name="submarket_household_location_choice_model_renter_apartment_1">True</selectable>
        <selectable return_value="submarket_household_location_choice_model_renter_townhome" type="selectable" name="submarket_household_location_choice_model_renter_townhome_1">True</selectable>
        <selectable return_value="household_allocation_to_building_model" type="selectable" name="household_allocation_to_building_model_1">True</selectable>
        <selectable return_value="emp_transition_model" type="selectable" name="emp_transition_model_1">True</selectable>
        <selectable return_value="employment_relocation_model" type="selectable" name="employment_relocation_model_1">True</selectable>
        <selectable name="employment_location_choice_model" type="model_choice">True<group_members type="string">_all_</group_members>
        </selectable>
        <selectable return_value="job_allocation_to_building_model" type="selectable" name="job_allocation_to_building_model_1">True</selectable>
        <selectable return_value="honolulu_building_transition_model" type="selectable" name="SC_building_transition_model_1">True</selectable>
        <selectable return_value="sf_building_location_choice_model" type="selectable" name="sf_building_location_choice_model_1">True</selectable>
        <selectable return_value="mf_building_location_choice_model" type="selectable" name="mf_building_location_choice_model_1">True</selectable>
        <selectable return_value="commercial_building_location_choice_model" type="selectable" name="commercial_building_location_choice_model_1">True</selectable>
        <selectable return_value="industrial_building_location_choice_model" type="selectable" name="industrial_building_location_choice_model_1">True</selectable>
        <selectable return_value="hotel_building_location_choice_model" type="selectable" name="hotel_building_location_choice_model_1">True</selectable>
      </models_to_run>
      <travel_model_configuration type="dictionary">
        <years_to_run key_name="year" type="category_with_special_keys">
          <run_description type="dictionary">
            <year type="integer">2020</year>
            <data_dir type="string"/>
            <data_exchange_dir type="string">inputs\\taz\\2020</data_exchange_dir>
          </run_description>
          <run_description type="dictionary">
            <year type="integer">2030</year>
            <data_dir type="string"/>
            <data_exchange_dir type="string">inputs\\taz\\2030</data_exchange_dir>
          </run_description>
          <run_description type="dictionary">
            <year type="integer">2040</year>
            <data_dir type="string"/>
            <data_exchange_dir type="string">inputs\\taz\\2040</data_exchange_dir>
          </run_description>
        </years_to_run>
      </travel_model_configuration>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory">oahu/base_year_data</cache_directory>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfiguration</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">oahu/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">oahu/base_year_data</argument>
        </argument>
        <argument hidden="True" name="unroll_gridcells" type="boolean">False</argument>
        <argument name="advanced" type="category">
          <baseyear_database_configuration config_name="scenario_database_configuration" type="class">
            <class_name hidden="True" type="string">ScenarioDatabaseConfiguration</class_name>
            <class_module hidden="True" type="string">opus_core.database_management.configurations.scenario_database_configuration</class_module>
            <argument name="database_name" type="string">seattle_2000_parcel_baseyear_data</argument>
          </baseyear_database_configuration>
          <cache_from_database type="boolean">False</cache_from_database>
          <cache_scenario_database type="string">urbansim.model_coordinators.cache_scenario_database</cache_scenario_database>
          <tables_to_cache type="selectable_list">
            <selectable name="annual_employment_control_totals" type="selectable">False</selectable>
            <selectable name="annual_household_control_totals" type="selectable">False</selectable>
            <selectable name="annual_relocation_rates_for_households" type="selectable">False</selectable>
            <selectable name="annual_relocation_rates_for_jobs" type="selectable">False</selectable>
            <selectable name="building_sqft_per_job" type="selectable">False</selectable>
            <selectable name="building_types" type="selectable">True</selectable>
            <selectable name="buildings" type="selectable">True</selectable>
            <selectable name="cities" type="selectable">False</selectable>
            <selectable name="constant_taz_columns" type="selectable">False</selectable>
            <selectable name="counties" type="selectable">False</selectable>
            <selectable name="demolition_cost_per_sqft" type="selectable">False</selectable>
            <selectable name="development_constraints" type="selectable">False</selectable>
            <selectable name="development_template_components" type="selectable">False</selectable>
            <selectable name="development_templates" type="selectable">False</selectable>
            <selectable name="employment_adhoc_sector_group_definitions" type="selectable">False</selectable>
            <selectable name="employment_adhoc_sector_groups" type="selectable">False</selectable>
            <selectable name="employment_sectors" type="selectable">False</selectable>
            <selectable name="fazes" type="selectable">False</selectable>
            <selectable name="generic_land_use_types" type="selectable">False</selectable>
            <selectable name="gridcells" type="selectable">False</selectable>
            <selectable name="home_based_employment_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="home_based_employment_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="household_characteristics_for_ht" type="selectable">False</selectable>
            <selectable name="household_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="household_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="households" type="selectable">True</selectable>
            <selectable name="households_for_estimation" type="selectable">False</selectable>
            <selectable name="job_building_types" type="selectable">False</selectable>
            <selectable name="jobs" type="selectable">True</selectable>
            <selectable name="jobs_for_estimation" type="selectable">False</selectable>
            <selectable name="land_use_types" type="selectable">False</selectable>
            <selectable name="non_home_based_employment_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="non_home_based_employment_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="parcels" type="selectable">True</selectable>
            <selectable name="persons" type="selectable">True</selectable>
            <selectable name="real_estate_price_model_coefficients" type="selectable">False</selectable>
            <selectable name="real_estate_price_model_specification" type="selectable">False</selectable>
            <selectable name="target_vacancies" type="selectable">True</selectable>
            <selectable name="urbansim_constants" type="selectable">False</selectable>
            <selectable name="zones" type="selectable">False</selectable>
            <selectable name="residential_building_types" type="selectable">True</selectable>
          </tables_to_cache>
          <tables_to_cache_nchunks type="dictionary">
            <parcels type="integer">1</parcels>
          </tables_to_cache_nchunks>
        </argument>
      </creating_baseyear_cache_configuration>
      <advanced type="category">
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">[ 'honolulu_parcel','urbansim_parcel','urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
        <flush_dataset_to_cache_after_each_model type="boolean">False</flush_dataset_to_cache_after_each_model>
        <flush_variables type="boolean">False</flush_variables>
        <low_memory_run type="boolean">False</low_memory_run>
        <datasets_to_cache_after_each_model type="list">['parcel', 'building', 'household', 'job','person']</datasets_to_cache_after_each_model>
        <unroll_gridcells hidden="True" type="boolean">False</unroll_gridcells>
        <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
          <selectable name="zone" type="selectable">False</selectable>
          <selectable name="household" type="selectable">True</selectable>
          <selectable name="building" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">True</selectable>
          <selectable name="parcel" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="person" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template_component" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="job" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="submarket" type="selectable">True</selectable>
          <selectable name="development_event_history" type="selectable">False</selectable>
          <selectable name="target_vacancy" type="selectable">True</selectable>
          <selectable name="residential_building_type" type="selectable">True</selectable>
        </datasets_to_preload>
      </advanced>
    </scenario>
  </scenario_manager>
  <results_manager>
    <indicator_batches name="Indicator Batches" setexpanded="True" type="group">
      <indicator_batch name="dpa">
        <batch_visualization hidden="Children" type="batch_visualization" name="New visualization">
          <indicators>['dpa_jobs3', 'dpa_households3']</indicators>
          <output_type>tab</output_type>
          <dataset_name>dpa</dataset_name>
          <visualization_type>tab</visualization_type>
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">1</setting>
          </settings>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="region">
        <batch_visualization hidden="Children" type="batch_visualization" name="New visualization">
          <indicators>['unplaced_jobs', 'unplaced_households', 'unplaced_buildings']</indicators>
          <output_type>tab</output_type>
          <dataset_name>alldata</dataset_name>
          <visualization_type>tab</visualization_type>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="zonal">
        <batch_visualization hidden="Children" type="batch_visualization" name="hotel_resort">
          <indicators>['tm_hh5', 'tm_hh4', 'tm_hh3', 'tm_hh2', 'tm_hh1', 'tm_hu', 'tm_totalhh', 'tm_totalemp', 'tm_hotel', 'tm_govt', 'tm_mili', 'tm_hr', 'tm_rc', 'tm_gq', 'tm_pop', 'tm_service', 'tm_ag', 'tm_tcu', 'tm_indus', 'tm_fire', 'tm_retail', 'tm_cstr']</indicators>
          <output_type>tab</output_type>
          <dataset_name>zone</dataset_name>
          <visualization_type>tab</visualization_type>
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">1</setting>
          </settings>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="joint_distrib">
        <batch_visualization hidden="Children" type="batch_visualization" name="s5b">
          <indicators>['s5w0i30', 's5w1i30', 's5w2i30', 's5w3ui30', 's5w0i60', 's5w1i60', 's5w2i60', 's5w3ui60']</indicators>
          <output_type>tab</output_type>
          <dataset_name>tract</dataset_name>
          <visualization_type>tab</visualization_type>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="popsyn">
        <batch_visualization hidden="Children" type="batch_visualization" name="New visualization">
          <indicators>['s1', 's2', 's3', 's4', 's5', 'i1', 'i2', 'i3', 'i4', 'w0', 'w1', 'w2', 'w3']</indicators>
          <output_type>tab</output_type>
          <dataset_name>tract</dataset_name>
          <visualization_type>tab</visualization_type>
        </batch_visualization>
      </indicator_batch>
    </indicator_batches>
  </results_manager>
</opus_project>

