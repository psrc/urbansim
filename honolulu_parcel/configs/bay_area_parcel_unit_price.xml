<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <description type="string">Honolulu parcel configuration</description>
    <project_name hidden="True" type="string">honolulu_parcel</project_name>
    <parent type="file">urbansim_parcel/configs/urbansim_parcel.xml</parent>
    <expression_library type="dictionary">
      <variable use="both" source="primary attribute" name="building.building_year_built" type="variable_definition">building.year_built</variable>
      <variable use="both" source="expression" name="employment_submarket.non_residential_sqft_esubmarket" type="variable_definition">employment_submarket.aggregate(building.non_residential_sqft)</variable>
      <variable use="both" source="expression" name="submarket.average_income_in_submarket" type="variable_definition">submarket.aggregate(household.income,function=mean)</variable>
      <variable use="both" source="expression" name="household_x_submarket.children_x_average_stories" type="variable_definition">household.children*(submarket.aggregate(building.stories)*1.0)/submarket.aggregate(building.stories&gt;0)</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids" type="variable_definition">(household.children&gt;0)*(safe_array_divide(submarket.aggregate(household.children&gt;0),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="submarket.time_to_cbd_submarket" type="variable_definition">submarket.disaggregate(zone.travel_time_to_cbd)</variable>
      <variable use="model variable" source="expression" name="submarket.ln_jobs_30_min_submarket" type="variable_definition">ln_bounded(submarket.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="submarket.avg_unit_price_submarket" type="variable_definition">safe_array_divide(submarket.aggregate(building.improvement_value),submarket.aggregate(building.residential_units))</variable>
      <variable use="both" source="expression" name="household_x_submarket.age_x_average_year_built" type="variable_definition">household.age_of_head*(submarket.aggregate(building.year_built)*1.0)/submarket.aggregate(building.year_built&gt;0)</variable>
      <variable use="both" source="expression" name="household_x_submarket.income_x_average_year_built" type="variable_definition">household.income*(submarket.aggregate(building.year_built)*1.0)/submarket.aggregate(building.year_built&gt;0)</variable>
      <variable use="both" source="expression" name="household_x_submarket.children_x_core_submarket" type="variable_definition">household.children*submarket.disaggregate((zone.area_type_id&gt;3)*(zone.area_type_id&lt;7))</variable>
      <variable use="both" source="expression" name="household_x_submarket.income_x_core_submarket" type="variable_definition">household.income*submarket.disaggregate((zone.area_type_id&gt;3)*(zone.area_type_id&lt;7))</variable>
      <variable use="both" source="expression" name="submarket.core_submarket" type="variable_definition">submarket.disaggregate((zone.area_type_id&gt;3)*(zone.area_type_id&lt;7))</variable>
      <variable use="both" source="expression" name="zone.inner_outer_area" type="variable_definition">(zone.area_type_id&gt;3)*(zone.area_type_id&lt;7)</variable>
      <variable use="both" source="primary attribute" name="zone.zone_area_type" type="variable_definition">zone.faz_id</variable>
      <variable use="both" source="expression" name="household_x_submarket.college_grad_x_time_to_cbd" type="variable_definition">household.aggregate((person.relation==1)*(person.education&gt;12))*submarket.disaggregate(zone.travel_time_to_cbd)</variable>
      <variable use="model variable" source="expression" name="household_x_submarket.hours_head_works_ln_jobs_30_min" type="variable_definition">household.aggregate((person.relation==1)*(person.work_hours))*ln_bounded(submarket.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="household_x_submarket.hours_head_works_x_time_to_cbd" type="variable_definition">household.aggregate((person.relation==1)*(person.work_hours))*submarket.disaggregate(zone.travel_time_to_cbd)</variable>
      <variable use="both" source="expression" name="household_x_submarket.fulltime_x_distance_to_waikiki" type="variable_definition">household.aggregate((person.relation==1)*(person.work_hours&gt;39))*submarket.disaggregate(zone.travel_time_to_waikiki)</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_40plus_hrs_worked_if_hh_head_does" type="variable_definition">household.aggregate((person.relation==1)*(person.work_hours&gt;39))*(safe_array_divide(submarket.aggregate(household.aggregate((person.relation==1)*(person.work_hours&gt;39))),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_college_grad_if_hh_head_grad" type="variable_definition">household.aggregate((person.relation==1)*(person.education&gt;12))*(safe_array_divide(submarket.aggregate(household.aggregate((person.relation==1)*(person.education&gt;12))),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle" type="variable_definition">(household.vehicles==0)*(safe_array_divide(submarket.aggregate(household.vehicles==0),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle" type="variable_definition">(household.vehicles&gt;2)*(safe_array_divide(submarket.aggregate(household.vehicles&gt;2),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_more_than_1_vehicle_if_hh_more_than_1_vehicle" type="variable_definition">(household.vehicles&gt;1)*(safe_array_divide(submarket.aggregate(household.vehicles&gt;1),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="household_x_submarket.age_x_travel_time_to_waikiki" type="variable_definition">household.age_of_head*submarket.disaggregate(zone.travel_time_to_waikiki)</variable>
      <variable use="both" source="expression" name="household_x_submarket.workers_x_travel_time_to_waikiki_submarket" type="variable_definition">household.workers*submarket.disaggregate(zone.travel_time_to_waikiki)</variable>
      <variable use="both" source="expression" name="submarket.travel_time_to_waikiki_submarket" type="variable_definition">submarket.disaggregate(zone.travel_time_to_waikiki)</variable>
      <variable use="both" source="expression" name="employment_submarket.travel_time_to_waikiki_esubmarket" type="variable_definition">employment_submarket.disaggregate(zone.travel_time_to_waikiki)</variable>
      <variable use="both" source="expression" name="household_x_submarket.vehicles_x_average_stories" type="variable_definition">household.vehicles*(submarket.aggregate(building.stories)*1.0)/submarket.aggregate(building.stories&gt;0)</variable>
      <variable use="both" source="expression" name="household_x_submarket.hhsize_x_ln_job_density" type="variable_definition">household.persons*ln(submarket.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="both" source="expression" name="household_x_submarket.vehicles_x_ln_job_density" type="variable_definition">household.vehicles*ln(submarket.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="both" source="expression" name="household_x_submarket.age_x_ln_job_density" type="variable_definition">household.age_of_head*ln(submarket.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="both" source="expression" name="household_x_submarket.income_x_ln_job_density" type="variable_definition">household.income*ln(submarket.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="both" source="expression" name="household_x_submarket.workers_x_ln_job_density" type="variable_definition">household.workers*ln(submarket.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="model variable" source="expression" name="household_x_submarket.children_ln_jobs_30_min_submarket" type="variable_definition">household.children*ln_bounded(submarket.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="household_x_submarket.income_ln_jobs_30_min_submarket" type="variable_definition">household.income*ln_bounded(submarket.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="household_x_submarket.hh_income_within50percent_submarket_avginc" type="variable_definition">(safe_array_divide(household.income,(submarket.aggregate(household.income, function=mean)))&gt;.5)*(safe_array_divide(household.income,(submarket.aggregate(household.income, function=mean)))&lt;1.5)</variable>
      <variable use="both" source="expression" name="household_x_submarket.children_x_ln_job_density" type="variable_definition">household.children*ln(submarket.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_younghead_if_hh_younghead" type="variable_definition">household.aggregate((person.relation==1)*(person.age&lt;30))*(safe_array_divide(submarket.aggregate(household.aggregate((person.relation==1)*(person.age&lt;30))),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_white_if_hh_white" type="variable_definition">household.aggregate((person.relation==1)*(person.race==1))*(safe_array_divide(submarket.aggregate(household.aggregate((person.relation==1)*(person.race==1))),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="household_x_submarket.proportion_asian_if_hh_asian" type="variable_definition">household.aggregate((person.relation==1)*(person.race==4))*(safe_array_divide(submarket.aggregate(household.aggregate((person.relation==1)*(person.race==4))),submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="submarket.average_stories" type="variable_definition">(submarket.aggregate(building.stories)*1.0)/submarket.aggregate(building.stories&gt;0)</variable>
      <variable use="both" source="expression" name="submarket.average_year_built" type="variable_definition">(submarket.aggregate(building.year_built)*1.0)/submarket.aggregate(building.year_built&gt;0)</variable>
      <variable use="both" source="expression" name="submarket.ln_avg_unit_size" type="variable_definition">safe_array_divide(submarket.aggregate(building.total_building_sqft - building.non_residential_sqft),submarket.aggregate(building.residential_units))</variable>
      <variable use="both" source="expression" name="submarket.ln_job_density_zone_submarket" type="variable_definition">ln(submarket.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="both" source="expression" name="employment_submarket.ln_job_density_zone_esubmarket" type="variable_definition">ln(employment_submarket.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="both" source="expression" name="submarket.ln_avg_unit_price_submarket" type="variable_definition">ln(safe_array_divide(submarket.aggregate(building.improvement_value),submarket.aggregate(building.residential_units)))</variable>
      <variable use="both" source="expression" name="submarket.ln_residential_units_in_submarket" type="variable_definition">ln(submarket.aggregate(building.residential_units))</variable>
      <variable use="both" source="expression" name="employment_submarket.ln_residential_units_esubmarket" type="variable_definition">ln(employment_submarket.aggregate(building.residential_units))</variable>
      <variable use="both" source="expression" name="household_x_submarket.hh_income_close_to_submarket_avginc" type="variable_definition">(safe_array_divide(household.income,(submarket.aggregate(household.income, function=mean)))&gt;.8)*(safe_array_divide(household.income,(submarket.aggregate(household.income, function=mean)))&lt;1.2)</variable>
      <variable use="both" source="expression" name="submarket.proportion_renter_hh_in_submarket" type="variable_definition">safe_array_divide(submarket.aggregate(household.tenure==2),submarket.number_of_agents(household))</variable>
      <variable use="both" source="expression" name="building.jobs1_agriculture" type="variable_definition">building.aggregate(job.sector_id==1)</variable>
      <variable use="both" source="expression" name="building.jobs2_miningconstruct" type="variable_definition">building.aggregate(job.sector_id==2)</variable>
      <variable use="both" source="expression" name="building.jobs3_foodprocess" type="variable_definition">building.aggregate(job.sector_id==3)</variable>
      <variable use="both" source="expression" name="building.jobs4_manufacture" type="variable_definition">building.aggregate(job.sector_id==4)</variable>
      <variable use="both" source="expression" name="building.jobs5_transport" type="variable_definition">building.aggregate(job.sector_id==5)</variable>
      <variable use="both" source="expression" name="building.jobs6_information" type="variable_definition">building.aggregate(job.sector_id==6)</variable>
      <variable use="both" source="expression" name="building.jobs7_utilities" type="variable_definition">building.aggregate(job.sector_id==7)</variable>
      <variable use="both" source="expression" name="building.jobs8_wholesale" type="variable_definition">building.aggregate(job.sector_id==8)</variable>
      <variable use="both" source="expression" name="building.jobs9_retail" type="variable_definition">building.aggregate(job.sector_id==9)</variable>
      <variable use="both" source="expression" name="building.jobs10_finance" type="variable_definition">building.aggregate(job.sector_id==10)</variable>
      <variable use="both" source="expression" name="building.jobs11_realestate" type="variable_definition">building.aggregate(job.sector_id==11)</variable>
      <variable use="both" source="expression" name="building.jobs12_professional" type="variable_definition">building.aggregate(job.sector_id==12)</variable>
      <variable use="both" source="expression" name="building.jobs13_business" type="variable_definition">building.aggregate(job.sector_id==13)</variable>
      <variable use="both" source="expression" name="building.jobs14_education" type="variable_definition">building.aggregate(job.sector_id==14)</variable>
      <variable use="both" source="expression" name="building.jobs15_health" type="variable_definition">building.aggregate(job.sector_id==15)</variable>
      <variable use="both" source="expression" name="building.jobs16_entertain" type="variable_definition">building.aggregate(job.sector_id==16)</variable>
      <variable use="both" source="expression" name="building.jobs17_hotel" type="variable_definition">building.aggregate(job.sector_id==17)</variable>
      <variable use="both" source="expression" name="building.jobs18_eatdrink" type="variable_definition">building.aggregate(job.sector_id==18)</variable>
      <variable use="both" source="expression" name="building.jobs19_otherservices" type="variable_definition">building.aggregate(job.sector_id==19)</variable>
      <variable use="both" source="expression" name="building.jobs20_gov" type="variable_definition">building.aggregate(job.sector_id==20)</variable>
      <variable use="both" source="expression" name="employment_submarket.jobs20_gov_esubmarket" type="variable_definition">employment_submarket.aggregate(job.sector_id==20,intermediates=[building])</variable>
      <variable use="both" source="expression" name="employment_submarket.jobs_esubmarket" type="variable_definition">employment_submarket.aggregate(building.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.industrial_repair_sqft" type="variable_definition">(building.building_type_id==8)*(building.non_residential_sqft)</variable>
      <variable use="both" source="expression" name="building.gov_jobs" type="variable_definition">building.aggregate(job.sector_id==20)</variable>
      <variable use="both" source="expression" name="household.head_is_asian" type="variable_definition">household.aggregate((person.relation==1)*(person.race==4))</variable>
      <variable use="both" source="expression" name="household.head_is_white" type="variable_definition">household.aggregate((person.relation==1)*(person.race==1))</variable>
      <variable use="both" source="expression" name="household.wealthy_hh" type="variable_definition">household.income_group&gt;6</variable>
      <variable use="both" source="expression" name="household.workers_per_person" type="variable_definition">safe_array_divide(household.workers * 1.0,household.persons)</variable>
      <variable use="both" source="expression" name="household.avg_edu_hh" type="variable_definition">household.aggregate(person.education, function=mean)</variable>
      <variable use="both" source="expression" name="building.is_central" type="variable_definition">(building.disaggregate((zone.area_type_id&gt;3)*(zone.area_type_id&lt;7)))</variable>
      <variable use="both" source="expression" name="building.area_type1" type="variable_definition">(building.disaggregate(zone.area_type_id==1))</variable>
      <variable use="both" source="expression" name="building.area_type2" type="variable_definition">(building.disaggregate(zone.area_type_id==2))</variable>
      <variable use="both" source="expression" name="building.area_type3" type="variable_definition">(building.disaggregate(zone.area_type_id==3))</variable>
      <variable use="both" source="expression" name="building.area_type4" type="variable_definition">(building.disaggregate(zone.area_type_id==4))</variable>
      <variable use="both" source="expression" name="building.area_type5" type="variable_definition">(building.disaggregate(zone.area_type_id==5))</variable>
      <variable use="both" source="expression" name="building.area_type6" type="variable_definition">(building.disaggregate(zone.area_type_id==6))</variable>
      <variable use="both" source="expression" name="building.area_type7" type="variable_definition">(building.disaggregate(zone.area_type_id==7))</variable>
      <variable use="both" source="expression" name="building.area_type8" type="variable_definition">(building.disaggregate(zone.area_type_id==8))</variable>
      <variable use="both" source="expression" name="building.area_type9" type="variable_definition">(building.disaggregate(zone.area_type_id==9))</variable>
      <variable use="both" source="expression" name="household.area_type_id" type="variable_definition"> household.area_type + 1</variable>
      <variable use="both" source="expression" name="household.typetenurearea_id" type="variable_definition">1*((household.building_type_id==1)*(household.tenure==1)*(household.area_type==1))+2*((household.building_type_id==1)*(household.tenure==2)*(household.area_type==1))+ 3*((household.building_type_id==2)*(household.tenure==1)*(household.area_type==1))+4*((household.building_type_id==2)*(household.tenure==2)*(household.area_type==1))+ 5*((household.building_type_id==3)*(household.tenure==1)*(household.area_type==1))+6*((household.building_type_id==3)*(household.tenure==2)*(household.area_type==1))+ 7*((household.building_type_id==4)*(household.tenure==1)*(household.area_type==1))+8*((household.building_type_id==4)*(household.tenure==2)*(household.area_type==1))+ 9*((household.building_type_id==1)*(household.tenure==1)*(household.area_type==0))+10*((household.building_type_id==1)*(household.tenure==2)*(household.area_type==0))+ 11*((household.building_type_id==2)*(household.tenure==1)*(household.area_type==0))+12*((household.building_type_id==2)*(household.tenure==2)*(household.area_type==0))+ 13*((household.building_type_id==3)*(household.tenure==1)*(household.area_type==0))+14*((household.building_type_id==3)*(household.tenure==2)*(household.area_type==0))+ 15*((household.building_type_id==4)*(household.tenure==1)*(household.area_type==0))+16*((household.building_type_id==4)*(household.tenure==2)*(household.area_type==0))</variable>
      <variable use="both" source="expression" name="zone.zone_proportion_hh_in_apartment" type="variable_definition">safe_array_divide(zone.aggregate(building.aggregate(household.building_type_id==3) + building.aggregate(household.building_type_id==37)),zone.aggregate(building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="zone.zone_proportion_largehh" type="variable_definition">safe_array_divide(zone.aggregate(building.aggregate(household.persons&gt;3)),zone.aggregate(building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="zone.zone_proportion_oldhead" type="variable_definition">safe_array_divide(zone.aggregate(building.aggregate(household.age_of_head&gt;64)),zone.aggregate(building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="zone.zone_proportion_wealthy" type="variable_definition">safe_array_divide(zone.aggregate(building.aggregate(household.income_group&gt;6)),zone.aggregate(building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="building.ln_households_within_30_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.households_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="building.ln_households_within_10_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.households_within_10_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="building.ln_pop_10_min" type="variable_definition">ln_bounded(building.disaggregate(urbansim_zone.zone.population_within_10_am_single_vehicle_to_work_travel_time_threshold))</variable>
      <variable use="model variable" source="expression" name="employment_submarket.ln_pop_10_min_esubmarket" type="variable_definition">ln_bounded(employment_submarket.disaggregate(urbansim_zone.zone.population_within_10_am_single_vehicle_to_work_travel_time_threshold))</variable>
      <variable use="both" source="expression" name="zone.zonal_households" type="variable_definition">zone.aggregate(building.number_of_agents(household))</variable>
      <variable use="both" source="expression" name="zone.zone_ln_pop_1" type="variable_definition">ln(zone.aggregate(household.persons))</variable>
      <variable use="both" source="expression" name="building.hotel_sqft" type="variable_definition">(building.building_type_id==7)*(building.non_residential_sqft)</variable>
      <variable use="both" source="expression" name="employment_submarket.hotel_sqft_esubmarket" type="variable_definition">(employment_submarket.building_type_id==7)*(employment_submarket.aggregate(building.non_residential_sqft))</variable>
      <variable use="both" source="expression" name="building.land_per_nonres_sqft" type="variable_definition">(building.land_area*1.0)/building.non_residential_sqft</variable>
      <variable use="both" source="expression" name="employment_submarket.land_per_nonres_sqft_esubmarket" type="variable_definition">safe_array_divide(employment_submarket.aggregate(building.land_area),employment_submarket.aggregate(building.non_residential_sqft))</variable>
      <variable use="both" source="expression" name="building.average_value_per_sqft" type="variable_definition">building.average_value_per_unit * building.disaggregate(building_type.is_residential==0)</variable>
      <variable use="both" source="expression" name="employment_submarket.average_value_per_sqft_esubmarket" type="variable_definition">safe_array_divide(employment_submarket.aggregate(building.improvement_value),employment_submarket.aggregate(building.non_residential_sqft))</variable>
      <variable use="both" source="expression" name="employment_submarket.ln_average_value_per_sqft_esubmarket" type="variable_definition">ln(safe_array_divide(employment_submarket.aggregate(building.improvement_value),employment_submarket.aggregate(building.non_residential_sqft)))</variable>
      <variable use="both" source="primary attribute" name="household.year_moved" type="variable_definition">household.year_moved</variable>
      <variable use="both" source="expression" name="building.emp_retail_200" type="variable_definition">where(building.disaggregate(zone.aggregate(job.sector_id==9))&lt;200,building.disaggregate(zone.aggregate(job.sector_id==9)),200)/200</variable>
      <variable use="both" source="expression" name="building.land_per_unit_1k" type="variable_definition">(building.land_area/building.residential_units)/1000</variable>
      <variable use="both" source="expression" name="household_x_building.children_and_lot_size" type="variable_definition">ln_bounded(household.children*((building.land_area/building.residential_units)/1000))</variable>
      <variable use="both" source="expression" name="building.ln_bldg_landarea" type="variable_definition">ln_bounded(building.land_area)</variable>
      <variable use="both" source="expression" name="building.res_sqft_per_unit_1k" type="variable_definition">building.sqft_per_unit*(building.building_type_id&lt;3)/1000</variable>
      <variable use="both" source="expression" name="building.ln_price" type="variable_definition">ln_bounded(building.average_value_per_unit)</variable>
      <variable use="both" source="expression" name="household.young_adults" type="variable_definition">(household.children==0)*(household.age_of_head&lt;35)*(household.aggregate(person.age&gt;34) ==0)*(household.aggregate(person.age&lt;25) ==0)</variable>
      <variable use="both" source="expression" name="household.renter_hh" type="variable_definition">household.tenure==2</variable>
      <variable use="both" source="expression" name="building.year_built_building" type="variable_definition">(building.year_built) * (building.year_built &gt; 0)</variable>
      <variable use="both" source="expression" name="building.apartment_unit_price" type="variable_definition">(building.building_type_id==3) * (building.average_value_per_unit)</variable>
      <variable use="both" source="expression" name="building.apartment_units" type="variable_definition">(building.building_type_id==3) * (building.residential_units)</variable>
      <variable use="model variable" source="expression" name="building.ln_avg_val_res_sqft" type="variable_definition">safe_array_divide(building.improvement_value,building.residential_sqft)</variable>
      <variable use="both" source="expression" name="building.ln_sqft_per_unit" type="variable_definition">ln(building.sqft_per_unit)</variable>
      <variable use="both" source="primary attribute" name="building.sqft_per_unit" type="variable_definition">building.sqft_per_unit</variable>
      <variable use="both" source="expression" name="building.proportion_apartment_zone" type="variable_definition">building.disaggregate(safe_array_divide(zone.aggregate((building.residential_units)*(building.building_type_id==3)), zone.aggregate(building.residential_units)))</variable>
      <variable use="both" source="expression" name="building.ln_apartment_unit_price" type="variable_definition">ln((building.building_type_id==3) * (building.average_value_per_unit))</variable>
      <variable use="both" source="expression" name="building.ln_apartment_units" type="variable_definition">ln((building.building_type_id==3) * (building.residential_units))</variable>
      <variable use="model variable" source="expression" name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket" type="variable_definition">safe_array_divide(household.workers,household.persons)*ln_bounded(submarket.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="building.proportion_sf_zone" type="variable_definition">building.disaggregate(safe_array_divide(zone.aggregate((building.residential_units)*(building.building_type_id==1)), zone.aggregate(building.residential_units)))</variable>
      <variable use="both" source="expression" name="household_x_building.inc_avginc_ratio_close" type="variable_definition">(safe_array_divide(household.income,(building.aggregate(household.income, function=mean)))&gt;.8)*(safe_array_divide(household.income,(building.aggregate(household.income, function=mean)))&lt;1.2)</variable>
      <variable use="both" source="expression" name="household_x_building.children_x_apartment" type="variable_definition">(household.children&gt;1) * (building.building_type_id==3)</variable>
      <variable use="both" source="expression" name="household_x_building.highinc_yearbuilt" type="variable_definition">(household.income_group&gt;6) * (building.year_built &gt; 1990)</variable>
      <variable use="both" source="expression" name="household_x_building.younghh_apartment" type="variable_definition">(household.age_of_head &lt; 35)*(building.building_type_id == 3)</variable>
      <variable use="both" source="expression" name="building.travel_time_to_waikiki" type="variable_definition">building.disaggregate(zone.travel_time_to_waikiki)</variable>
      <variable use="both" source="expression" name="development_project_x_zone.ln_res_units_x_emp_30_min" type="variable_definition">development_project.residential_units*ln(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone)</variable>
      <variable use="both" source="expression" name="zone.zone_ln_sf_unit_price" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==9,building.average_value_per_unit,0), function=mean))</variable>
      <variable use="both" source="expression" name="zone.zone_ln_mf_unit_price" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==3,building.average_value_per_unit,0), function=mean))</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_avg_value_per_sqft_whse" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==10,building.average_value_per_unit,0), function=mean))</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_avg_value_per_sqft_retail" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==7,building.average_value_per_unit,0), function=mean))</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_avg_value_per_sqft_office" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==5,building.average_value_per_unit,0), function=mean))</variable>
      <variable use="both" source="expression" name="zone.zone_ln_emp_10_min" type="variable_definition">ln(urbansim_parcel.zone.employment_within_10_minutes_travel_time_hbw_am_drive_alone)</variable>
      <variable use="model variable" source="expression" name="zone.zone_pop_density" type="variable_definition">zone.aggregate(household.persons)/zone.totacres</variable>
      <variable use="model variable" source="expression" name="zone.zone_job_density" type="variable_definition">zone.number_of_agents(job)/zone.totacres</variable>
      <variable use="both" source="expression" name="zone.zone_ln_time_cbd" type="variable_definition">ln(zone.travel_time_to_cbd)</variable>
      <variable use="both" source="expression" name="zone.zone_ln_res_units" type="variable_definition">ln(zone.aggregate(building.residential_units))</variable>
      <variable use="both" source="expression" name="zone.zone_ln_emp_15_min" type="variable_definition">ln(urbansim_parcel.zone.employment_within_15_minutes_travel_time_hbw_am_drive_alone)</variable>
      <variable use="both" source="expression" name="development_project_x_building.ln_res_units_x_zone_dev_acre" type="variable_definition">development_project.residential_units*ln(building.disaggregate(zone.dev_acre))</variable>
      <variable use="both" source="primary attribute" name="zone.zone_time_cbd" type="variable_definition">zone.travel_time_to_cbd</variable>
      <variable use="both" source="expression" name="zone.zone_mf_unit_price" type="variable_definition">zone.aggregate(where(building.building_type_id==3,building.average_value_per_unit,0), function=mean)</variable>
      <variable use="both" source="expression" name="zone.zone_sf_unit_price" type="variable_definition">zone.aggregate(where(building.building_type_id==9,building.average_value_per_unit,0), function=mean)</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_mf_units" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==3,building.residential_units,0)))</variable>
      <variable use="both" source="expression" name="zone.zone_ln_avg_income" type="variable_definition">ln(zone.aggregate(household.income, function=mean))</variable>
      <variable use="both" source="expression" name="zone.zone_ln_emp_30_min" type="variable_definition">ln(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone)</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_pop" type="variable_definition">ln(zone.aggregate(household.persons))</variable>
      <variable use="both" source="expression" name="zone.zone_tot_income" type="variable_definition">zone.aggregate(household.income)</variable>
      <variable use="both" source="expression" name="zone.zone_tot_pop" type="variable_definition">zone.aggregate(household.persons)</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_retail_emp_30_min" type="variable_definition">ln(urbansim_parcel.zone.sector_5_employment_within_30_minutes_travel_time_hbw_am_drive_alone)</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_sf_units" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==9,building.residential_units,0)))</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_average_value_per_res_unit" type="variable_definition">ln(zone.aggregate(building.average_value_per_unit*building.disaggregate(building_type.is_residential==1), function=mean))</variable>
      <variable use="indicator" source="primary attribute" name="zone.zone_schl_district" type="variable_definition">zone.schl_district</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_average_value_per_sqft" type="variable_definition">ln(zone.aggregate(building.average_value_per_unit*building.disaggregate(building_type.is_residential==0), function=mean))</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_jobs" type="variable_definition">ln(zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.ln_inv_far" type="variable_definition">ln(safe_array_divide(building.land_area, building.non_residential_sqft))</variable>
      <variable use="both" source="expression" name="building.ln_pop_zone" type="variable_definition">ln(building.disaggregate(zone.aggregate(household.persons)))</variable>
      <variable use="both" source="expression" name="building.ln_non_residential_sqft" type="variable_definition">ln(building.non_residential_sqft)</variable>
      <variable use="both" source="expression" name="employment_submarket.ln_non_residential_sqft_esubmarket" type="variable_definition">ln(employment_submarket.aggregate(building.non_residential_sqft))</variable>
      <variable use="model variable" source="primary attribute" name="building.unit_price" type="variable_definition">building.average_value_per_unit</variable>
      <variable use="both" source="expression" name="building.is_transport" type="variable_definition">building.building_type_id==18</variable>
      <variable use="both" source="expression" name="building.is_manufacturing" type="variable_definition">building.building_type_id==9</variable>
      <variable use="both" source="expression" name="building.is_office" type="variable_definition">building.building_type_id==22</variable>
      <variable use="both" source="expression" name="building.is_parking" type="variable_definition">building.building_type_id==33</variable>
      <variable use="both" source="expression" name="building.is_warehouse" type="variable_definition">building.building_type_id==15</variable>
      <variable use="both" source="expression" name="building.is_service_shops_supplies" type="variable_definition">building.building_type_id==24</variable>
      <variable use="both" source="expression" name="building.is_neighborhood_retail" type="variable_definition">building.building_type_id==19</variable>
      <variable use="both" source="expression" name="building.is_utility" type="variable_definition">building.building_type_id==13</variable>
      <variable use="both" source="expression" name="building.is_regional_retail" type="variable_definition">building.building_type_id==20</variable>
      <variable use="both" source="expression" name="building.is_classroom" type="variable_definition">building.building_type_id==29</variable>
      <variable use="both" source="expression" name="building.is_hospital" type="variable_definition">building.building_type_id==30</variable>
      <variable use="both" source="expression" name="building.is_community" type="variable_definition">building.building_type_id==28</variable>
      <variable use="both" source="expression" name="building.is_hotel" type="variable_definition">building.building_type_id==7</variable>
      <variable use="both" source="expression" name="building.is_singlefam" type="variable_definition">building.building_type_id==1</variable>
      <variable use="both" source="expression" name="building.is_duplex" type="variable_definition">building.building_type_id==2</variable>
      <variable use="both" source="expression" name="building.is_apartment" type="variable_definition">building.building_type_id==3</variable>
      <variable use="both" source="expression" name="building.is_townhome" type="variable_definition">building.building_type_id==4</variable>
      <variable use="both" source="expression" name="employment_submarket.is_transport_esubmarket" type="variable_definition">employment_submarket.building_type_id==18</variable>
      <variable use="both" source="expression" name="employment_submarket.is_manufacturing_esubmarket" type="variable_definition">employment_submarket.building_type_id==9</variable>
      <variable use="both" source="expression" name="employment_submarket.is_office_esubmarket" type="variable_definition">employment_submarket.building_type_id==22</variable>
      <variable use="both" source="expression" name="employment_submarket.is_parking_esubmarket" type="variable_definition">employment_submarket.building_type_id==33</variable>
      <variable use="both" source="expression" name="employment_submarket.is_warehouse_esubmarket" type="variable_definition">employment_submarket.building_type_id==15</variable>
      <variable use="both" source="expression" name="employment_submarket.is_service_shops_supplies_esubmarket" type="variable_definition">employment_submarket.building_type_id==24</variable>
      <variable use="both" source="expression" name="employment_submarket.is_neighborhood_retail_esubmarket" type="variable_definition">employment_submarket.building_type_id==19</variable>
      <variable use="both" source="expression" name="employment_submarket.is_utility_esubmarket" type="variable_definition">employment_submarket.building_type_id==13</variable>
      <variable use="both" source="expression" name="employment_submarket.is_regional_retail_esubmarket" type="variable_definition">employment_submarket.building_type_id==20</variable>
      <variable use="both" source="expression" name="employment_submarket.is_classroom_esubmarket" type="variable_definition">employment_submarket.building_type_id==29</variable>
      <variable use="both" source="expression" name="employment_submarket.is_hospital_esubmarket" type="variable_definition">employment_submarket.building_type_id==30</variable>
      <variable use="both" source="expression" name="employment_submarket.is_community_esubmarket" type="variable_definition">employment_submarket.building_type_id==28</variable>
      <variable use="both" source="expression" name="employment_submarket.is_hotel_esubmarket" type="variable_definition">employment_submarket.building_type_id==7</variable>
      <variable use="both" source="expression" name="employment_submarket.is_singlefam_esubmarket" type="variable_definition">employment_submarket.building_type_id==1</variable>
      <variable use="both" source="expression" name="employment_submarket.is_duplex_esubmarket" type="variable_definition">employment_submarket.building_type_id==2</variable>
      <variable use="both" source="expression" name="employment_submarket.is_apartment_esubmarket" type="variable_definition">employment_submarket.building_type_id==3</variable>
      <variable use="both" source="expression" name="employment_submarket.is_townhome_esubmarket" type="variable_definition">employment_submarket.building_type_id==4</variable>
      <variable use="both" source="expression" name="building.ln_land_per_unit" type="variable_definition">ln_bounded(safe_array_divide(building.land_area, building.residential_units))</variable>
      <variable use="both" source="expression" name="household_x_building.price_income_ratio_l1" type="variable_definition">safe_array_divide(building.average_value_per_unit,household.income)&lt;1</variable>
      <variable use="both" source="expression" name="household_x_building.price_income_ratio_g5" type="variable_definition">safe_array_divide(building.average_value_per_unit,household.income)&gt;5</variable>
      <variable use="both" source="expression" name="household_x_building.ln_persons_land_per_unit" type="variable_definition">ln(household.persons*building.land_area/building.residential_units)</variable>
      <variable use="both" source="expression" name="household_x_building.ln_persons_sqft_per_unit" type="variable_definition">ln(household.persons*building.sqft_per_unit)</variable>
      <variable use="model variable" source="expression" name="building.ln_avg_hh_income" type="variable_definition">building.disaggregate(ln(zone.aggregate(household.income, function=mean,intermediates=[building,parcel])))</variable>
      <variable use="both" source="expression" name="household_x_building.ln_inc_avg_inc" type="variable_definition">ln(household.income*building.aggregate(household.income, function=mean))</variable>
      <variable use="both" source="expression" name="building.land_per_unit" type="variable_definition">building.land_area/building.residential_units</variable>
      <variable use="both" source="expression" name="household_x_building.persons_land_per_unit" type="variable_definition">household.persons*building.land_area/building.residential_units</variable>
      <variable use="both" source="expression" name="household_x_building.ln_income_sqft_per_unit" type="variable_definition">ln(household.income*building.sqft_per_unit)</variable>
      <variable use="model variable" source="expression" name="household_x_building.wkrs_ln_jobs_30_min" type="variable_definition">(household.workers)*ln_bounded(building.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs_within_30_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="employment_submarket.ln_jobs_within_30_min_esubmarket" type="variable_definition">ln(employment_submarket.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="employment_submarket.ln_jobs_within_15_min_esubmarket" type="variable_definition">ln(employment_submarket.disaggregate(urbansim_parcel.zone.employment_within_15_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="household_x_building.income_schl_dist1" type="variable_definition">household.income/10000*building.disaggregate(zone.schl_district==1)</variable>
      <variable use="both" source="expression" name="household_x_building.persons_sqft_per_unit" type="variable_definition">household.persons*building.sqft_per_unit</variable>
      <variable use="both" source="expression" name="household_x_building.income_sqft_per_unit" type="variable_definition">household.income/10000*building.sqft_per_unit</variable>
      <variable use="both" source="expression" name="household_x_building.price_income_ratio" type="variable_definition">safe_array_divide(building.average_value_per_unit,household.income)</variable>
      <variable use="both" source="expression" name="household_x_building.income_single_family" type="variable_definition">household.income/10000*building.building_type_id==1</variable>
      <variable use="both" source="expression" name="household_x_building.persons_x_single_family" type="variable_definition">household.persons*building.building_type_id==1</variable>
      <variable use="both" source="expression" name="building.ln_number_jobs_retail" type="variable_definition">ln(building.disaggregate(urbansim.zone.number_of_jobs_of_sector_5))</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs_within_15_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.employment_within_15_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="building.ln_pop_density_zone" type="variable_definition">ln(43560*safe_array_divide(building.aggregate(household.persons), building.disaggregate(zone.aggregate(building.land_area))))</variable>
      <variable use="model variable" source="expression" name="building.cbd_time_sq" type="variable_definition">building.disaggregate(zone.travel_time_to_cbd)**2</variable>
      <variable use="model variable" source="expression" name="building.ln_cbd_time" type="variable_definition">ln(building.disaggregate(zone.travel_time_to_cbd))</variable>
      <variable use="model variable" source="expression" name="building.ln_avg_hh_income_zonal" type="variable_definition">building.disaggregate(ln(zone.aggregate(household.income, function=mean,intermediates=[building,parcel])))</variable>
      <variable use="model variable" source="primary attribute" name="building.ln_avg_val_per_unit" type="variable_definition">ln(building.average_value_per_unit)</variable>
      <variable use="both" source="expression" name="building.ln_residential_units" type="variable_definition">ln(building.residential_units)</variable>
      <variable use="both" source="expression" name="building.is_single_family" type="variable_definition">building.building_type_id == 1</variable>
      <variable use="both" source="expression" name="building.ln_job_density_zone" type="variable_definition">ln(building.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="model variable" source="primary attribute" name="building.avg_value_per_unit" type="variable_definition">building.average_value_per_unit</variable>
      <variable use="model variable" source="expression" name="building.avg_hh_income" type="variable_definition">building.aggregate(household.income, function=mean)</variable>
      <variable use="model variable" source="expression" name="building.avg_hh_income_zonal" type="variable_definition">building.disaggregate(zone.aggregate(household.income, function=mean, intermediates=[parcel]))</variable>
      <variable use="model variable" source="expression" name="employment_submarket.avg_hh_income_zonal_esubmarket" type="variable_definition">employment_submarket.disaggregate(zone.aggregate(household.income, function=mean))</variable>
      <variable use="model variable" source="expression" name="building.inv_jobs" type="variable_definition">safe_array_divide(1,(building.number_of_agents(job)),0)</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs" type="variable_definition">ln(building.number_of_agents(job))</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs_in_zone" type="variable_definition">ln(building.disaggregate(zone.number_of_agents(job)))</variable>
      <variable use="model variable" source="expression" name="building.ln_dev_acre_in_zone" type="variable_definition">ln(building.disaggregate(zone.dev_acre))</variable>
      <variable use="both" source="expression" name="building.zone_ln_emp_30_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="building.cbd_time" type="variable_definition">building.disaggregate(zone.travel_time_to_cbd, intermediates=[parcel])</variable>
      <variable use="model variable" source="expression" name="employment_submarket.cbd_time_esubmarket" type="variable_definition">employment_submarket.disaggregate(zone.travel_time_to_cbd)</variable>
      <variable use="model variable" source="expression" name="building.schl_dist1" type="variable_definition">building.disaggregate(zone.schl_district==1)</variable>
      <variable use="both" source="expression" name="building.ln_sf_unit_price" type="variable_definition">ln((building.building_type_id==1) * (building.average_value_per_unit))</variable>
      <variable use="both" source="expression" name="building.ln_sf_units" type="variable_definition">ln((building.building_type_id==1) * (building.residential_units))</variable>
      <variable use="both" source="expression" name="building.ln_mf_unit_price" type="variable_definition">ln((building.building_type_id==3) * (building.average_value_per_unit))</variable>
      <variable use="both" source="expression" name="building.ln_mf_units" type="variable_definition">ln((building.building_type_id==3) * (building.residential_units))</variable>
      <variable use="both" source="expression" name="building.ln_average_value_per_sqft" type="variable_definition">ln(building.average_value_per_unit * building.disaggregate(building_type.is_residential==0))</variable>
      <variable use="both" source="expression" name="household.workers_id" type="variable_definition"> 1*(household.workers==0) +2*(household.workers==1) +3*(household.workers&gt;=2)</variable>
      <variable use="both" source="expression" name="household.typetenure_id" type="variable_definition"> 1*((household.building_type_id==1)*(household.tenure==1))+2*((household.building_type_id==35)*(household.tenure==2))+ 3*((household.building_type_id==2)*(household.tenure==1))+4*((household.building_type_id==36)*(household.tenure==2))+ 5*((household.building_type_id==3)*(household.tenure==1))+6*((household.building_type_id==37)*(household.tenure==2))+ 7*((household.building_type_id==4)*(household.tenure==1))+8*((household.building_type_id==38)*(household.tenure==2))</variable>
      <variable use="both" source="primary attribute" name="household.age_of_head" type="variable_definition">household.age_of_head</variable>
      <variable use="both" source="expression" name="household.oldhead" type="variable_definition">household.age_of_head &gt; 64</variable>
      <variable use="both" source="primary attribute" name="household.persons" type="variable_definition">household.persons</variable>
      <variable use="both" source="primary attribute" name="household.children" type="variable_definition">household.children</variable>
      <variable use="both" source="primary attribute" name="household.workers" type="variable_definition">household.workers</variable>
      <variable use="both" source="primary attribute" name="household.income" type="variable_definition">household.income</variable>
      <variable use="both" source="expression" name="household.ln_income" type="variable_definition">ln(household.income)</variable>
      <variable use="both" source="expression" name="household.nonfamily" type="variable_definition">household.family_type==2</variable>
      <variable use="both" source="primary attribute" name="household.vehicles" type="variable_definition">household.vehicles</variable>
      <variable use="both" source="expression" name="household.veh_per_person" type="variable_definition">safe_array_divide(household.vehicles * 1.0,household.persons)</variable>
      <variable use="both" source="expression" name="household.enrollment_of_head" type="variable_definition">household.aggregate((person.school_enrollment&gt;1)*(person.relation ==1)) </variable>
      <variable use="both" source="primary attribute" name="household.building_type_id" type="variable_definition">household.building_type_id</variable>
      <variable use="both" source="expression" name="household.buildingtype_id" type="variable_definition"> 1*(household.building_type_id==1) +2*(household.building_type_id==2) +3*(household.building_type_id==3) + 4*(household.building_type_id==4)</variable>
      <variable use="both" source="expression" name="building.proportion_renter_hh" type="variable_definition">(safe_array_divide(building.aggregate(household.tenure==2), building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="building.households_in_zone" type="variable_definition">building.disaggregate(zone.aggregate(building.number_of_agents(household)), intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="employment_submarket.households_in_zone_esubmarket" type="variable_definition">employment_submarket.disaggregate(zone.aggregate(building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="household_x_submarket.hh_income_x_average_unit_size" type="variable_definition">household.income*(submarket.aggregate(building.building_sqft - building.non_residential_sqft)*1.0)/submarket.aggregate(building.residential_units)</variable>
      <variable use="both" source="expression" name="submarket.ln_avg_rent" type="variable_definition">ln(safe_array_divide(submarket.aggregate(residential_unit.rent,intermediates=[building]),submarket.aggregate(residential_unit.rent&gt;0,intermediates=[building])))</variable>
      <variable use="both" source="expression" name="submarket.ln_avg_sale_price" type="variable_definition">ln(safe_array_divide(submarket.aggregate(residential_unit.sale_price,intermediates=[building]),submarket.aggregate(residential_unit.sale_price&gt;0,intermediates=[building])))</variable>
      <variable use="both" source="expression" name="household_x_submarket.hh_cars_x_single_family_detached" type="variable_definition">(household.cars)*(submarket.building_type==1)</variable>
      <variable use="both" source="expression" name="household_x_submarket.young_head_of_hh_x_multifamily" type="variable_definition">(household.age_of_head&lt;35)*(submarket.building_type==3)</variable>
      <variable use="both" source="expression" name="submarket.san_francisco_submarket" type="variable_definition">submarket.county_id==38</variable>
      <variable use="both" source="expression" name="submarket.avg_sale_price" type="variable_definition">safe_array_divide(submarket.aggregate(residential_unit.sale_price,intermediates=[building]),submarket.aggregate(residential_unit.sale_price&gt;0,intermediates=[building]))</variable>
      <variable use="both" source="expression" name="submarket.avg_rent" type="variable_definition">safe_array_divide(submarket.aggregate(residential_unit.rent,intermediates=[building]),submarket.aggregate(residential_unit.rent&gt;0,intermediates=[building]))</variable>
      <variable use="both" source="expression" name="submarket.avg_zonal_sale_price" type="variable_definition">submarket.aggregate(building.disaggregate(zone.aggregate(residential_unit.sale_price,intermediates=[building,parcel],function=median),intermediates=[parcel]),function=mean)</variable>
      <variable use="both" source="expression" name="submarket.ln_nonresidential_sqft_within_6miles" type="variable_definition">ln(submarket.aggregate(building.disaggregate(bayarea.node.sum_non_residential_sqft_within_10000_meters,intermediates=[parcel]),function=mean))</variable>
      <variable use="both" source="expression" name="submarket.average_unit_size" type="variable_definition">(submarket.aggregate(building.total_building_sqft - building.non_residential_sqft)*1.0)/submarket.aggregate(building.residential_units)</variable>
      <variable use="both" source="expression" name="submarket.median_age_of_head" type="variable_definition">submarket.aggregate(household.age_of_head, function=median)</variable>
      <variable use="both" source="expression" name="submarket.median_stories" type="variable_definition">submarket.aggregate(building.stories, function=median)</variable>
      <variable use="both" source="expression" name="submarket.median_year_built" type="variable_definition">submarket.aggregate(building.year_built, function=median)</variable>
      <variable use="both" source="expression" name="submarket.proportion_hh_where_cars_exceed_persons" type="variable_definition">(safe_array_divide(submarket.aggregate(household.cars&gt;household.persons), submarket.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="submarket.non_residential_sqft_within_6_miles" type="variable_definition">(submarket.aggregate(building.disaggregate(bayarea.node.sum_non_residential_sqft_divide_by_1000_within_10000_meters,intermediates=[parcel]),function=mean))</variable>
      <variable use="both" source="expression" name="household_x_submarket.age_of_head_x_nonresidential_sqft_within_500m" type="variable_definition">household.age_of_head*submarket.aggregate(building.disaggregate(bayarea.node.sum_non_residential_sqft_within_500_meters,intermediates=[parcel,building]),function=mean)</variable>
      <variable use="both" source="expression" name="submarket.ln_residential_units_within_walking_distance" type="variable_definition">ln(submarket.aggregate(building.disaggregate(bayarea.node.sum_residential_units_within_800_meters,intermediates=[parcel]),function=mean))</variable>
      <variable use="both" source="expression" name="submarket.number_of_households" type="variable_definition">submarket.number_of_agents(household)</variable>
      <variable use="both" source="expression" name="submarket.residential_units" type="variable_definition">submarket.aggregate(building.residential_units)</variable>
      <variable use="both" source="expression" name="residential_building_type.number_of_households" type="variable_definition">residential_building_type.number_of_agents(household)</variable>
      <variable use="both" source="expression" name="residential_building_type.residential_units" type="variable_definition">residential_building_type.aggregate(building.residential_units)</variable>
      <variable use="both" source="expression" name="residential_unit.sum_non_residential_sqft_within_500_meters" type="variable_definition">residential_unit.disaggregate(bayarea.node.sum_non_residential_sqft_within_500_meters,intermediates=[parcel,building])</variable>
      <variable use="both" source="expression" name="residential_unit.sum_residential_units_within_250_meters" type="variable_definition">residential_unit.disaggregate(bayarea.node.sum_residential_units_within_250_meters,intermediates=[parcel,building])</variable>
      <variable use="both" source="expression" name="residential_unit.sum_income_within_100_meters" type="variable_definition">residential_unit.disaggregate(bayarea.node.sum_income_within_100_meters_from_household_dataset,intermediates=[parcel,building])</variable>
      <variable use="both" source="expression" name="residential_unit.sum_workers_within_500_meters" type="variable_definition">residential_unit.disaggregate(bayarea.node.sum_workers_within_500_meters_from_household_dataset,intermediates=[parcel,building])</variable>
      <variable use="both" source="expression" name="residential_unit.average_income_within_500_meters" type="variable_definition">residential_unit.disaggregate(bayarea.node.average_income_within_500_meters_from_household_dataset,intermediates=[parcel,building])</variable>
      <variable use="both" source="expression" name="residential_unit.average_stories_within_500_meters" type="variable_definition">residential_unit.disaggregate(bayarea.node.average_stories_within_500_meters,intermediates=[parcel,building])</variable>
      <variable use="both" source="expression" name="residential_unit.ln_unit_sqft_in_san_francisco" type="variable_definition">residential_unit.disaggregate(parcel.county_id==38,intermediates=[building])*ln_bounded(residential_unit.unit_sqft)</variable>
      <variable use="both" source="primary attribute" name="residential_unit.ln_unit_sqft" type="variable_definition">ln_bounded(residential_unit.unit_sqft)</variable>
      <variable use="both" source="expression" name="residential_unit.year_built" type="variable_definition">residential_unit.disaggregate(building.year_built*(building.year_built&gt;1930)*(building.year_built&lt;2012))</variable>
      <variable use="both" source="expression" name="residential_unit.built_pre_1930" type="variable_definition">residential_unit.disaggregate((building.year_built&lt;1931)*(building.year_built&gt;1848))</variable>
      <variable use="both" source="expression" name="residential_unit.residential_units_per_acre_in_zone" type="variable_definition">residential_unit.disaggregate(zone.aggregate(building.residential_units,intermediates=[parcel])/zone.acres,intermediates=[parcel,building])</variable>
      <variable use="both" source="expression" name="residential_unit.in_santa_clara_county" type="variable_definition">residential_unit.disaggregate(parcel.county_id==43,intermediates=[building])</variable>
      <variable use="both" source="expression" name="residential_unit.in_san_francisco" type="variable_definition">residential_unit.disaggregate(parcel.county_id==38,intermediates=[building])</variable>
      <variable use="both" source="expression" name="residential_unit.residential_units_in_building" type="variable_definition">residential_unit.disaggregate(building.residential_units)</variable>
      <variable use="both" source="expression" name="residential_unit.unit_building_type" type="variable_definition">residential_unit.disaggregate(building.building_type_id)</variable>
      <variable use="both" source="expression" name="residential_unit.residential_building_type" type="variable_definition">1*(residential_unit.disaggregate(building.building_type_id)==1) + 2*(residential_unit.disaggregate(building.building_type_id)==2) + 3*(residential_unit.disaggregate(building.building_type_id)==3) + 4*(residential_unit.disaggregate(building.building_type_id)&gt;3)</variable>
      <variable use="both" source="primary attribute" name="residential_unit.unit_sqft" type="variable_definition">residential_unit.unit_sqft</variable>
      <variable use="both" source="primary attribute" name="residential_unit.unit_bedrooms" type="variable_definition">residential_unit.bedrooms</variable>
      <variable use="both" source="primary attribute" name="residential_unit.unit_sale_price" type="variable_definition">residential_unit.sale_price</variable>
      <variable use="model variable" source="expression" name="submarket.iv_price_residual" type="variable_definition">honolulu_parcel.submarket.price_residual</variable>
      <variable use="model variable" source="expression" name="submarket.iv_ln_price_residual" type="variable_definition">honolulu_parcel.submarket.ln_price_residual</variable>
    </expression_library>
    <dataset_pool_configuration type="class" hidden="True">
      <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
      <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
      <argument name="package_order" type="list">['honolulu_parcel','urbansim_parcel','urbansim','opus_core']</argument>
    </dataset_pool_configuration>
    <available_datasets type="list">['parcel','building','household_x_building','zone','faz','gridcell','city','county','alldata','node','household_x_submarket','residential_unit','submarket','residential_building_type','employment_submarket','job','building_type']</available_datasets>
    <spatial_datasets type="list">['parcel','zone','faz','gridcell','city','county','node']</spatial_datasets>
  </general>
  <data_manager>
    <tool_library setexpanded="True">
      <tool_group name="opus_data_import_export_tools" setexpanded="True">
        <tool name="csv_data_to_opus_tool">
          <params>
            <param name="csv_data_path" param_type="dir_path" required="True">C:/Users/janowicz/Desktop</param>
            <param name="opus_data_directory" param_type="dir_path" required="True">c:/opus/data/honolulu_parcel/base_year_data</param>
            <param name="opus_data_year" param_type="string" required="True">2000</param>
          </params>
        </tool>
      </tool_group>
    </tool_library>
  </data_manager>
  <model_manager>
    <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model name="SC_building_transition_model" type="model">
        <structure type="dictionary">
          <import hidden="False" name="import" type="dictionary">
            <class_module type="string">urbansim.models.real_estate_transition_model</class_module>
            <class_name>RealEstateTransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="False" name="name" type="string">RealEstateTransitionModel</name>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">_DISCARD</output>
            <argument name="storage" type="string">base_cache_storage</argument>
            <argument name="dataset_name" parser_action="quote_string" type="string">target_vacancy</argument>
            <argument name="table_name" parser_action="quote_string" type="string">target_vacancies</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <output name="output" type="string">building, new_building_index</output>
            <argument name="realestate_dataset" type="string">building</argument>
            <argument name="year" type="string">year</argument>
            <argument name="occupied_spaces_variable" parser_action="quote_string" type="string">occupied_spaces</argument>
            <argument name="total_spaces_variable" parser_action="quote_string" type="string">total_spaces</argument>
            <argument name="sample_from_dataset" type="string">building</argument>
            <argument name="reset_attribute_value" type="string">{'parcel_id':-1}</argument>.
            <argument name="append_to_realestate_dataset" type="string">True</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="sample_filter" type="string">""</argument>
            <argument name="resources" type="string">model_resources</argument>
          </run>
        </structure>
      </model>
      <model name="building_transition_model2" type="model">
        <structure type="dictionary">
          <import hidden="False" name="import" type="dictionary">
            <class_module type="string">honolulu_parcel.models.building_transition_model</class_module>
            <class_name>BuildingTransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="False" name="name" type="string">BuildingTransitionModel</name>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
          </init>
          <run type="dictionary">
            <output hidden="True" name="output" type="string">new_building_index</output>
            <argument name="building_set" type="string">building</argument>
            <argument name="building_use_classification_table" type="string">building_type</argument>
            <argument name="vacancy_table" type="string">target_vacancy</argument>
            <argument name="history_table" type="string">development_event_history</argument>
            <argument name="year" type="string">year</argument>
            <argument name="location_set" type="string">parcel</argument>
            <argument name="resources" type="string">model_resources</argument>
          </run>
        </structure>
      </model>
      <model name="real_estate_transition_model" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim.models.real_estate_transition_model</class_module>
            <class_name>RealEstateTransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">RealEstateTransitionModel</name>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">_DISCARD</output>
            <argument name="storage" type="string">base_cache_storage</argument>
            <argument name="dataset_name" parser_action="quote_string" type="string">target_vacancy</argument>
            <argument name="table_name" parser_action="quote_string" type="string">target_vacancies</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <output name="output" type="string">building, new_building_index</output>
            <argument name="realestate_dataset" type="string">building</argument>
            <argument name="year" type="string">year</argument>
            <argument name="occupied_spaces_variable" parser_action="quote_string" type="string">occupied_spaces</argument>
            <argument name="total_spaces_variable" parser_action="quote_string" type="string">total_spaces</argument>
            <argument name="sample_from_dataset" type="string">development_event_history</argument>
            <argument name="reset_attribute_value" type="string">{'parcel_id':-1}</argument>.
            <argument name="append_to_realestate_dataset" type="string">True</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="resources" type="string">model_resources</argument>
          </run>
        </structure>
      </model>
      <model name="test_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">honolulu_parcel.models.test_model</class_module>
            <class_name type="string">TestModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">TestModel</name>
          </init>
          <run type="dictionary">
          </run>
        </structure>
      </model>
      <model name="emp_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.transition_model</class_module>
            <class_name>TransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">TransitionModel</name>
            <argument name="dataset" type="string" model_dependency_type="dataset">job</argument>
            <argument name="dataset_accounting_attribute" parser_action="quote_string" type="string" convert_blank_to_none="True" model_dependency_type="variable">None</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Emp Transition Model</argument>
            <argument name="model_short_name" parser_action="quote_string" type="string">JTM</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument name="control_total_table" parser_action="quote_string" type="string" model_dependency_type="table">annual_employment_control_totals</argument>
            <argument name="control_total_storage" type="string">base_cache_storage</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="year" type="string">year</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string" model_dependency_type="variable">number_of_jobs</argument>
            <argument name="reset_dataset_attribute_value" type="string">{'building_id':-1}</argument>
          </run>
        </structure>
      </model>
      <model name="employment_location_choice_model" type="model">
        <dependencies type="list">['employment_relocation_model']</dependencies>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <group_by_attribute type="list">('home_based_status', 'name')</group_by_attribute>
          <import name="import" type="dictionary" hidden="True">
            <class_module type="string">urbansim.models.employment_location_choice_model</class_module>
            <class_name>EmploymentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <argument name="agents_grouping_attribute" parser_action="quote_string" type="string">job.home_based_status</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string">honolulu_parcel.job.employment_submarket_id</argument>
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string" parser_action="quote_string" model_dependency_type="variable"/>
            <argument name="compute_capacity_flag" type="boolean">True</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string" model_dependency_type="variable">'clip_to_zero((employment_submarket.aggregate(building.non_residential_sqft)/250)-employment_submarket.aggregate(building.number_of_agents(job)))'</argument>
            <argument convert_blank_to_none="True" name="estimation_weight_string" parser_action="quote_string" type="string" model_dependency_type="variable">'employment_submarket.aggregate(building.non_residential_sqft)'</argument>
            <argument name="dataset_pool" type="string" hidden="True">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="filter" type="string" model_dependency_type="variable"/>
            <argument name="variable_package" parser_action="quote_string" type="string">honolulu_parcel</argument>
            <argument name="run_config" type="dictionary">
              <key name="lottery_max_iterations" type="integer">5</key>
              <key convert_blank_to_none="True" name="agent_units_string" type="string" model_dependency_type="variable"/>
            </argument>
            <argument name="location_set" type="string" model_dependency_type="dataset">employment_submarket</argument>
            <argument name="estimation_size_agents" type="float">.25</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string"/>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="sample_size_locations" type="integer">50</argument>
            <name name="name" type="string" hidden="True">EmploymentLocationChoiceModel</name>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string" hidden="True">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">employment_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">employment_location_choice_model_specification</argument>
            <name name="name" type="string" hidden="True">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
            <argument name="specification" type="string" hidden="True">specification</argument>
            <argument name="maximum_runs" type="integer">5</argument>
            <argument name="agents_index" type="string" hidden="True">erm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string" hidden="True">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string" hidden="True">(specification, index)</output>
            <argument name="portion_to_unplace" type="integer">0</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">employment_location_choice_model_specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string" parser_action="quote_string" model_dependency_type="variable"/>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">jobs_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <name name="name" type="string" hidden="True">prepare_for_estimate</name>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string" hidden="True">(coefficients, _)</output>
            <argument name="specification" type="string" hidden="True">specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string" hidden="True">index</argument>
            <argument name="debuglevel" type="string" hidden="True">debuglevel</argument>
          </estimate>
        </structure>
        <specification type="dictionary">
          <submodel_group name="home_based" type="submodel_group">
            <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.ln_residential_units_esubmarket"/>
              </variable_list>
            </submodel>
          </submodel_group>
          <submodel_group name="non_home_based" type="submodel_group">
            <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list"/>
            </submodel>
            <submodel hidden="Children" name="Agriculture" submodel_id="1" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_transport_esubmarket"/>
                <variable_spec name="employment_submarket.land_per_nonres_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.ln_average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.ln_pop_10_min_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="MiningConstruction" submodel_id="2" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.cbd_time_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_parking_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.is_warehouse_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.ln_pop_10_min_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="FoodProcessing" submodel_id="3" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.is_manufacturing_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_warehouse_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.ln_pop_10_min_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="OtherManufacturing" submodel_id="4" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_manufacturing_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.is_warehouse_esubmarket"/>
                <variable_spec name="employment_submarket.ln_jobs_within_15_min_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.ln_pop_10_min_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Transport" submodel_id="5" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_regional_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.is_transport_esubmarket"/>
                <variable_spec name="employment_submarket.is_utility_esubmarket"/>
                <variable_spec name="employment_submarket.is_warehouse_esubmarket"/>
                <variable_spec name="employment_submarket.ln_jobs_within_15_min_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Information" submodel_id="6" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_utility_esubmarket"/>
                <variable_spec name="employment_submarket.is_warehouse_esubmarket"/>
                <variable_spec name="employment_submarket.ln_jobs_within_15_min_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Utilities" submodel_id="7" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_manufacturing_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.is_utility_esubmarket"/>
                <variable_spec name="employment_submarket.ln_jobs_within_15_min_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.ln_pop_10_min_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Wholesale" submodel_id="8" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_transport_esubmarket"/>
                <variable_spec name="employment_submarket.is_warehouse_esubmarket"/>
                <variable_spec name="employment_submarket.land_per_nonres_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.ln_pop_10_min_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Retail" submodel_id="9" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.avg_hh_income_zonal_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_regional_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.is_warehouse_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="FinanceInsurance" submodel_id="10" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_regional_retail_esubmarket"/>
                <variable_spec name="employment_submarket.ln_job_density_zone_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="RealEstate" submodel_id="11" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.is_warehouse_esubmarket"/>
                <variable_spec name="employment_submarket.ln_jobs_within_15_min_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="ProfessionalServices" submodel_id="12" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_classroom_esubmarket"/>
                <variable_spec name="employment_submarket.is_hospital_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.is_warehouse_esubmarket"/>
                <variable_spec name="employment_submarket.ln_jobs_within_15_min_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="BusinessServices" submodel_id="13" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_community_esubmarket"/>
                <variable_spec name="employment_submarket.is_hospital_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.ln_average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.ln_jobs_within_15_min_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="EducationalServices" submodel_id="14" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.avg_hh_income_zonal_esubmarket"/>
                <variable_spec name="employment_submarket.is_classroom_esubmarket"/>
                <variable_spec name="employment_submarket.is_community_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="HealthServices" submodel_id="15" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_community_esubmarket"/>
                <variable_spec name="employment_submarket.is_hospital_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.ln_jobs_within_15_min_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="ArtsEntertainment" submodel_id="16" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.is_community_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.ln_average_value_per_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.ln_jobs_within_15_min_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Hotels" submodel_id="17" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.hotel_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.travel_time_to_waikiki_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="EatingDrinking" submodel_id="18" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_regional_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
                <variable_spec name="employment_submarket.travel_time_to_waikiki_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="OtherServices" submodel_id="19" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.households_in_zone_esubmarket"/>
                <variable_spec name="employment_submarket.is_classroom_esubmarket"/>
                <variable_spec name="employment_submarket.is_community_esubmarket"/>
                <variable_spec name="employment_submarket.is_neighborhood_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_office_esubmarket"/>
                <variable_spec name="employment_submarket.is_regional_retail_esubmarket"/>
                <variable_spec name="employment_submarket.is_service_shops_supplies_esubmarket"/>
                <variable_spec name="employment_submarket.ln_jobs_within_30_min_esubmarket"/>
                <variable_spec name="employment_submarket.ln_non_residential_sqft_esubmarket"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Government" submodel_id="20" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="employment_submarket.jobs20_gov_esubmarket"/>
              </variable_list>
            </submodel>
          </submodel_group>
        </specification>
      </model>
      <model name="tenure_choice_model" type="model">
        <dependencies type="list">['household_relocation_model']</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.choice_model</class_module>
            <class_name type="string">ChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">ChoiceModel</name>
            <argument name="choice_set" type="string" model_dependency_type="dataset">[1,2]</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">honolulu_parcel.household.income_4</argument>
            <argument name="choice_attribute_name" parser_action="quote_string" type="string" model_dependency_type="variable">tenure</argument>
            <argument name="interaction_pkg" parser_action="quote_string" type="string">opus_core</argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"/>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument convert_blank_to_none="True" name="chunk_specification" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(specification, coefficients, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">tenure_choice_model_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">tenure_choice_model_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
          </prepare_for_run>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, dummy)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(specification, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string" model_dependency_type="variable">household.year_moved==1</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">choice_model_template_specification</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" dynamic="True">
          <submodel hidden="Children" name="low_inc" submodel_id="1" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="own">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="rent">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head"/>
                <variable_spec name="household.avg_edu_hh"/>
                <variable_spec name="household.children"/>
                <variable_spec name="constant"/>
                <variable_spec name="household.head_is_asian"/>
                <variable_spec name="household.head_is_white"/>
                <variable_spec name="household.nonfamily"/>
                <variable_spec name="household.oldhead"/>
                <variable_spec name="household.persons"/>
                <variable_spec name="household.vehicles"/>
                <variable_spec name="household.workers_per_person"/>
                <variable_spec name="household.young_adults"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="lowmid_inc" submodel_id="2" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="own">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="rent">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head"/>
                <variable_spec name="household.avg_edu_hh"/>
                <variable_spec name="household.children"/>
                <variable_spec name="constant"/>
                <variable_spec name="household.enrollment_of_head"/>
                <variable_spec name="household.head_is_asian"/>
                <variable_spec name="household.head_is_white"/>
                <variable_spec name="household.income"/>
                <variable_spec name="household.oldhead"/>
                <variable_spec name="household.persons"/>
                <variable_spec name="household.vehicles"/>
                <variable_spec name="household.workers_per_person"/>
                <variable_spec name="household.young_adults"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="highmid_inc" submodel_id="3" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="own">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="rent">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head"/>
                <variable_spec name="household.children"/>
                <variable_spec name="constant"/>
                <variable_spec name="household.enrollment_of_head"/>
                <variable_spec name="household.head_is_asian"/>
                <variable_spec name="household.head_is_white"/>
                <variable_spec name="household.income"/>
                <variable_spec name="household.nonfamily"/>
                <variable_spec name="household.oldhead"/>
                <variable_spec name="household.persons"/>
                <variable_spec name="household.vehicles"/>
                <variable_spec name="household.young_adults"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="high_inc" submodel_id="4" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="own">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="rent">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head"/>
                <variable_spec name="household.avg_edu_hh"/>
                <variable_spec name="household.children"/>
                <variable_spec name="constant"/>
                <variable_spec name="household.enrollment_of_head"/>
                <variable_spec name="household.head_is_asian"/>
                <variable_spec name="household.head_is_white"/>
                <variable_spec name="household.income"/>
                <variable_spec name="household.nonfamily"/>
                <variable_spec name="household.oldhead"/>
                <variable_spec name="household.persons"/>
                <variable_spec name="household.vehicles"/>
                <variable_spec name="household.wealthy_hh"/>
              </variable_list>
            </equation>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="residential_building_type_choice_model_owner" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">honolulu_parcel</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string">honolulu_parcel.household.residential_building_type_id</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">honolulu_parcel.household.income_4</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">clip_to_zero(residential_building_type.residential_units-residential_building_type.number_of_households)</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string">residential_building_type.residential_building_type_id&lt;5</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">residential_building_type.residential_units</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 3, })</argument>
            <argument name="location_set" type="string">residential_building_type</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string">1</argument>
            <argument convert_blank_to_none="True" name="sampler" parser_action="quote_string" type="string"/>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">residential_building_type.residential_units</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation_with_diagnose</argument>
            <argument name="estimate_config" type="string">Resources({})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">household_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string">'((household.year_moved==1)*(household.tenure==1))'</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel hidden="Children" name="low_inc" submodel_id="1" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="sf_detached">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="duplex">
              <variable_list type="variable_list">
                <variable_spec name="constant" coefficient_name="duplex_constant"/>
                <variable_spec name="household.income" coefficient_name="duplex_income"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="apartment_age_of_head"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="apartment_enrollment_of_head"/>
                <variable_spec name="household.head_is_asian" coefficient_name="apartment_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="apartment_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.oldhead" coefficient_name="apartment_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
              </variable_list>
            </equation>
            <equation equation_id="4" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="townhome_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="townhomechildren"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="townhome_head_is_asian"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.workers_per_person" coefficient_name="townhome_workers_per_person"/>
                <variable_spec name="household.young_adults" coefficient_name="townhome_young_adults"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="lowmid_inc" submodel_id="2" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="sf_detached">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="duplex">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="duplex_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="duplex_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="duplex_children"/>
                <variable_spec name="constant" coefficient_name="duplex_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="duplex_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="duplex_head_is_white"/>
                <variable_spec name="household.oldhead" coefficient_name="duplex_oldhead"/>
                <variable_spec name="household.vehicles" coefficient_name="duplex_vehicles"/>
                <variable_spec name="household.young_adults" coefficient_name="duplex_young_adults"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.avg_edu_hh" coefficient_name="apartment_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="apartment_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="apartment_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="apartment_nonfamily"/>
                <variable_spec name="household.oldhead" coefficient_name="apartment_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
              </variable_list>
            </equation>
            <equation equation_id="4" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.children" coefficient_name="townhomechildren"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="townhome_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="townhome_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.oldhead" coefficient_name="townhome_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
                <variable_spec name="household.workers_per_person" coefficient_name="townhome_workers_per_person"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="highmid_inc" submodel_id="3" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="sf_detached">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="duplex">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="duplex_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="duplex_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="duplex_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="duplex_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="duplex_head_is_white"/>
                <variable_spec name="household.young_adults" coefficient_name="duplex_young_adults"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="apartment_age_of_head"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="apartment_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="apartment_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="apartment_nonfamily"/>
                <variable_spec name="household.oldhead" coefficient_name="apartment_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
                <variable_spec name="household.workers_per_person" coefficient_name="apartment_workers_per_person"/>
              </variable_list>
            </equation>
            <equation equation_id="4" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="townhome_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="townhomechildren"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="townhome_enrollment_of_head"/>
                <variable_spec name="household.head_is_asian" coefficient_name="townhome_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="townhome_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.oldhead" coefficient_name="townhome_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
                <variable_spec name="household.workers_per_person" coefficient_name="townhome_workers_per_person"/>
                <variable_spec name="household.young_adults" coefficient_name="townhome_young_adults"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="high_inc" submodel_id="4" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="sf_detached">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="duplex">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="duplex_age_of_head"/>
                <variable_spec name="household.children" coefficient_name="duplex_children"/>
                <variable_spec name="constant" coefficient_name="duplex_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="duplex_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="duplex_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="duplex_income"/>
                <variable_spec name="household.oldhead" coefficient_name="duplex_oldhead"/>
                <variable_spec name="household.vehicles" coefficient_name="duplex_vehicles"/>
                <variable_spec name="household.young_adults" coefficient_name="duplex_young_adults"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.avg_edu_hh" coefficient_name="apartment_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="apartment_children"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="apartment_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="apartment_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="apartment_nonfamily"/>
                <variable_spec name="household.oldhead" coefficient_name="apartment_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="apartment_wealthy_hh"/>
                <variable_spec name="household.young_adults" coefficient_name="apartment_young_adults"/>
              </variable_list>
            </equation>
            <equation equation_id="4" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="townhome_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="townhome_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="townhome_nonfamily"/>
                <variable_spec name="household.oldhead" coefficient_name="townhome_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
                <variable_spec name="household.workers_per_person" coefficient_name="townhome_workers_per_person"/>
              </variable_list>
            </equation>
          </submodel>
        </specification>
      </model>
      <model name="residential_building_type_choice_model_renter" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">honolulu_parcel</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string">honolulu_parcel.household.residential_building_type_id</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">honolulu_parcel.household.income_4</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">clip_to_zero(residential_building_type.residential_units-residential_building_type.number_of_households)</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string">residential_building_type.residential_building_type_id&lt;5</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">residential_building_type.residential_units</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 3, })</argument>
            <argument name="location_set" type="string">residential_building_type</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string">1</argument>
            <argument convert_blank_to_none="True" name="sampler" parser_action="quote_string" type="string"/>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">residential_building_type.residential_units</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation_with_diagnose</argument>
            <argument name="estimate_config" type="string">Resources({})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">household_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string">'((household.year_moved==1)*(household.tenure==2))'</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel hidden="Children" name="low_inc" submodel_id="1" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="sf_detached">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="duplex">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="duplex_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="duplex_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="duplex_constant"/>
                <variable_spec name="household.head_is_white" coefficient_name="duplex_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="duplex_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="duplex_nonfamily"/>
                <variable_spec name="household.persons" coefficient_name="duplex_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="duplex_vehicles"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="apartment_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="apartment_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="apartment_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="apartment_head_is_white"/>
                <variable_spec name="household.nonfamily" coefficient_name="apartment_nonfamily"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
                <variable_spec name="household.young_adults" coefficient_name="apartment_young_adults"/>
              </variable_list>
            </equation>
            <equation equation_id="4" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="townhome_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="townhomechildren"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="townhome_enrollment_of_head"/>
                <variable_spec name="household.head_is_asian" coefficient_name="townhome_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="townhome_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="townhome_nonfamily"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
                <variable_spec name="household.workers_per_person" coefficient_name="townhome_workers_per_person"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="lowmid_inc" submodel_id="2" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="sf_detached">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="duplex">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="duplex_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="duplex_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="duplex_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="duplex_head_is_asian"/>
                <variable_spec name="household.income" coefficient_name="duplex_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="duplex_nonfamily"/>
                <variable_spec name="household.vehicles" coefficient_name="duplex_vehicles"/>
                <variable_spec name="household.young_adults" coefficient_name="duplex_young_adults"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="apartment_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="apartment_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="apartment_enrollment_of_head"/>
                <variable_spec name="household.head_is_asian" coefficient_name="apartment_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="apartment_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="apartment_nonfamily"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
                <variable_spec name="household.workers_per_person" coefficient_name="apartment_workers_per_person"/>
              </variable_list>
            </equation>
            <equation equation_id="4" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="townhome_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="townhome_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="townhome_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.oldhead" coefficient_name="townhome_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="highmid_inc" submodel_id="3" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="sf_detached">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="duplex">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="duplex_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="duplex_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="duplex_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="duplex_enrollment_of_head"/>
                <variable_spec name="household.head_is_white" coefficient_name="duplex_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="duplex_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="duplex_nonfamily"/>
                <variable_spec name="household.oldhead" coefficient_name="duplex_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="duplex_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="duplex_vehicles"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.children" coefficient_name="apartment_children"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="apartment_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="apartment_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
                <variable_spec name="household.young_adults" coefficient_name="apartment_young_adults"/>
              </variable_list>
            </equation>
            <equation equation_id="4" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="townhome_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="townhomechildren"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="townhome_enrollment_of_head"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="townhome_nonfamily"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
                <variable_spec name="household.young_adults" coefficient_name="townhome_young_adults"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="high_inc" submodel_id="4" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="sf_detached">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="duplex">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="duplex_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="duplex_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="duplex_constant"/>
                <variable_spec name="household.nonfamily" coefficient_name="duplex_nonfamily"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="duplex_wealthy_hh"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="apartment_age_of_head"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="apartment_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="apartment_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="apartment_nonfamily"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="apartment_wealthy_hh"/>
                <variable_spec name="household.workers_per_person" coefficient_name="apartment_workers_per_person"/>
              </variable_list>
            </equation>
            <equation equation_id="4" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="townhome_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="townhome_head_is_asian"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="townhome_wealthy_hh"/>
              </variable_list>
            </equation>
          </submodel>
        </specification>
      </model>
      <model name="submarket_household_location_choice_model_owner" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">honolulu_parcel</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string">honolulu_parcel.household.submarket_id</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">honolulu_parcel.household.income_4_buildingtype_4</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">submarket.residential_units-submarket.number_of_households</argument>
            <argument name="filter" parser_action="quote_string" type="string">(submarket.residential_building_type_id==1)*(SUBMODEL&lt;5) + (submarket.residential_building_type_id==2)*(SUBMODEL&gt;4)*(SUBMODEL&lt;9) + (submarket.residential_building_type_id==3)*(SUBMODEL&gt;8)*(SUBMODEL&lt;13) +  (submarket.residential_building_type_id==4)*(SUBMODEL&gt;12)</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">submarket.residential_units</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 10,"sample_alternatives_by_submodel":True})</argument>
            <argument name="location_set" type="string">submarket</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string">.75</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">submarket.residential_units</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="sample_size_locations" type="integer">50</argument>
            <argument name="estimate_config" type="string">Resources({"sample_alternatives_by_submodel":True})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">household_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string">'household.tenure==1'</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel name="lowinc_sfdetached" submodel_id="1" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_sfdetached" submodel_id="2" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_sfdetached" submodel_id="3" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_sfdetached" submodel_id="4" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_close_to_submarket_avginc"/>
              <variable_spec name="submarket.iv_price_residual"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowinc_duplex" submodel_id="5" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_duplex</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_duplex" submodel_id="6" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_duplex</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_duplex" submodel_id="7" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_duplex</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_duplex" submodel_id="8" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_duplex</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowinc_apartment" submodel_id="9" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_apartment" submodel_id="10" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_apartment" submodel_id="11" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_apartment" submodel_id="12" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowinc_townhome" submodel_id="13" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_townhome" submodel_id="14" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_townhome" submodel_id="15" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_townhome" submodel_id="16" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="submarket_household_location_choice_model_renter" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">honolulu_parcel</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string">honolulu_parcel.household.submarket_id</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">honolulu_parcel.household.income_4_buildingtype_4</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">submarket.residential_units-submarket.number_of_households</argument>
            <argument name="filter" parser_action="quote_string" type="string">(submarket.residential_building_type_id==1)*(SUBMODEL&lt;5) + (submarket.residential_building_type_id==2)*(SUBMODEL&gt;4)*(SUBMODEL&lt;9) + (submarket.residential_building_type_id==3)*(SUBMODEL&gt;8)*(SUBMODEL&lt;13) +  (submarket.residential_building_type_id==4)*(SUBMODEL&gt;12)</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">submarket.residential_units</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 10,"sample_alternatives_by_submodel":True})</argument>
            <argument name="location_set" type="string">submarket</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string">1</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">submarket.residential_units</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation_with_diagnose</argument>
            <argument name="sample_size_locations" type="integer">50</argument>
            <argument name="estimate_config" type="string">Resources({"sample_alternatives_by_submodel":True})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">household_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string">'household.tenure==2'</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel name="lowinc_sfdetached" submodel_id="1" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_sfdetached" submodel_id="2" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_sfdetached" submodel_id="3" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_sfdetached" submodel_id="4" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowinc_duplex" submodel_id="5" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_duplex</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_duplex" submodel_id="6" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_duplex</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_duplex" submodel_id="7" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_duplex</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_apartment" submodel_id="8" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_duplex</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowinc_apartment" submodel_id="9" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_apartment" submodel_id="10" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_apartment" submodel_id="11" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_apartment" submodel_id="12" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowinc_townhome" submodel_id="13" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_townhome" submodel_id="14" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_townhome" submodel_id="15" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_townhome" submodel_id="16" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="submarket_household_location_choice_model_owner2" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':3}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">honolulu_parcel</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string">honolulu_parcel.household.submarket_id</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">honolulu_parcel.household.income_4_buildingtype_4</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">submarket.residential_units-submarket.number_of_households</argument>
            <argument name="filter" parser_action="quote_string" type="string">(submarket.residential_building_type_id==1)*(SUBMODEL&lt;5) + (submarket.residential_building_type_id==2)*(SUBMODEL&gt;4)*(SUBMODEL&lt;9) + (submarket.residential_building_type_id==3)*(SUBMODEL&gt;8)*(SUBMODEL&lt;13) +  (submarket.residential_building_type_id==4)*(SUBMODEL&gt;12)</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">submarket.residential_units</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 10,"sample_alternatives_by_submodel":True})</argument>
            <argument name="location_set" type="string">submarket</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string">.25</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">submarket.residential_units</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="sample_size_locations" type="integer">50</argument>
            <argument name="estimate_config" type="string">Resources({"sample_alternatives_by_submodel":True})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_owner2_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_owner2_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string">'household.tenure==1'</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel name="lowinc_sfdetached" submodel_id="1" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_submarket.age_x_travel_time_to_waikiki"/>
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="submarket.average_unit_size"/>
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.core_submarket"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_sfdetached" submodel_id="2" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_submarket.age_x_average_year_built"/>
              <variable_spec name="household_x_submarket.age_x_travel_time_to_waikiki"/>
              <variable_spec name="submarket.average_unit_size"/>
              <variable_spec name="household_x_submarket.children_x_core_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_within50percent_submarket_avginc"/>
              <variable_spec name="household_x_submarket.income_x_ln_job_density"/>
              <variable_spec name="submarket.iv_ln_price_residual"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_40plus_hrs_worked_if_hh_head_does"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_college_grad_if_hh_head_grad"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="household_x_submarket.vehicles_x_average_stories"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_sfdetached" submodel_id="3" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_submarket.age_x_travel_time_to_waikiki"/>
              <variable_spec name="submarket.average_unit_size"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="submarket.core_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_close_to_submarket_avginc"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_40plus_hrs_worked_if_hh_head_does"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_college_grad_if_hh_head_grad"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="household_x_submarket.vehicles_x_average_stories"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_sfdetached" submodel_id="4" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_close_to_submarket_avginc"/>
              <variable_spec name="submarket.iv_price_residual"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowinc_duplex" submodel_id="5" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_duplex</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_unit_size"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="submarket.travel_time_to_waikiki_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_duplex" submodel_id="6" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_duplex</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_submarket.age_x_travel_time_to_waikiki"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="submarket.core_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_within50percent_submarket_avginc"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_duplex" submodel_id="7" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_duplex</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="household_x_submarket.college_grad_x_time_to_cbd"/>
              <variable_spec name="submarket.core_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_close_to_submarket_avginc"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_duplex" submodel_id="8" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_duplex</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="submarket.core_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_within50percent_submarket_avginc"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="submarket.time_to_cbd_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowinc_apartment" submodel_id="9" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="household_x_submarket.children_x_ln_job_density"/>
              <variable_spec name="submarket.core_submarket"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="submarket.time_to_cbd_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_apartment" submodel_id="10" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="household_x_submarket.hh_income_close_to_submarket_avginc"/>
              <variable_spec name="submarket.iv_ln_price_residual"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="submarket.travel_time_to_waikiki_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_apartment" submodel_id="11" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="household_x_submarket.hh_income_within50percent_submarket_avginc"/>
              <variable_spec name="submarket.iv_ln_price_residual"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_apartment" submodel_id="12" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_income_in_submarket"/>
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="submarket.iv_price_residual"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
            </variable_list>
          </submodel>
          <submodel name="lowinc_townhome" submodel_id="13" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_townhome" submodel_id="14" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_within50percent_submarket_avginc"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_townhome" submodel_id="15" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_close_to_submarket_avginc"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_townhome" submodel_id="16" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="submarket_household_location_choice_model_renter2" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':3}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">honolulu_parcel</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string">honolulu_parcel.household.submarket_id</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">honolulu_parcel.household.income_4_buildingtype_4</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">submarket.residential_units-submarket.number_of_households</argument>
            <argument name="filter" parser_action="quote_string" type="string">(submarket.residential_building_type_id==1)*(SUBMODEL&lt;5) + (submarket.residential_building_type_id==2)*(SUBMODEL&gt;4)*(SUBMODEL&lt;9) + (submarket.residential_building_type_id==3)*(SUBMODEL&gt;8)*(SUBMODEL&lt;13) +  (submarket.residential_building_type_id==4)*(SUBMODEL&gt;12)</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">submarket.residential_units</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 10,"sample_alternatives_by_submodel":True})</argument>
            <argument name="location_set" type="string">submarket</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string">.5</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">submarket.residential_units</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation_with_diagnose</argument>
            <argument name="sample_size_locations" type="integer">50</argument>
            <argument name="estimate_config" type="string">Resources({"sample_alternatives_by_submodel":True})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_renter2_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">submarket_household_location_choice_model_renter2_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string">'household.tenure==2'</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel name="lowinc_sfdetached" submodel_id="1" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_submarket.age_x_travel_time_to_waikiki"/>
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="submarket.average_unit_size"/>
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.core_submarket"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_sfdetached" submodel_id="2" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_submarket.age_x_average_year_built"/>
              <variable_spec name="household_x_submarket.age_x_travel_time_to_waikiki"/>
              <variable_spec name="submarket.average_unit_size"/>
              <variable_spec name="household_x_submarket.children_x_core_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_within50percent_submarket_avginc"/>
              <variable_spec name="household_x_submarket.income_x_ln_job_density"/>
              <variable_spec name="submarket.iv_ln_price_residual"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_40plus_hrs_worked_if_hh_head_does"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_college_grad_if_hh_head_grad"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="household_x_submarket.vehicles_x_average_stories"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_sfdetached" submodel_id="3" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_submarket.age_x_travel_time_to_waikiki"/>
              <variable_spec name="submarket.average_unit_size"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="submarket.core_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_close_to_submarket_avginc"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_40plus_hrs_worked_if_hh_head_does"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_college_grad_if_hh_head_grad"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="household_x_submarket.vehicles_x_average_stories"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_sfdetached" submodel_id="4" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_sfdetached</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_close_to_submarket_avginc"/>
              <variable_spec name="submarket.iv_price_residual"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowinc_duplex" submodel_id="5" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_duplex</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_unit_size"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="submarket.travel_time_to_waikiki_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_duplex" submodel_id="6" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_duplex</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_submarket.age_x_travel_time_to_waikiki"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="submarket.core_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_within50percent_submarket_avginc"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_duplex" submodel_id="7" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_duplex</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="household_x_submarket.children_ln_jobs_30_min_submarket"/>
              <variable_spec name="household_x_submarket.college_grad_x_time_to_cbd"/>
              <variable_spec name="submarket.core_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_close_to_submarket_avginc"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_duplex" submodel_id="8" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_duplex</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="submarket.core_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_within50percent_submarket_avginc"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="submarket.time_to_cbd_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowinc_apartment" submodel_id="9" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="household_x_submarket.children_x_ln_job_density"/>
              <variable_spec name="submarket.core_submarket"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="submarket.time_to_cbd_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_apartment" submodel_id="10" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="household_x_submarket.hh_income_close_to_submarket_avginc"/>
              <variable_spec name="submarket.iv_ln_price_residual"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="household_x_submarket.proportion_no_vehicle_if_hh_no_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="submarket.travel_time_to_waikiki_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_apartment" submodel_id="11" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="household_x_submarket.hh_income_within50percent_submarket_avginc"/>
              <variable_spec name="submarket.iv_ln_price_residual"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_apartment" submodel_id="12" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_apartment</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_income_in_submarket"/>
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="submarket.iv_price_residual"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
            </variable_list>
          </submodel>
          <submodel name="lowinc_townhome" submodel_id="13" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="submarket.ln_avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
            </variable_list>
          </submodel>
          <submodel name="lowmidinc_townhome" submodel_id="14" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">lowmidinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_within50percent_submarket_avginc"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_jobs_30_min_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_hh_contain_kids_if_hh_contains_kids"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highmidinc_townhome" submodel_id="15" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highmidinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="household_x_submarket.hh_income_close_to_submarket_avginc"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
          <submodel name="highinc_townhome" submodel_id="16" type="submodel" hidden="Children" inherit_parent_values="False">
            <description type="string">highinc_townhome</description>
            <variable_list type="variable_list">
              <variable_spec name="submarket.average_stories"/>
              <variable_spec name="submarket.average_year_built"/>
              <variable_spec name="submarket.avg_unit_price_submarket"/>
              <variable_spec name="submarket.ln_job_density_zone_submarket"/>
              <variable_spec name="submarket.ln_residential_units_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_asian_if_hh_asian"/>
              <variable_spec name="household_x_submarket.proportion_more_than_2_vehicle_if_hh_more_than_2_vehicle"/>
              <variable_spec name="submarket.proportion_renter_hh_in_submarket"/>
              <variable_spec name="household_x_submarket.proportion_white_if_hh_white"/>
              <variable_spec name="household_x_submarket.proportion_younghead_if_hh_younghead"/>
              <variable_spec name="household_x_submarket.wkrs_hhs_ln_jobs_30_min_submarket"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="employment_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary" hidden="True">
            <class_module type="string">urbansim.models.transition_model</class_module>
            <class_name>TransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string" hidden="True">TransitionModel</name>
            <argument name="dataset" type="string">job</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Employment Transition Model</argument>
            <argument name="model_short_name" parser_action="quote_string" type="string">ETM</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string" hidden="True">prepare_for_run</name>
            <argument name="control_total_table" parser_action="quote_string" type="string">annual_employment_control_totals</argument>
            <argument name="control_total_storage" type="string">base_cache_storage</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="year" type="string">year</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string">number_of_jobs</argument>
            <argument name="reset_dataset_attribute_value" type="string">{'building_id':-1}</argument>
          </run>
        </structure>
      </model>
      <model name="household_allocation_to_building_model" type="model">
        <dependencies type="list">['household_relocation_model']</dependencies>
        <structure type="dictionary">
          <estimate type="dictionary">
            <output hidden="True" name="output" type="string">(coefficients, _)</output>
            <argument name="agent_set" type="string">household</argument>
            <argument hidden="True" name="agents_index" type="string">_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument hidden="True" name="specification" type="string">_specification</argument>
          </estimate>
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">honolulu_parcel.models.household_location_choice_model_by_submarkets</class_module>
            <class_name>HouseholdLocationChoiceModelBySubmarkets</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">HouseholdLocationChoiceModelBySubmarkets</name>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_wesml_mnl_estimation</argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="location_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="sample_size_locations" type="integer">30</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string" model_dependency_type="variable">clip_to_zero(building.residential_units - building.number_of_agents(household))</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string" model_dependency_type="variable">building.residential_units</argument>
            <argument name="number_of_units_string" convert_blank_to_none="True" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="number_of_agents_string" convert_blank_to_none="True" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="location_id_string" parser_action="quote_string" type="string">building_id</argument>
            <argument name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="estimation_size_agents" type="float">0.5</argument>
            <argument name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">building.residential_units&gt;0</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 7,"accept_unavailability_of_choices":True})</argument>
            <argument name="estimate_config" type="string">Resources({'wesml_sampling_correction_variable':'psrc_parcel.building.wesml_sampling_correction_variable'})</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim_parcel</argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_estimate</name>
            <output hidden="True" name="output" type="string">(_specification, _index)</output>
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">households_for_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument name="portion_to_unplace" type="string">.1</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">household_allocation_to_building_model_specification</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">numpy.logical_and(household.building_id&gt;0, household.disaggregate(building.residential_units&gt;0))</argument>
          </prepare_for_estimate>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <output hidden="True" name="output" type="string">(_specification, _coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">household_allocation_to_building_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">household_allocation_to_building_model_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument hidden="True" name="agents_index" type="string">hrm_index</argument>
            <argument name="chunk_specification" type="string">None</argument>
            <argument hidden="True" name="coefficients" type="string">_coefficients</argument>
            <argument hidden="True" name="data_objects" type="string">datasets</argument>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument hidden="True" name="specification" type="string">_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list">
              <variable_spec name="building.building_year_built"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="job_allocation_to_building_model" type="model">
        <dependencies type="list">['employment_relocation_model']</dependencies>
        <structure type="dictionary">
          <estimate type="dictionary">
            <output hidden="True" name="output" type="string">(coefficients, _)</output>
            <argument name="agent_set" type="string">job</argument>
            <argument hidden="True" name="agents_index" type="string">_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument hidden="True" name="specification" type="string">_specification</argument>
          </estimate>
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">honolulu_parcel.models.job_location_choice_model_by_submarkets</class_module>
            <class_name>JobLocationChoiceModelBySubmarkets</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">JobLocationChoiceModelBySubmarkets</name>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_wesml_mnl_estimation</argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="location_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="sample_size_locations" type="integer">30</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string" model_dependency_type="variable">clip_to_zero((building.non_residential_sqft/250) - building.number_of_agents(job))</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string" model_dependency_type="variable">building.non_residential_sqft</argument>
            <argument name="number_of_units_string" convert_blank_to_none="True" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="number_of_agents_string" convert_blank_to_none="True" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="location_id_string" parser_action="quote_string" type="string">building_id</argument>
            <argument name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="estimation_size_agents" type="float">0.5</argument>
            <argument name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">building.non_residential_sqft&gt;0</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 7,"accept_unavailability_of_choices":True})</argument>
            <argument name="estimate_config" type="string">Resources({'wesml_sampling_correction_variable':'psrc_parcel.building.wesml_sampling_correction_variable'})</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim_parcel</argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_estimate</name>
            <output hidden="True" name="output" type="string">(_specification, _index)</output>
            <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">jobs_for_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument name="portion_to_unplace" type="string">.1</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">job_allocation_to_building_model_specification</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">numpy.logical_and(job.building_id&gt;0, job.disaggregate(building.non_residential_sqft&gt;0))</argument>
          </prepare_for_estimate>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <output hidden="True" name="output" type="string">(_specification, _coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">job_allocation_to_building_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">job_allocation_to_building_model_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
            <argument hidden="True" name="agents_index" type="string">erm_index</argument>
            <argument name="chunk_specification" type="string">None</argument>
            <argument hidden="True" name="coefficients" type="string">_coefficients</argument>
            <argument hidden="True" name="data_objects" type="string">datasets</argument>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument hidden="True" name="specification" type="string">_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list">
              <variable_spec name="building.building_year_built"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="price_model" type="model">
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':5}</argument>
            <argument name="specification" type="string" hidden="True">specification</argument>
            <argument name="dataset" type="string" model_dependency_type="dataset">building</argument>
            <argument name="data_objects" type="string" hidden="True">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string" hidden="True">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument name="outcome_attribute" parser_action="quote_string" type="string">ln_improvement_value=ln(building.improvement_value)</argument>
            <argument convert_blank_to_none="True" name="filter_attribute" type="string" parser_action="quote_string" model_dependency_type="variable">building.improvement_value&gt;100000</argument>
            <argument name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable">building_type_id</argument>
            <argument name="dataset_pool" type="string" hidden="True">dataset_pool</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <name name="name" type="string" hidden="True">RealEstatePriceModel</name>
          </init>
          <import name="import" type="dictionary" hidden="True">
            <class_module type="string">urbansim.models.real_estate_price_model</class_module>
            <class_name>RealEstatePriceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string" hidden="True">(coefficients, _)</output>
            <argument name="index" type="string" hidden="True">repm_index</argument>
            <argument name="outcome_attribute" parser_action="quote_string" type="string">ln_improvement_value=ln(building.improvement_value)</argument>
            <argument name="specification" type="string" hidden="True">specification</argument>
            <argument name="dataset" type="string" model_dependency_type="dataset">building</argument>
            <argument name="data_objects" type="string" hidden="True">datasets</argument>
            <argument name="debuglevel" type="string" hidden="True">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string" hidden="True">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">price_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">price_model_specification</argument>
            <name name="name" type="string" hidden="True">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string" hidden="True">(specification, repm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">price_model_specification</argument>
            <argument convert_blank_to_none="True" name="filter_variable" type="string" parser_action="quote_string" model_dependency_type="variable">building.improvement_value&gt;0</argument>
            <argument name="dataset" type="string" model_dependency_type="dataset">building</argument>
            <name name="name" type="string" hidden="True">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="sf_detached_own" submodel_id="1" type="submodel">
            <description type="string">sf_detached_own</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_land_per_unit"/>
              <variable_spec name="building.sqft_per_unit"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="duplex_own" submodel_id="2" type="submodel">
            <description type="string">duplex_own</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_land_per_unit"/>
              <variable_spec name="building.sqft_per_unit"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="apartment_own" submodel_id="3" type="submodel">
            <description type="string">apartment_own</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_land_per_unit"/>
              <variable_spec name="building.sqft_per_unit"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="townhome_own" submodel_id="4" type="submodel">
            <description type="string">townhome_own</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_land_per_unit"/>
              <variable_spec name="building.sqft_per_unit"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="hotel" submodel_id="7" type="submodel">
            <description type="string">hotel</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.hotel_sqft"/>
              <variable_spec name="building.travel_time_to_waikiki"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial_repair" submodel_id="8" type="submodel">
            <description type="string">industrial_repair</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.jobs3_foodprocess"/>
              <variable_spec name="building.land_per_nonres_sqft"/>
              <variable_spec name="building.ln_jobs_within_15_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial_manufacture" submodel_id="9" type="submodel">
            <description type="string">industrial_manufacture</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_pop_10_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial_research" submodel_id="10" type="submodel">
            <description type="string">industrial_research"</description>
            <variable_list type="variable_list">
              <variable_spec name="building.cbd_time"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial_entertainment" submodel_id="11" type="submodel">
            <description type="string">industrial_entertainment</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_pop_10_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial_residential_mix" submodel_id="12" type="submodel">
            <description type="string">industrial_residential_mix</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_jobs_in_zone"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="utility_with_jobs" submodel_id="13" type="submodel">
            <description type="string">utility_with_jobs</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="warehouse_shipping" submodel_id="15" type="submodel">
            <description type="string">warehouse_shipping</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="warehouse_residential_mix" submodel_id="16" type="submodel">
            <description type="string">warehouse_residential_mix</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_inv_far"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="transportation" submodel_id="18" type="submodel">
            <description type="string">transportation</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_inv_far"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="neighborhood_retail" submodel_id="19" type="submodel">
            <description type="string">neighborhood_retail</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.jobs9_retail"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="regional_retail" submodel_id="20" type="submodel">
            <description type="string">regional_retail</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.jobs9_retail"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="retail_residential_mix" submodel_id="21" type="submodel">
            <description type="string">retail_residential_mix</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_inv_far"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="office" submodel_id="22" type="submodel">
            <description type="string">office</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.jobs10_finance"/>
              <variable_spec name="building.ln_job_density_zone"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="office_residential_mix" submodel_id="23" type="submodel">
            <description type="string">office_residential_mix</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="service_shops_supplies" submodel_id="24" type="submodel">
            <description type="string">service_shops_supplies</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income_zonal"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="service_shops_residential" submodel_id="25" type="submodel">
            <description type="string">service_shops_residential</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="outdoor_leisure_jobs" submodel_id="27" type="submodel">
            <description type="string">outdoor_leisure_nojobs</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_pop_10_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="community_facility" submodel_id="28" type="submodel">
            <description type="string">community_facility</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_inv_far"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_pop_10_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="classroom" submodel_id="29" type="submodel">
            <description type="string">classroom</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.households_in_zone"/>
              <variable_spec name="building.ln_pop_10_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="hospital" submodel_id="30" type="submodel">
            <description type="string">hospital</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.jobs15_health"/>
              <variable_spec name="building.ln_jobs_within_15_min"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
    </models>
    <templates hidden="True" name="Model Templates" parser_action="skip"/>
    <estimation_config config_name="estimation_config" name="Estimation Configuration" type="configuration">
      <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
        <selectable name="building" type="selectable">True</selectable>
        <selectable name="household" type="selectable">True</selectable>
        <selectable name="job" type="selectable">True</selectable>
        <selectable name="parcel" type="selectable">True</selectable>
        <selectable name="submarket" type="selectable">True</selectable>
        <selectable name="node" type="selectable">False</selectable>
        <selectable name="residential_building_type" type="selectable">True</selectable>
      </datasets_to_preload>
      <save_estimation_results type="boolean">True</save_estimation_results>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory" field_identifier="Cache Directory" field_description="Directory for base_year cache, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/base_year_data">honolulu_parcel/base_year_data</cache_directory>
      <estimation_database_configuration type="class">
        <class_name hidden="True" type="string">EstimationDatabaseConfiguration</class_name>
        <class_module hidden="True" type="string">opus_core.database_management.configurations.estimation_database_configuration</class_module>
        <argument name="database_name" type="string">seattle_2000_parcel_baseyear_data</argument>
      </estimation_database_configuration>
      <dataset_pool_configuration type="class">
        <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
        <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
        <argument name="package_order" type="list">['honolulu_parcel','urbansim_parcel', 'urbansim', 'opus_core']</argument>
      </dataset_pool_configuration>
      <datasets_to_cache_after_each_model type="list">[]</datasets_to_cache_after_each_model>
      <low_memory_mode type="boolean">False</low_memory_mode>
      <base_year type="integer" field_identifier="Base Year">2000</base_year>
      <years type="tuple">
        <firstyear type="integer" field_identifier="Base Year">2000</firstyear>
        <lastyear type="integer" field_identifier="Base Year">2000</lastyear>
      </years>
    </estimation_config>
  </model_manager>
  <scenario_manager>
    <scenario executable="True" name="Baseline" type="scenario">
      <parent type="scenario_name">urbansim_parcel_baseline</parent>
      <base_year type="integer">2000</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2001</firstyear>
        <lastyear type="integer">2001</lastyear>
      </years_to_run>
      <models_to_run config_name="models" type="selectable_list">
        <selectable name="household_transition_model" type="model_choice">False</selectable>
        <selectable name="household_relocation_model" type="model_choice">False</selectable>
        <selectable return_value="submarket_household_location_choice_model" type="selectable" name="submarket_household_location_choice_model_1">False</selectable>
        <selectable return_value="submarket_household_location_choice_model_no_submodel" type="selectable" name="submarket_household_location_choice_model_no_submodel_1">False</selectable>
        <selectable name="submarket_household_location_choice_model_no_submodel" type="model_choice">False</selectable>
        <selectable return_value="developer_model" type="selectable" name="developer_model_1">False</selectable>
        <selectable return_value="submarket_household_location_choice_model_owner2" type="selectable" name="submarket_household_location_choice_model_owner2_1">False</selectable>
        <selectable return_value="submarket_household_location_choice_model_renter2" type="selectable" name="submarket_household_location_choice_model_renter2_1">False</selectable>
        <selectable return_value="emp_transition_model" type="selectable" name="emp_transition_model_1">False</selectable>
        <selectable return_value="employment_relocation_model" type="selectable" name="employment_relocation_model_1">False</selectable>
        <selectable name="employment_location_choice_model" type="model_choice">False<group_members type="string">_all_</group_members>
        </selectable>
        <selectable return_value="test_model" type="selectable" name="test_model_1">False</selectable>
        <selectable return_value="household_allocation_to_building_model" type="selectable" name="household_allocation_to_building_model_1">False</selectable>
        <selectable return_value="job_allocation_to_building_model" type="selectable" name="job_allocation_to_building_model_1">False</selectable>
        <selectable return_value="building_transition_model2" type="selectable" name="building_transition_model_1">False</selectable>
        <selectable return_value="price_model" type="selectable" name="price_model_1">False</selectable>
        <selectable return_value="SC_building_transition_model" type="selectable" name="SC_building_transition_model_1">True</selectable>
      </models_to_run>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory">honolulu_parcel/base_year_data</cache_directory>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfiguration</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">honolulu_parcel/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">honolulu_parcel/base_year_data</argument>
        </argument>
        <argument hidden="True" name="unroll_gridcells" type="boolean">False</argument>
        <argument name="advanced" type="category">
          <baseyear_database_configuration config_name="scenario_database_configuration" type="class">
            <class_name hidden="True" type="string">ScenarioDatabaseConfiguration</class_name>
            <class_module hidden="True" type="string">opus_core.database_management.configurations.scenario_database_configuration</class_module>
            <argument name="database_name" type="string">seattle_2000_parcel_baseyear_data</argument>
          </baseyear_database_configuration>
          <cache_from_database type="boolean">False</cache_from_database>
          <cache_scenario_database type="string">urbansim.model_coordinators.cache_scenario_database</cache_scenario_database>
          <tables_to_cache type="selectable_list">
            <selectable name="annual_employment_control_totals" type="selectable">False</selectable>
            <selectable name="annual_household_control_totals" type="selectable">False</selectable>
            <selectable name="annual_relocation_rates_for_households" type="selectable">False</selectable>
            <selectable name="annual_relocation_rates_for_jobs" type="selectable">False</selectable>
            <selectable name="building_sqft_per_job" type="selectable">False</selectable>
            <selectable name="building_types" type="selectable">True</selectable>
            <selectable name="buildings" type="selectable">True</selectable>
            <selectable name="cities" type="selectable">False</selectable>
            <selectable name="constant_taz_columns" type="selectable">False</selectable>
            <selectable name="counties" type="selectable">False</selectable>
            <selectable name="demolition_cost_per_sqft" type="selectable">False</selectable>
            <selectable name="development_constraints" type="selectable">False</selectable>
            <selectable name="development_template_components" type="selectable">False</selectable>
            <selectable name="development_templates" type="selectable">False</selectable>
            <selectable name="employment_adhoc_sector_group_definitions" type="selectable">False</selectable>
            <selectable name="employment_adhoc_sector_groups" type="selectable">False</selectable>
            <selectable name="employment_sectors" type="selectable">False</selectable>
            <selectable name="fazes" type="selectable">False</selectable>
            <selectable name="generic_land_use_types" type="selectable">False</selectable>
            <selectable name="gridcells" type="selectable">False</selectable>
            <selectable name="home_based_employment_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="home_based_employment_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="household_characteristics_for_ht" type="selectable">False</selectable>
            <selectable name="household_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="household_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="households" type="selectable">False</selectable>
            <selectable name="households_for_estimation" type="selectable">False</selectable>
            <selectable name="job_building_types" type="selectable">False</selectable>
            <selectable name="jobs" type="selectable">False</selectable>
            <selectable name="jobs_for_estimation" type="selectable">False</selectable>
            <selectable name="land_use_types" type="selectable">False</selectable>
            <selectable name="non_home_based_employment_location_choice_model_coefficients" type="selectable">False</selectable>
            <selectable name="non_home_based_employment_location_choice_model_specification" type="selectable">False</selectable>
            <selectable name="parcels" type="selectable">True</selectable>
            <selectable name="persons" type="selectable">False</selectable>
            <selectable name="real_estate_price_model_coefficients" type="selectable">False</selectable>
            <selectable name="real_estate_price_model_specification" type="selectable">False</selectable>
            <selectable name="target_vacancies" type="selectable">True</selectable>
            <selectable name="urbansim_constants" type="selectable">False</selectable>
            <selectable name="zones" type="selectable">False</selectable>
            <selectable name="nodes" type="selectable">False</selectable>
            <selectable name="residential_units" type="selectable">False</selectable>
          </tables_to_cache>
          <tables_to_cache_nchunks type="dictionary">
            <parcels type="integer">1</parcels>
          </tables_to_cache_nchunks>
        </argument>
      </creating_baseyear_cache_configuration>
      <advanced type="category">
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">[ 'honolulu_parcel','urbansim_parcel','urbansim', 'opus_core','psrc_parcel']</argument>
        </dataset_pool_configuration>
        <flush_dataset_to_cache_after_each_model type="boolean">False</flush_dataset_to_cache_after_each_model>
        <flush_variables type="boolean">False</flush_variables>
        <low_memory_run type="boolean">False</low_memory_run>
        <datasets_to_cache_after_each_model type="list">['parcel', 'building', 'household', 'job', 'development_project_proposal_component', 'development_project_proposal','node','residential_unit']</datasets_to_cache_after_each_model>
        <unroll_gridcells hidden="True" type="boolean">False</unroll_gridcells>
        <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
          <selectable name="zone" type="selectable">False</selectable>
          <selectable name="household" type="selectable">False</selectable>
          <selectable name="building" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">True</selectable>
          <selectable name="parcel" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="person" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template_component" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="job" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="submarket" type="selectable">True</selectable>
          <selectable name="development_event_history" type="selectable">True</selectable>
          <selectable name="target_vacancy" type="selectable">True</selectable>
        </datasets_to_preload>
      </advanced>
    </scenario>
  </scenario_manager>
  <results_manager>
    <indicator_batches name="Indicator Batches" setexpanded="True" type="group">
      <indicator_batch name="untitled_indicator_batch">
        <batch_visualization hidden="Children" type="batch_visualization" name="New visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['inner_outer_area']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
      </indicator_batch>
    </indicator_batches>
  </results_manager>
</opus_project>

