<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <description type="string">Base UrbanSim Gridcell Project</description>
    <project_name hidden="True" type="string">urbansim_gridcell</project_name>
    <parent type="file">urbansim/configs/urbansim.xml</parent>
    <expression_library type="dictionary">
      <variable name="zone.number_of_jobs" source="Python class" type="variable_definition" use="both">urbansim.zone.number_of_jobs</variable>
      <variable name="gridcell.population" source="Python class" type="variable_definition" use="both">urbansim.gridcell.population</variable>
      <variable name="gridcell.population_density" source="Python class" type="variable_definition" use="both">urbansim.gridcell.population_density</variable>
      <variable name="gridcell.ln_du" source="expression" type="variable_definition" use="model variable">ln(gridcell.residential_units)</variable>
      <variable name="gridcell.ln_duw" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.ln_residential_units_within_walking_distance</variable>
      <variable name="gridcell.pcthiwa" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.percent_high_income_households_within_walking_distance</variable>
      <variable name="gridcell.wetland" source="expression" type="variable_definition" use="model variable">gridcell.percent_wetland&gt;50</variable>
      <variable name="gridcell.cbdtrvl" source="Python class" type="variable_definition" use="model variable">eugene.gridcell.travel_time_hbw_am_drive_alone_to_220</variable>
      <variable name="gridcell.ln_impval" source="expression" type="variable_definition" use="model variable">ln(urbansim.gridcell.total_improvement_value)</variable>
      <variable name="gridcell.pctdevwal" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.percent_developed_within_walking_distance</variable>
      <variable name="gridcell.ln_hwy" source="expression" type="variable_definition" use="model variable">ln(gridcell.distance_to_highway)</variable>
      <variable name="gridcell.flood" source="expression" type="variable_definition" use="model variable">gridcell.percent_floodplain&gt;50</variable>
      <variable name="gridcell.hwy600" source="expression" type="variable_definition" use="model variable">gridcell.distance_to_highway&lt;600</variable>
      <variable name="gridcell.hwy300" source="expression" type="variable_definition" use="model variable">gridcell.distance_to_highway&lt;300</variable>
      <variable name="gridcell.land_value" source="expression" type="variable_definition" use="indicator">gridcell.residential_land_value+gridcell.nonresidential_land_value</variable>
      <variable name="gridcell.ble_rew" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.ln_retail_sector_employment_within_walking_distance</variable>
      <variable name="job_x_gridcell.ble_saw" source="Python class" type="variable_definition" use="model variable">urbansim.job_x_gridcell.ln_same_sector_employment_within_walking_distance</variable>
      <variable name="household_x_gridcell.ctir" source="Python class" type="variable_definition" use="model variable">urbansim.household_x_gridcell.cost_to_income_ratio</variable>
      <variable name="gridcell.bpliw" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.percent_low_income_households_within_walking_distance</variable>
      <variable name="gridcell.hwy" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.is_near_highway</variable>
      <variable name="gridcell.ldevsfi" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.ln_developable_industrial_sqft_capacity</variable>
      <variable name="gridcell.sfc_0" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.has_0_commercial_sqft</variable>
      <variable name="gridcell.bltv" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.ln_total_value</variable>
      <variable name="gridcell.bldhw" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.ln_distance_to_highway</variable>
      <variable name="gridcell.bltlv" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.ln_total_land_value</variable>
      <variable name="household_x_gridcell.plihwwdihi" source="Python class" type="variable_definition" use="model variable">urbansim.household_x_gridcell.percent_low_income_households_within_walking_distance_if_high_income</variable>
      <variable name="household_x_gridcell.ruwhhc" source="Python class" type="variable_definition" use="model variable">urbansim.household_x_gridcell.residential_units_when_household_has_children</variable>
      <variable name="gridcell.bpmiw" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.percent_mid_income_households_within_walking_distance</variable>
      <variable name="gridcell.blnrsfw" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.ln_total_nonresidential_sqft_within_walking_distance</variable>
      <variable name="household_x_gridcell.yhihdr" source="Python class" type="variable_definition" use="model variable">urbansim.household_x_gridcell.young_household_in_high_density_residential</variable>
      <variable name="gridcell.ldevsfc" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.ln_developable_commercial_sqft_capacity</variable>
      <variable name="household_x_gridcell.iayb" source="Python class" type="variable_definition" use="model variable">urbansim.household_x_gridcell.income_and_year_built</variable>
      <variable name="gridcell.nrs" source="expression" type="variable_definition" use="model variable">ln_bounded(urbansim.gridcell.non_residential_sqft)</variable>
      <variable name="gridcell.bart" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.is_near_arterial</variable>
      <variable name="gridcell.blwap_1" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.ln_work_access_to_population_1</variable>
      <variable name="gridcell.piw" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.percent_industrial_within_walking_distance</variable>
      <variable name="gridcell.ble_sew" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.ln_service_sector_employment_within_walking_distance</variable>
      <variable name="gridcell.prw" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.percent_residential_within_walking_distance</variable>
      <variable name="gridcell.ble_bw" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.ln_basic_sector_employment_within_walking_distance</variable>
      <variable name="household_x_gridcell.pmhwwdim" source="Python class" type="variable_definition" use="model variable">urbansim.household_x_gridcell.percent_minority_households_within_walking_distance_if_minority</variable>
      <variable name="household_x_gridcell.phihwwdili" source="Python class" type="variable_definition" use="model variable">urbansim.household_x_gridcell.percent_high_income_households_within_walking_distance_if_low_income</variable>
      <variable name="gridcell.o_ugb" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.is_outside_urban_growth_boundary</variable>
      <variable name="gridcell.bflood" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.is_in_floodplain</variable>
      <variable name="gridcell.bwet" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.is_in_wetland</variable>
      <variable name="household_x_gridcell.yhimu" source="Python class" type="variable_definition" use="model variable">urbansim.household_x_gridcell.young_household_in_mixed_use</variable>
      <variable name="gridcell.le_w" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.ln_total_employment_within_walking_distance</variable>
      <variable name="gridcell.lru" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.ln_residential_units</variable>
      <variable name="gridcell.blimp" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.ln_total_improvement_value</variable>
      <variable name="gridcell.lsfiw" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.ln_industrial_sqft_within_walking_distance</variable>
      <variable name="gridcell.btt_cbd" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.travel_time_to_CBD</variable>
      <variable name="gridcell.blsfcw" source="Python class" type="variable_definition" use="model variable">urbansim.gridcell.ln_commercial_sqft_within_walking_distance</variable>
    </expression_library>
    <available_datasets type="list">['gridcell','zone','faz','large_area','city','county','alldata']</available_datasets>
    <spatial_datasets type="list">['zone','faz','large_area','gridcell','city','county']</spatial_datasets>
    <dataset_pool_configuration type="class">
      <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
      <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
      <argument name="package_order" type="list">['urbansim', 'opus_core']</argument>
    </dataset_pool_configuration>
  </general>
  <model_manager>
    <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model name="prescheduled_events" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.process_prescheduled_development_events</class_module>
            <class_name>ProcessPrescheduledDevelopmentEvents</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">ProcessPrescheduledDevelopmentEvents</name>
          </init>
          <run type="dictionary">
            <output name="output" type="string">development_events</output>
            <argument name="storage" type="string">base_cache_storage</argument>
          </run>
        </structure>
      </model>
      <model name="events_coordinator" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.events_coordinator_and_storing</class_module>
            <class_name>EventsCoordinatorAndStoring</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">EventsCoordinatorAndStoring</name>
          </init>
          <run type="dictionary">
            <output name="output" type="string">(changed_indices, processed_development_event_indices)</output>
            <argument name="development_type_set" type="string">development_type</argument>
            <argument name="location_set" type="string">gridcell</argument>
            <argument name="current_year" type="string">year</argument>
            <argument name="development_event_set" type="string">development_events</argument>
            <argument name="development_models" type="list">['residential_development_project_location_choice_model', 'commercial_development_project_location_choice_model', 'industrial_development_project_location_choice_model']</argument>
            <argument hidden="True" name="models_configuration" type="string">models_configuration</argument>
          </run>
        </structure>
      </model>
      <model name="residential_land_share_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument convert_blank_to_none="True" name="index" type="string">changed_indices</argument>
            <argument name="specification" type="string">specification</argument>
            <argument convert_blank_to_none="True" name="dataset" type="string">gridcell</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <name name="name" type="string">ResidentialLandShareModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.residential_land_share_model</class_module>
            <class_name>ResidentialLandShareModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument convert_blank_to_none="True" name="index" type="string">index</argument>
            <argument name="specification" type="string">specification</argument>
            <argument convert_blank_to_none="True" name="dataset" type="string">gridcell</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="procedure" type="string">'opus_core.estimate_linear_regression'</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <name name="name" type="string">prepare_for_run</name>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" type="string">'residential_land_share_model_coefficients'</argument>
            <argument name="specification_table" type="string">'residential_land_share_model_specification'</argument>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <name name="name" type="string">prepare_for_estimate</name>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" type="string">'residential_land_share_model_specification'</argument>
            <argument convert_blank_to_none="True" name="dataset" type="string">gridcell</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No description</description>
            <variable_list type="variable_list">
              <variable_spec name="gridcell.nrs"/>
              <variable_spec name="gridcell.lru"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="land_price_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument convert_blank_to_none="True" name="chunk_specification" type="string">{'nchunks':1}</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument convert_blank_to_none="True" name="dataset" type="string">gridcell</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="n_simulated_years" type="string">year-base_year</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <name name="name" type="string">CorrectedLandPriceModel</name>
            <argument convert_blank_to_none="True" name="filter" type="string">'urbansim.gridcell.is_in_development_type_group_developable'</argument>
            <argument convert_blank_to_none="True" name="estimate_config" type="string"/>
            <argument convert_blank_to_none="True" name="run_config" type="string"/>
            <argument convert_blank_to_none="True" name="submodel_string" type="string">'development_type_id'</argument>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.corrected_land_price_model</class_module>
            <class_name>CorrectedLandPriceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument convert_blank_to_none="True" name="index" type="string">index</argument>
            <argument name="specification" type="string">specification</argument>
            <argument convert_blank_to_none="True" name="dataset" type="string">gridcell</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="procedure" type="string">'opus_core.estimate_linear_regression'</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <name name="name" type="string">prepare_for_run</name>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" type="string">'land_price_model_coefficients'</argument>
            <argument name="specification_table" type="string">'land_price_model_specification'</argument>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <name name="name" type="string">prepare_for_estimate</name>
            <argument name="threshold" type="integer">1000</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" type="string">'land_price_model_specification'</argument>
            <argument name="filter_variable" type="string">'urbansim.gridcell.total_land_value'</argument>
            <argument convert_blank_to_none="True" name="dataset" type="string">gridcell</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No description</description>
            <variable_list type="variable_list">
              <variable_spec name="gridcell.pcthiwa"/>
              <variable_spec name="gridcell.ln_duw"/>
              <variable_spec name="gridcell.lru"/>
              <variable_spec name="gridcell.bwet"/>
              <variable_spec name="gridcell.cbdtrvl"/>
              <variable_spec name="gridcell.ln_impval"/>
              <variable_spec name="gridcell.bflood"/>
              <variable_spec name="gridcell.bldhw"/>
              <variable_spec name="gridcell.hwy"/>
              <variable_spec name="gridcell.pctdevwal"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="development_project_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.development_project_transition_model</class_module>
            <class_name>DevelopmentProjectTransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">DevelopmentProjectTransitionModel</name>
            <argument name="debuglevel" type="integer">4</argument>
          </init>
          <run type="dictionary">
            <output name="output" type="string">dptm_results</output>
            <argument name="development_models" type="list">['residential_development_project_location_choice_model', 'commercial_development_project_location_choice_model', 'industrial_development_project_location_choice_model']</argument>
            <argument hidden="True" name="models_configuration" type="string">models_configuration</argument>
            <argument name="vacancy_table" type="string">target_vacancy</argument>
            <argument name="location_set" type="string">gridcell</argument>
            <argument name="year" type="string">year</argument>
            <argument name="history_table" type="string">development_event_history</argument>
            <argument convert_blank_to_none="True" name="resources" type="string"/>
          </run>
        </structure>
      </model>
      <model name="residential_development_project_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">['land_price_model']</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument convert_blank_to_none="True" name="chunk_specification" type="string">{'records_per_chunk':300}</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">dptm_results['residential']</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <name name="name" type="string">DevelopmentProjectLocationChoiceModelCreator().get_model</name>
            <argument convert_blank_to_none="True" name="submodel_string" type="string">'size_category'</argument>
            <argument name="location_set" type="string">gridcell</argument>
            <argument name="project_type" type="string">'residential'</argument>
            <argument name="developable_maximum_unit_variable_full_name" parser_action="quote_string" type="string">urbansim.gridcell.developable_maximum_residential_units</argument>
            <argument name="developable_minimum_unit_variable_full_name" parser_action="quote_string" type="string">urbansim.gridcell.developable_minimum_residential_units</argument>
            <argument name="residential" type="boolean">True</argument>
            <argument name="units" type="string">'residential_units'</argument>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.development_project_location_choice_model_creator</class_module>
            <class_name>DevelopmentProjectLocationChoiceModelCreator</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">projects</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <name name="name" type="string">prepare_for_run</name>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" type="string">'residential_development_location_choice_model_coefficients'</argument>
            <argument name="specification_table" type="string">'residential_development_location_choice_model_specification'</argument>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, projects)</output>
            <name name="name" type="string">prepare_for_estimate</name>
            <argument name="events_for_estimation_table" type="string">'development_event_history'</argument>
            <argument name="specification_table" type="string">'residential_development_location_choice_model_specification'</argument>
            <argument name="urbansim_constant" type="string">urbansim_constant</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="events_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="base_year" type="string">resources['base_year']</argument>
            <argument name="categories" type="list">[1, 2, 3, 5, 10, 20]</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="1" type="submodel">
            <description type="string">Residential</description>
            <variable_list type="variable_list">
              <variable_spec name="gridcell.btt_cbd"/>
              <variable_spec name="gridcell.o_ugb"/>
              <variable_spec name="gridcell.sfc_0"/>
              <variable_spec name="gridcell.le_w"/>
              <variable_spec name="gridcell.prw"/>
              <variable_spec name="gridcell.blimp"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="commercial_development_project_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">['land_price_model']</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument convert_blank_to_none="True" name="chunk_specification" type="string">{'records_per_chunk':300}</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">dptm_results['commercial']</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <name name="name" type="string">DevelopmentProjectLocationChoiceModelCreator().get_model</name>
            <argument convert_blank_to_none="True" name="submodel_string" type="string">'size_category'</argument>
            <argument name="location_set" type="string">gridcell</argument>
            <argument name="project_type" type="string">'commercial'</argument>
            <argument name="developable_maximum_unit_variable_full_name" parser_action="quote_string" type="string">urbansim.gridcell.developable_maximum_commercial_sqft</argument>
            <argument name="developable_minimum_unit_variable_full_name" parser_action="quote_string" type="string">urbansim.gridcell.developable_minimum_commercial_sqft</argument>
            <argument name="residential" type="boolean">False</argument>
            <argument name="units" type="string">'commercial_sqft'</argument>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.development_project_location_choice_model_creator</class_module>
            <class_name>DevelopmentProjectLocationChoiceModelCreator</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">projects</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <name name="name" type="string">prepare_for_run</name>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" type="string">'commercial_development_location_choice_model_coefficients'</argument>
            <argument name="specification_table" type="string">'commercial_development_location_choice_model_specification'</argument>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, projects)</output>
            <name name="name" type="string">prepare_for_estimate</name>
            <argument name="events_for_estimation_table" type="string">'development_event_history'</argument>
            <argument name="specification_table" type="string">'commercial_development_location_choice_model_specification'</argument>
            <argument name="urbansim_constant" type="string">urbansim_constant</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="events_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="base_year" type="string">resources['base_year']</argument>
            <argument name="categories" type="list">[1000, 2000, 5000, 10000]</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">Commercial</description>
            <variable_list type="variable_list">
              <variable_spec name="gridcell.blwap_1"/>
              <variable_spec name="gridcell.btt_cbd"/>
              <variable_spec name="gridcell.bart"/>
              <variable_spec name="gridcell.o_ugb"/>
              <variable_spec name="gridcell.ldevsfc"/>
              <variable_spec name="gridcell.le_w"/>
              <variable_spec name="gridcell.prw"/>
              <variable_spec name="gridcell.bltlv"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="industrial_development_project_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">['land_price_model']</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument convert_blank_to_none="True" name="chunk_specification" type="string">{'records_per_chunk':300}</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">dptm_results['industrial']</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <name name="name" type="string">DevelopmentProjectLocationChoiceModelCreator().get_model</name>
            <argument convert_blank_to_none="True" name="submodel_string" type="string">'size_category'</argument>
            <argument name="location_set" type="string">gridcell</argument>
            <argument name="project_type" type="string">'industrial'</argument>
            <argument name="developable_maximum_unit_variable_full_name" parser_action="quote_string" type="string">urbansim.gridcell.developable_maximum_industrial_sqft</argument>
            <argument name="developable_minimum_unit_variable_full_name" parser_action="quote_string" type="string">urbansim.gridcell.developable_minimum_industrial_sqft</argument>
            <argument name="residential" type="boolean">False</argument>
            <argument name="units" type="string">'industrial_sqft'</argument>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.development_project_location_choice_model_creator</class_module>
            <class_name>DevelopmentProjectLocationChoiceModelCreator</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">projects</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <name name="name" type="string">prepare_for_run</name>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" type="string">'industrial_development_location_choice_model_coefficients'</argument>
            <argument name="specification_table" type="string">'industrial_development_location_choice_model_specification'</argument>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, projects)</output>
            <name name="name" type="string">prepare_for_estimate</name>
            <argument name="events_for_estimation_table" type="string">'development_event_history'</argument>
            <argument name="specification_table" type="string">'industrial_development_location_choice_model_specification'</argument>
            <argument name="urbansim_constant" type="string">urbansim_constant</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="events_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="base_year" type="string">resources['base_year']</argument>
            <argument name="categories" type="string">[1000, 2000, 5000, 10000]</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="1" type="submodel">
            <description type="string">Industrial</description>
            <variable_list type="variable_list">
              <variable_spec name="gridcell.ldevsfi"/>
              <variable_spec name="gridcell.piw"/>
              <variable_spec name="gridcell.lsfiw"/>
              <variable_spec name="gridcell.ln_duw"/>
              <variable_spec name="gridcell.bltv"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="development_event_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.development_event_transition_model</class_module>
            <class_name>DevelopmentEventTransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">DevelopmentEventTransitionModel</name>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(all_project_types, all_project_units)</output>
            <name name="name" type="string">prepare_for_run</name>
            <argument name="dev_projects" type="string">dptm_results</argument>
            <argument name="development_models" type="list">['residential_development_project_location_choice_model', 'commercial_development_project_location_choice_model', 'industrial_development_project_location_choice_model']</argument>
            <argument name="models_configuration" type="string">models_configuration</argument>
          </prepare_for_run>
          <run type="dictionary">
            <output name="output" type="string">development_events</output>
            <argument name="units" type="string">all_project_units</argument>
            <argument name="year" type="string">year</argument>
            <argument name="types" type="string">all_project_types</argument>
            <argument name="projects" type="string">dptm_results</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </run>
        </structure>
      </model>
      <model name="household_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_transition_model</class_module>
            <class_name>HouseholdTransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">HouseholdTransitionModel</name>
            <argument name="location_id_name" type="string">'grid_id'</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(control_totals, characteristics)</output>
            <name name="name" type="string">prepare_for_run</name>
            <argument name="storage" type="string">base_cache_storage</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="characteristics" type="string">characteristics</argument>
            <argument name="household_set" type="string">household</argument>
            <argument convert_blank_to_none="True" name="control_totals" type="string">control_totals</argument>
            <argument name="year" type="string">year</argument>
          </run>
        </structure>
      </model>
      <model name="employment_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.employment_transition_model</class_module>
            <class_name>EmploymentTransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">EmploymentTransitionModel</name>
            <argument name="location_id_name" type="string">'grid_id'</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">control_totals</output>
            <name name="name" type="string">prepare_for_run</name>
            <argument name="storage" type="string">base_cache_storage</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="job_building_types" type="string">job_building_type</argument>
            <argument name="job_set" type="string">job</argument>
            <argument convert_blank_to_none="True" name="control_totals" type="string">control_totals</argument>
            <argument name="year" type="string">year</argument>
          </run>
        </structure>
      </model>
      <model name="household_relocation_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_relocation_model_creator</class_module>
            <class_name>HouseholdRelocationModelCreator</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">HouseholdRelocationModelCreator().get_model</name>
            <argument convert_blank_to_none="True" name="probabilities" type="string">'urbansim.household_relocation_probabilities'</argument>
            <argument name="location_id_name" type="string">'grid_id'</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">hrm_resources</output>
            <name name="name" type="string">prepare_for_run</name>
            <argument name="rate_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="rate_table" type="string">'annual_relocation_rates_for_households'</argument>
            <argument name="what" type="string">'households'</argument>
          </prepare_for_run>
          <run type="dictionary">
            <output name="output" type="string">hrm_index</output>
            <argument name="resources" type="string">hrm_resources</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">household</argument>
          </run>
        </structure>
      </model>
      <model name="household_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">['household_relocation_model']</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument convert_blank_to_none="True" name="chunk_specification" type="string">{'nchunks':12}</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">hrm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
            <argument convert_blank_to_none="True" name="number_of_units_string" parser_action="quote_string" type="string">residential_units</argument>
            <argument name="variable_package" type="string">'urbansim'</argument>
            <argument convert_blank_to_none="True" name="location_id_string" type="string"/>
            <argument convert_blank_to_none="True" name="submodel_string" type="string"/>
            <argument convert_blank_to_none="True" name="capacity_string" parser_action="quote_string" type="string">vacant_residential_units</argument>
            <argument convert_blank_to_none="True" name="estimation_weight_string" parser_action="quote_string" type="string">residential_units</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" type="string">'urbansim.lottery_choices'</argument>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument convert_blank_to_none="True" name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument convert_blank_to_none="True" name="run_config" type="string">Resources({'lottery_max_iterations': 3, })</argument>
            <argument name="location_set" type="string">gridcell</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string"/>
            <argument convert_blank_to_none="True" name="sampler" type="string">'opus_core.samplers.weighted_sampler'</argument>
            <argument convert_blank_to_none="True" name="simulation_weight_string" type="string"/>
            <argument name="estimation" type="string">'opus_core.bhhh_mnl_estimation'</argument>
            <argument name="sample_size_locations" type="integer">30</argument>
            <argument convert_blank_to_none="True" name="estimate_config" type="string">Resources({})</argument>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <name name="name" type="string">prepare_for_run</name>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" type="string">'household_location_choice_model_coefficients'</argument>
            <argument name="specification_table" type="string">'household_location_choice_model_specification'</argument>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <name name="name" type="string">prepare_for_estimate</name>
            <argument name="portion_to_unplace" type="float">0.08333333333</argument>
            <argument name="specification_table" type="string">'household_location_choice_model_specification'</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">household</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string">hrm_index</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="join_datasets" type="string">True</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" type="string">'households_for_estimation'</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No description</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_gridcell.ruwhhc"/>
              <variable_spec name="household_x_gridcell.pmhwwdim"/>
              <variable_spec name="household_x_gridcell.yhimu"/>
              <variable_spec name="household_x_gridcell.yhihdr"/>
              <variable_spec name="household_x_gridcell.plihwwdihi"/>
              <variable_spec name="household_x_gridcell.phihwwdili"/>
              <variable_spec name="household_x_gridcell.iayb"/>
              <variable_spec name="household_x_gridcell.ctir"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="employment_relocation_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.employment_relocation_model_creator</class_module>
            <class_name>EmploymentRelocationModelCreator</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">EmploymentRelocationModelCreator().get_model</name>
            <argument convert_blank_to_none="True" name="probabilities" type="string">'urbansim.employment_relocation_probabilities'</argument>
            <argument name="location_id_name" type="string">'grid_id'</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">erm_resources</output>
            <name name="name" type="string">prepare_for_run</name>
            <argument name="rate_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="rate_table" type="string">'annual_relocation_rates_for_jobs'</argument>
            <argument name="what" type="string">'jobs'</argument>
          </prepare_for_run>
          <run type="dictionary">
            <output name="output" type="string">erm_index</output>
            <argument name="resources" type="string">erm_resources</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">job</argument>
          </run>
        </structure>
      </model>
      <model name="employment_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <group_by_attribute type="tuple">
            <argument name="grouping_table" type="string">job_building_type</argument>
            <argument name="grouping_column" type="string">name</argument>
          </group_by_attribute>
          <run type="dictionary">
            <argument convert_blank_to_none="True" name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">job</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">erm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <name name="name" type="string">EmploymentLocationChoiceModel</name>
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string">'total_number_of_possible_SSS_jobs'</argument>
            <argument name="compute_capacity_flag" type="boolean">True</argument>
            <argument convert_blank_to_none="True" name="capacity_string" type="string">'vacant_SSS_job_space'</argument>
            <argument convert_blank_to_none="True" name="estimation_weight_string" type="string">'total_number_of_possible_SSS_jobs'</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" type="string">'urbansim.lottery_choices'</argument>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="variable_package" type="string">'urbansim'</argument>
            <argument convert_blank_to_none="True" name="run_config" type="dictionary">
              <key name="lottery_max_iterations" type="integer">3</key>
              <key convert_blank_to_none="True" name="agent_units_string" type="string"/>
            </argument>
            <argument name="location_set" type="string">gridcell</argument>
            <argument name="estimation_size_agents" type="float">1.0</argument>
            <argument convert_blank_to_none="True" name="sampler" type="string">'opus_core.samplers.weighted_sampler'</argument>
            <argument convert_blank_to_none="True" name="simulation_weight_string" type="string"/>
            <argument name="estimation" type="string">'opus_core.bhhh_mnl_estimation'</argument>
            <argument name="sample_size_locations" type="integer">30</argument>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.employment_location_choice_model</class_module>
            <class_name>EmploymentLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">job</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <name name="name" type="string">prepare_for_run</name>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" type="string">'employment_location_choice_model_coefficients'</argument>
            <argument name="specification_table" type="string">'employment_location_choice_model_specification'</argument>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <name name="name" type="string">prepare_for_estimate</name>
            <argument name="portion_to_unplace" type="float">0.08333333333</argument>
            <argument name="specification_table" type="string">'employment_location_choice_model_specification'</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">job</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" type="string">'jobs_for_estimation'</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="join_datasets" type="boolean">False</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel_group name="industrial" type="submodel_group">
            <submodel hidden="Children" name="Lumber and Wood" submodel_id="1" type="submodel">
              <description type="string">No description</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_gridcell.ble_saw"/>
                <variable_spec name="gridcell.ble_sew"/>
                <variable_spec name="gridcell.ble_rew"/>
                <variable_spec name="gridcell.blnrsfw"/>
                <variable_spec name="gridcell.bltv"/>
                <variable_spec name="gridcell.bart"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Other Durable" submodel_id="2" type="submodel">
              <description type="string">No description</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_gridcell.ble_saw"/>
                <variable_spec name="gridcell.ble_sew"/>
                <variable_spec name="gridcell.ble_rew"/>
                <variable_spec name="gridcell.blnrsfw"/>
                <variable_spec name="gridcell.bltv"/>
                <variable_spec name="gridcell.bart"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Food Products" submodel_id="3" type="submodel">
              <description type="string">No description</description>
              <variable_list type="variable_list">
                <variable_spec name="gridcell.ble_rew"/>
                <variable_spec name="gridcell.bltv"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Other Nondurable" submodel_id="4" type="submodel">
              <description type="string">No description</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_gridcell.ble_saw"/>
                <variable_spec name="gridcell.ble_sew"/>
                <variable_spec name="gridcell.ble_rew"/>
                <variable_spec name="gridcell.blnrsfw"/>
                <variable_spec name="gridcell.bltv"/>
                <variable_spec name="gridcell.bart"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Construction" submodel_id="5" type="submodel">
              <description type="string">No description</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_gridcell.ble_saw"/>
                <variable_spec name="gridcell.ble_sew"/>
                <variable_spec name="gridcell.blnrsfw"/>
                <variable_spec name="gridcell.bltv"/>
                <variable_spec name="gridcell.bart"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Mining" submodel_id="6" type="submodel">
              <description type="string">No description</description>
              <variable_list type="variable_list">
                <variable_spec name="gridcell.ble_sew"/>
                <variable_spec name="gridcell.blnrsfw"/>
                <variable_spec name="gridcell.bltv"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Transportation" submodel_id="7" type="submodel">
              <description type="string">No description</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_gridcell.ble_saw"/>
                <variable_spec name="gridcell.ble_sew"/>
                <variable_spec name="gridcell.blnrsfw"/>
                <variable_spec name="gridcell.bltv"/>
                <variable_spec name="gridcell.bart"/>
              </variable_list>
            </submodel>
          </submodel_group>
          <submodel_group name="commercial" type="submodel_group">
            <submodel hidden="Children" name="Lumber and Wood" submodel_id="1" type="submodel">
              <description type="string">No description</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_gridcell.ble_saw"/>
                <variable_spec name="gridcell.ble_sew"/>
                <variable_spec name="gridcell.ble_rew"/>
                <variable_spec name="gridcell.blnrsfw"/>
                <variable_spec name="gridcell.bltv"/>
                <variable_spec name="gridcell.bart"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Other Durable" submodel_id="2" type="submodel">
              <description type="string">No description</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_gridcell.ble_saw"/>
                <variable_spec name="gridcell.ble_rew"/>
                <variable_spec name="gridcell.ble_bw"/>
                <variable_spec name="gridcell.blwap_1"/>
                <variable_spec name="gridcell.blnrsfw"/>
                <variable_spec name="gridcell.blsfcw"/>
                <variable_spec name="gridcell.bltv"/>
                <variable_spec name="gridcell.bart"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Food Products" submodel_id="3" type="submodel">
              <description type="string">No description</description>
              <variable_list type="variable_list">
                <variable_spec name="gridcell.ble_rew"/>
                <variable_spec name="gridcell.bltv"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Other Nondurable" submodel_id="4" type="submodel">
              <description type="string">No description</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_gridcell.ble_saw"/>
                <variable_spec name="gridcell.ble_rew"/>
                <variable_spec name="gridcell.ble_bw"/>
                <variable_spec name="gridcell.blwap_1"/>
                <variable_spec name="gridcell.blnrsfw"/>
                <variable_spec name="gridcell.blsfcw"/>
                <variable_spec name="gridcell.bart"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Construction" submodel_id="5" type="submodel">
              <description type="string">No description</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_gridcell.ble_saw"/>
                <variable_spec name="gridcell.ble_bw"/>
                <variable_spec name="gridcell.blwap_1"/>
                <variable_spec name="gridcell.blnrsfw"/>
                <variable_spec name="gridcell.blsfcw"/>
                <variable_spec name="gridcell.bltv"/>
                <variable_spec name="gridcell.bhwy"/>
                <variable_spec name="gridcell.bart"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Mining" submodel_id="6" type="submodel">
              <description type="string">No description</description>
              <variable_list type="variable_list">
                <variable_spec name="gridcell.blnrsfw"/>
                <variable_spec name="gridcell.bltv"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Transportation" submodel_id="7" type="submodel">
              <description type="string">No description</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_gridcell.ble_saw"/>
                <variable_spec name="gridcell.blnrsfw"/>
                <variable_spec name="gridcell.bltv"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Wholesale Trade" submodel_id="8" type="submodel">
              <description type="string">No description</description>
              <variable_list type="variable_list">
                <variable_spec name="gridcell.blnrsfw"/>
              </variable_list>
            </submodel>
          </submodel_group>
          <submodel_group name="home_based" type="submodel_group">
            <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
              <description type="string">No description</description>
              <variable_list type="variable_list">
                <variable_spec name="gridcell.btt_cbd"/>
                <variable_spec name="gridcell.ble_sew"/>
                <variable_spec name="gridcell.blwap_1"/>
                <variable_spec name="gridcell.bpmiw"/>
                <variable_spec name="gridcell.bpliw"/>
                <variable_spec name="gridcell.bltlv"/>
              </variable_list>
            </submodel>
          </submodel_group>
        </specification>
      </model>
      <model name="distribute_unplaced_jobs_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.distribute_unplaced_jobs_model</class_module>
            <class_name>DistributeUnplacedJobsModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">DistributeUnplacedJobsModel</name>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </init>
          <run type="dictionary">
            <argument convert_blank_to_none="True" name="agents_filter" type="string"/>
            <argument name="location_set" type="string">gridcell</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">job</argument>
          </run>
        </structure>
      </model>
      <model name="governmental_employment_location_choice_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.scaling_jobs_model</class_module>
            <class_name>ScalingJobsModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">ScalingJobsModel</name>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </init>
          <run type="dictionary">
            <argument convert_blank_to_none="True" name="agents_index" type="string">erm_index</argument>
            <argument name="location_set" type="string">gridcell</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">job</argument>
          </run>
        </structure>
      </model>
      <model name="home_based_employment_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <group_by_attribute type="tuple">('job_building_type', 'name')</group_by_attribute>
          <run type="dictionary">
            <argument convert_blank_to_none="True" name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">job</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">5</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">erm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <name name="name" type="string">EmploymentLocationChoiceModel</name>
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string">'residential_units'</argument>
            <argument convert_blank_to_none="True" name="estimation_weight_string" type="string">'residential_units'</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" type="string">'urbansim.lottery_choices'</argument>
            <argument name="sample_size_locations" type="integer">30</argument>
            <argument name="location_set" type="string">gridcell</argument>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.employment_location_choice_model</class_module>
            <class_name>EmploymentLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">job</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <name name="name" type="string">prepare_for_run</name>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" type="string">'employment_location_choice_model_coefficients'</argument>
            <argument name="specification_table" type="string">'employment_location_choice_model_specification'</argument>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <name name="name" type="string">prepare_for_estimate</name>
            <argument name="portion_to_unplace" type="float">0.08333333333</argument>
            <argument name="specification_table" type="string">'employment_location_choice_model_specification'</argument>
            <argument convert_blank_to_none="True" name="agent_set" type="string">job</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" type="string">'jobs_for_estimation'</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
          </prepare_for_estimate>
        </structure>
      </model>
    </models>
    <templates hidden="True" name="Model Templates" parser_action="skip"/>
    <estimation_config config_name="estimation_config" name="Estimation Configuration" type="configuration">
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory" field_identifier="Cache Directory" field_description="Directory for base_year cache, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/base_year_data">[Project Name]/base_year_data</cache_directory>
      <base_year type="integer" field_identifier="Base Year">1980</base_year>
      <years type="tuple">
        <firstyear type="integer" field_identifier="Base Year">1980</firstyear>
        <lastyear type="integer" field_identifier="Base Year">1980</lastyear>
      </years>
    </estimation_config>
  </model_manager>
  <scenario_manager>
    <scenario name="default_scenario" type="scenario">
      <data cloneable="True" type="category">
        <baseyear_database config_name="scenario_database_configuration" type="class">
          <class_name hidden="True" type="string">ScenarioDatabaseConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.database_management.configurations.scenario_database_configuration</class_module>
          <argument name="protocol" type="string"/>
          <argument name="host_name" type="string"/>
          <argument name="user_name" type="string"/>
          <argument name="password" type="password"/>
          <argument name="database_name" type="string"/>
        </baseyear_database>
        <cache_configuration type="category">
          <cache_directory parser_action="prefix_with_opus_data_path" type="directory" field_identifier="Cache Directory" field_description="Parent Directory for simulation runs, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/base_year_data">[Project Name]/base_year_data</cache_directory>
          <creating_baseyear_cache_configuration type="class">
            <class_name hidden="True" type="string">CreatingBaseyearCacheConfiguration</class_name>
            <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
	        <argument config_name="cache_directory_root" name="cache_directory_root" parser_action="prefix_with_opus_data_path" type="directory"  field_identifier="Scenario Runs Directory" field_description="Directory for base_year cache, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/runs">[Project Name]/runs</argument>
    	    <argument name="cache_from_database" type="boolean">False</argument>
	        <argument name="baseyear_cache" type="class">
	          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
	          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
	          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory"  field_identifier="Cache Directory" field_description="Parent Directory for simulation runs, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/base_year_data">[Project Name]/base_year_data</argument>
	        </argument>
            <argument name="cache_scenario_database" type="string">urbansim.model_coordinators.cache_scenario_database</argument>
            <argument name="tables_to_cache" type="selectable_list">
              <selectable name="annual_employment_control_totals" type="selectable">True</selectable>
              <selectable name="annual_household_control_totals" type="selectable">True</selectable>
              <selectable name="development_event_history" type="selectable">True</selectable>
              <selectable name="gridcells" type="selectable">True</selectable>
              <selectable name="households" type="selectable">True</selectable>
              <selectable name="job_building_types" type="selectable">True</selectable>
              <selectable name="jobs" type="selectable">True</selectable>
              <selectable name="travel_data" type="selectable">True</selectable>
              <selectable name="zones" type="selectable">True</selectable>
              <selectable name="fazes" type="selectable">True</selectable>
              <selectable name="commercial_development_location_choice_model_coefficients" type="selectable">True</selectable>
              <selectable name="commercial_development_location_choice_model_specification" type="selectable">True</selectable>
              <selectable name="commercial_employment_location_choice_model_coefficients" type="selectable">True</selectable>
              <selectable name="commercial_employment_location_choice_model_specification" type="selectable">True</selectable>
              <selectable name="home_based_employment_location_choice_model_specification" type="selectable">True</selectable>
              <selectable name="home_based_employment_location_choice_model_coefficients" type="selectable">True</selectable>
              <selectable name="industrial_employment_location_choice_model_coefficients" type="selectable">True</selectable>
              <selectable name="industrial_employment_location_choice_model_specification" type="selectable">True</selectable>
              <selectable name="industrial_development_location_choice_model_coefficients" type="selectable">True</selectable>
              <selectable name="industrial_development_location_choice_model_specification" type="selectable">True</selectable>
              <selectable name="residential_development_location_choice_model_coefficients" type="selectable">True</selectable>
              <selectable name="residential_development_location_choice_model_specification" type="selectable">True</selectable>
              <selectable name="urbansim_constants" type="selectable">True</selectable>
              <selectable name="household_location_choice_model_coefficients" type="selectable">True</selectable>
              <selectable name="household_location_choice_model_specification" type="selectable">True</selectable>
              <selectable name="land_price_model_coefficients" type="selectable">True</selectable>
              <selectable name="land_price_model_specification" type="selectable">True</selectable>
              <selectable name="residential_land_share_model_coefficients" type="selectable">True</selectable>
              <selectable name="residential_land_share_model_specification" type="selectable">True</selectable>
              <selectable name="plan_type_group_definitions" type="selectable">True</selectable>
              <selectable name="plan_type_groups" type="selectable">True</selectable>
              <selectable name="household_characteristics_for_ht" type="selectable">True</selectable>
              <selectable name="development_types" type="selectable">True</selectable>
              <selectable name="development_type_group_definitions" type="selectable">True</selectable>
              <selectable name="development_constraints" type="selectable">True</selectable>
              <selectable name="annual_relocation_rates_for_households" type="selectable">True</selectable>
              <selectable name="annual_relocation_rates_for_jobs" type="selectable">True</selectable>
              <selectable name="base_year" type="selectable">True</selectable>
              <selectable name="development_events" type="selectable">True</selectable>
              <selectable name="development_type_groups" type="selectable">True</selectable>
              <selectable name="employment_adhoc_sector_group_definitions" type="selectable">True</selectable>
              <selectable name="employment_adhoc_sector_groups" type="selectable">True</selectable>
              <selectable name="employment_events" type="selectable">True</selectable>
              <selectable name="employment_sectors" type="selectable">True</selectable>
              <selectable name="land_use_events" type="selectable">True</selectable>
              <selectable name="plan_types" type="selectable">True</selectable>
              <selectable name="race_names" type="selectable">True</selectable>
              <selectable name="target_vacancies" type="selectable">True</selectable>
              <selectable name="development_events_exogenous" type="selectable">True</selectable>
              <selectable name="jobs_for_estimation" type="selectable">False</selectable>
              <selectable name="households_for_estimation" type="selectable">False</selectable>
              <selectable name="buildings" type="selectable">False</selectable>
              <selectable name="building_types" type="selectable">False</selectable>
              <selectable name="counties" type="selectable">False</selectable>
              <selectable name="cities" type="selectable">False</selectable>
              <selectable name="large_areas" type="selectable">False</selectable>
            </argument>
            <argument name="tables_to_cache_nchunks" type="dictionary">
              <gridcells type="integer">1</gridcells>
            </argument>
            <argument name="tables_to_copy_to_previous_years" type="dictionary"/>
          </creating_baseyear_cache_configuration>
        </cache_configuration>
      </data>
      <model_system type="category">
        <models_to_run config_name="models" type="selectable_list">
          <selectable name="prescheduled_events" type="model_choice">True</selectable>
          <selectable name="events_coordinator" type="model_choice">True</selectable>
          <selectable name="residential_land_share_model" type="model_choice">True</selectable>
          <selectable name="land_price_model" type="model_choice">True</selectable>
          <selectable name="development_project_transition_model" type="model_choice">True</selectable>
          <selectable name="residential_development_project_location_choice_model" type="model_choice">True</selectable>
          <selectable name="commercial_development_project_location_choice_model" type="model_choice">True</selectable>
          <selectable name="industrial_development_project_location_choice_model" type="model_choice">True</selectable>
          <selectable name="development_event_transition_model" type="model_choice">True</selectable>
          <selectable name="events_coordinator_1" return_value="events_coordinator" type="model_choice">True</selectable>
          <selectable name="residential_land_share_model" type="model_choice">True</selectable>
          <selectable name="household_transition_model" type="model_choice">True</selectable>
          <selectable name="employment_transition_model" type="model_choice">True</selectable>
          <selectable name="household_relocation_model" type="model_choice">True</selectable>
          <selectable name="household_location_choice_model" type="model_choice">True</selectable>
          <selectable name="employment_relocation_model" type="model_choice">True</selectable>
          <selectable name="employment_location_choice_model" type="model_choice">True<group_members type="string">_all_</group_members>
          </selectable>
          <selectable name="distribute_unplaced_jobs_model" type="model_choice">True</selectable>
        </models_to_run>
        <others type="category">
          <base_year type="integer" field_identifier="Base Year">1980</base_year>
          <years_to_run config_name="years" type="tuple">
            <firstyear type="integer" field_identifier="First Year of Simulation">1981</firstyear>
            <lastyear type="integer" field_identifier="Last Year of Simulation">1982</lastyear>
          </years_to_run>
        </others>
      </model_system>
      <advanced type="category">
        <datasets_to_cache_after_each_model type="selectable_list">
          <selectable name="gridcell" type="selectable">True</selectable>
          <selectable name="household" type="selectable">True</selectable>
          <selectable name="job" type="selectable">True</selectable>
          <selectable name="travel_data" type="selectable">False</selectable>
          <selectable name="zone" type="selectable">False</selectable>
        </datasets_to_cache_after_each_model>
        <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
          <selectable name="gridcell" type="selectable">True<nchunks type="integer">2</nchunks>
          </selectable>
          <selectable name="household" type="selectable">True</selectable>
          <selectable name="job" type="selectable">True</selectable>
          <selectable name="zone" type="selectable">True</selectable>
          <selectable name="development_type" type="selectable">True</selectable>
          <selectable name="target_vacancy" type="selectable">True</selectable>
          <selectable name="development_event_history" type="selectable">True</selectable>
          <selectable name="development_constraint" type="selectable">True</selectable>
          <selectable name="job_building_type" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">False</selectable>
          <selectable name="building" type="selectable">False</selectable>
          <selectable name="vacant_land_and_building_type" type="selectable">True</selectable>
          <selectable name="urbansim_constant" type="selectable">True</selectable>
        </datasets_to_preload>
        <model_system type="string">urbansim.model_coordinators.model_system</model_system>
        <debuglevel type="integer">4</debuglevel>
        <flush_variables type="boolean">False</flush_variables>
        <seed type="integer" convert_blank_to_none="True">None</seed>
        <chunk_specification type="dictionary">
          <nchunks type="integer">1</nchunks>
        </chunk_specification>
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">['urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
      </advanced>
    </scenario>
  </scenario_manager>
</opus_project>

