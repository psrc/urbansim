Cache directory for run 124 set to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16
Running opus_core.store.utils.cache_flt_data.CacheFltData: started on Tue Apr 10 05:16:50 2012
    Caching files from '/workspace/opus/data/paris_zone/base_year_data' 
    to '/workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16'.
Running opus_core.store.utils.cache_flt_data.CacheFltData: completed.....7.3 sec
Logging to file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
Running simulation for years 2000 thru 2006
Simulation root seed: 1
Running simulation for year 2000 in new process: started on Tue Apr 10 05:16:58 2012
    Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
    Invoking: /usr/bin/python /workspace/opus/src/opus_core/model_coordinators/model_system.py -r /tmp/tmpBEMG_M/resources.pickle --log-file-name run_multiprocess.log
Cache Directory set to: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16
Start simulation run: started on Tue Apr 10 05:16:58 2012
    random seed = (1061650668,)
    Starting simulation for year 2000: started on Tue Apr 10 05:16:58 2012
        Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
        Logging to file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/year_2000_log.txt
        Simulate year 2000: started on Tue Apr 10 05:16:58 2012
            Running Swap Datasets (from opus_core.models.swap_datasets): started on Tue Apr 10 05:16:58 2012
                Backed up /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/1999/annual_household_control_totals to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/1999/annual_household_control_totals_ORIGINAL
                Renamed /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/1999/annual_household_control_totals_baseline to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/1999/annual_household_control_totals
                Backed up /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/1999/annual_employment_control_totals to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/1999/annual_employment_control_totals_ORIGINAL
                Renamed /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/1999/annual_employment_control_totals_baseline to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/1999/annual_employment_control_totals
            Running Swap Datasets (from opus_core.models.swap_datasets): completed...0.0 sec
            Running Swap Datasets (from opus_core.models.swap_datasets): started on Tue Apr 10 05:16:58 2012
                Backed up /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2000/zones to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2000/zones_ORIGINAL
                Renamed /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2000/zones_baseline to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2000/zones
            Running Swap Datasets (from opus_core.models.swap_datasets): completed...0.0 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:16:58 2012
                numpy.clip(vpo, 0, 240)..................................0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.0 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:16:58 2012
                numpy.clip(tco, 0, 240)..................................0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.0 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:16:58 2012
                numpy.clip(tcd, 0, 240)..................................0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.0 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:16:58 2012
                numpy.clip(vpd, 0, 240)..................................0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.0 sec
            Running Development Project Transition Model (from urbansim.models.real_estate_transition_model): started on Tue Apr 10 05:16:58 2012
                is_residential = building.disaggregate(building_type.is_residential)....0.0 sec
                is_residential = development_event_history.disaggregate(building_type.is_residential)....0.0 sec
                
                +----------------+-----------+-----------+------------+--------+
                | is_residential |   actual  |   target  | difference | action |
                +----------------+-----------+-----------+------------+--------+
                |       1        |  4910845  |  4907910  |   -2935    |   0    |
                |       0        | 382249150 | 379698384 |  -2550766  |   0    |
                +----------------+-----------+-----------+------------+--------+
            Running Development Project Transition Model (from urbansim.models.real_estate_transition_model): completed...1.4 sec
            Running Non-Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): started on Tue Apr 10 05:17:00 2012
                Development project dataset is empty. Skip DPLCM
            Running Non-Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): completed...0.0 sec
            Running Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): started on Tue Apr 10 05:17:00 2012
                Development project dataset is empty. Skip DPLCM
            Running Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): completed...0.0 sec
            Running Add Development Projects Quantity to Buildings (from urbansim_zone.models.add_projects_to_buildings): started on Tue Apr 10 05:17:00 2012
                WARNING: Empty development project dataset. Skip add_projects_to_buildings.
            Running Add Development Projects Quantity to Buildings (from urbansim_zone.models.add_projects_to_buildings): completed...0.0 sec
            emp_250 = (establishment.employment < 250).astype('i').......0.0 sec
            Running Establishment Disappearance Model (from paris.models.establishment_disappearance_model): started on Tue Apr 10 05:17:00 2012
                Total number of individuals: 290106
                EDM chunk 1 out of 1.: started on Tue Apr 10 05:17:00 2012
                    Number of agents in this chunk: 290106
                    EBADefense = establishment.disaggregate(building.CBADefense)
                        building.disaggregate(zone.insee==92062)+building.disaggregate(zone.insee==92026)+building.disaggregate(zone.insee==92050)
                            zone.insee==92050............................0.0 sec
                            zone.insee==92026............................0.0 sec
                            zone.insee==92062............................0.0 sec
                        building.disaggregate(zone.insee==92062)+building.disaggregate(zone.insee==92026)+building.disaggregate(zone.insee==92050): completed...0.0 sec
                    EBADefense = establishment.disaggregate(building.CBADefense): completed...0.0 sec
                    EBAnwCty = establishment.disaggregate(building.CBAnwCty)
                        building.disaggregate(zone.cvilnouvel)...........0.0 sec
                    EBAnwCty = establishment.disaggregate(building.CBAnwCty): completed...0.0 sec
                    EBAparis = establishment.disaggregate(building.disaggregate(zone.dept==75))
                        building.disaggregate(zone.dept==75)
                            zone.dept==75................................0.0 sec
                        building.disaggregate(zone.dept==75): completed...0.0 sec
                    EBAparis = establishment.disaggregate(building.disaggregate(zone.dept==75)): completed...0.0 sec
                    ECTDTcD = establishment.disaggregate(building.ctdtcd)
                        building.disaggregate(zone.ctdtcd)...............0.0 sec
                    ECTDTcD = establishment.disaggregate(building.ctdtcd): completed...0.0 sec
                    ECTDVpD = establishment.disaggregate(building.ctdvpd)
                        building.disaggregate(zone.ctdvpd)...............0.0 sec
                    ECTDVpD = establishment.disaggregate(building.ctdvpd): completed...0.0 sec
                    ELPB = establishment.disaggregate(building.CLPB)
                        building.disaggregate(zone.ZCLPB)
                            ln_bounded(zone.aggregate(building.price*(building.building_type_id==6), function=sum)/zone.aggregate((building.building_type_id==6), function=sum))
                                (building.building_type_id==6)...........0.0 sec
                                building.price*(building.building_type_id==6)....0.0 sec
                            ln_bounded(zone.aggregate(building.price*(building.building_type_id==6), function=sum)/zone.aggregate((building.building_type_id==6), function=sum)): completed...0.0 sec
                        building.disaggregate(zone.ZCLPB): completed.....0.0 sec
                    ELPB = establishment.disaggregate(building.CLPB): completed...0.0 sec
                    ENGsubwSP = establishment.disaggregate(building.CNGsubwSP)
                        building.disaggregate(zone.csubway9).............0.0 sec
                    ENGsubwSP = establishment.disaggregate(building.CNGsubwSP): completed...0.1 sec
                    ENGtrainSt = establishment.disaggregate(building.CNGtrainSt)
                        building.disaggregate(zone.ctrain9)..............0.0 sec
                    ENGtrainSt = establishment.disaggregate(building.CNGtrainSt): completed...0.0 sec
                    EPBhghInc = establishment.disaggregate(building.CPBhghInc)/100
                        building.disaggregate(zone.ZPBhghInc)
                            100*(zone.aggregate(household.lincomepc>10.3)/(zone.CNRhh))
                                zone.aggregate(building.number_of_agents(household),function=sum)
                                    building.number_of_agents(household)....0.6 sec
                                zone.aggregate(building.number_of_agents(household),function=sum): completed...0.6 sec
                                household.lincomepc>10.3.................0.0 sec
                                zone_id = household.disaggregate(building.zone_id)....0.2 sec
                            100*(zone.aggregate(household.lincomepc>10.3)/(zone.CNRhh)): completed...1.0 sec
                        building.disaggregate(zone.ZPBhghInc): completed...1.0 sec
                    EPBhghInc = establishment.disaggregate(building.CPBhghInc)/100: completed...1.0 sec
                    EPBlowInc = establishment.disaggregate(building.CPBlowInc)/100
                        building.disaggregate(zone.ZPBlowInc)
                            100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh))
                                household.lincomepc<=9.9.................0.0 sec
                            100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh)): completed...0.2 sec
                        building.disaggregate(zone.ZPBlowInc): completed...0.2 sec
                    EPBlowInc = establishment.disaggregate(building.CPBlowInc)/100: completed...0.2 sec
                    ERItaxPro = establishment.disaggregate(building.CRItaxPro)
                        building.disaggregate(zone.taxpro)...............0.0 sec
                    ERItaxPro = establishment.disaggregate(building.CRItaxPro): completed...0.0 sec
                    ERRdensPop = establishment.disaggregate(building.CRRdensPop)
                        building.disaggregate(zone.ZRRdensPop)
                            zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                                building.aggregate(household.size).......0.2 sec
                            zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.3 sec
                        building.disaggregate(zone.ZRRdensPop): completed...0.3 sec
                    ERRdensPop = establishment.disaggregate(building.CRRdensPop): completed...0.3 sec
                    ERam0 = establishment.disaggregate(building.CPRam0)/100
                        building.disaggregate(zone.ZPRam0)
                            (zone.aggregate(building.aggregate(household.workers==0))/(zone.CNRhh))*100
                                building.aggregate(household.workers==0)
                                    household.workers==0.................0.0 sec
                                building.aggregate(household.workers==0): completed...0.2 sec
                            (zone.aggregate(building.aggregate(household.workers==0))/(zone.CNRhh))*100: completed...0.3 sec
                        building.disaggregate(zone.ZPRam0): completed....0.3 sec
                    ERam0 = establishment.disaggregate(building.CPRam0)/100: completed...0.3 sec
                    ETPNiv1 = establishment.disaggregate(building.CTPNiv1)
                        building.disaggregate(zone.ctpniv1)..............0.0 sec
                    ETPNiv1 = establishment.disaggregate(building.CTPNiv1): completed...0.0 sec
                    ETPNiv2 = establishment.disaggregate(building.CTPNiv2)
                        building.disaggregate(zone.ctpniv2)..............0.0 sec
                    ETPNiv2 = establishment.disaggregate(building.CTPNiv2): completed...0.0 sec
                    ETPNiv3 = establishment.disaggregate(building.CTPNiv3)
                        building.disaggregate(zone.ctpniv3)..............0.0 sec
                    ETPNiv3 = establishment.disaggregate(building.CTPNiv3): completed...0.0 sec
                    ETPNiv4 = establishment.disaggregate(building.CTPNiv4)
                        building.disaggregate(zone.ctpniv4)..............0.0 sec
                    ETPNiv4 = establishment.disaggregate(building.CTPNiv4): completed...0.0 sec
                    emp = establishment.employment.......................0.0 sec
                    w10=(establishment.employment_lag1 >= 10)*(establishment.employment_lag1 < 20)
                        opus_core.variables.VVV_lagLLL...................0.4 sec
                    w10=(establishment.employment_lag1 >= 10)*(establishment.employment_lag1 < 20): completed...0.4 sec
                    w100=(establishment.employment_lag1 >= 100)..........0.0 sec
                    w100slope=paris.establishment.w100*(establishment.employment_lag1 - 100)....0.0 sec
                    w10slope=paris.establishment.w10*(establishment.employment_lag1 - 10)....0.0 sec
                    w2=(establishment.employment_lag1 >= 2)*(establishment.employment_lag1 < 3)....0.0 sec
                    w20=(establishment.employment_lag1 >= 20)*(establishment.employment_lag1 < 50)....0.0 sec
                    w20slope=paris.establishment.w20*(establishment.employment_lag1 - 20)....0.0 sec
                    w3=(establishment.employment_lag1 >= 3)*(establishment.employment_lag1 < 6)....0.0 sec
                    w3slope=paris.establishment.w3*(establishment.employment_lag1 - 3)....0.0 sec
                    w50=(establishment.employment_lag1 >= 50)*(establishment.employment_lag1 < 100)....0.0 sec
                    w50slope=paris.establishment.w50*(establishment.employment_lag1 - 50)....0.0 sec
                    w6=(establishment.employment_lag1 >= 6)*(establishment.employment_lag1 < 10)....0.0 sec
                    w6slope=paris.establishment.w6*(establishment.employment_lag1 - 6)....0.0 sec
                    Choice set size: 2
                EDM chunk 1 out of 1.: completed.........................4.8 sec
            Running Establishment Disappearance Model (from paris.models.establishment_disappearance_model): completed...4.9 sec
            Running Establishment Evolution Model (from paris.models.establishment_evolution_model): started on Tue Apr 10 05:17:05 2012
                (paris.establishment.year_lag1 != paris.establishment.year)*(paris.establishment.emp_250_lag1)*(establishment.building_id>0)
                    opus_core.variables.VVV_lagLLL
                        paris.establishment.year.........................0.1 sec
                        paris.establishment.year.........................0.0 sec
                    opus_core.variables.VVV_lagLLL: completed............0.4 sec
                    opus_core.variables.VVV_lagLLL
                        emp_250 = (establishment.employment < 250).astype('i')....0.1 sec
                    opus_core.variables.VVV_lagLLL: completed............0.4 sec
                (paris.establishment.year_lag1 != paris.establishment.year)*(paris.establishment.emp_250_lag1)*(establishment.building_id>0): completed...0.8 sec
                paris.establishment.ln_emp_ratio
                    lnemp=ln_bounded(establishment.employment)...........0.0 sec
                    lnemp_pre=ln_bounded(establishment.employment_lag1)..0.0 sec
                paris.establishment.ln_emp_ratio: completed..............0.0 sec
                Total number of individuals: 290106
                EEM chunk 1 out of 1.: started on Tue Apr 10 05:17:06 2012
                    Number of agents in this chunk: 290106
                    EBAdefense_EBEwfb10_250 = establishment.EBADefense * establishment.EBEwfb10_250
                        (establishment.employment_lag1>9)*(establishment.employment_lag1<250)....0.0 sec
                    EBAdefense_EBEwfb10_250 = establishment.EBADefense * establishment.EBEwfb10_250: completed...0.0 sec
                    EBAdefense_EBEwfl10 = establishment.EBADefense * establishment.EBEwfl10
                        establishment.employment_lag1<10.................0.0 sec
                    EBAdefense_EBEwfl10 = establishment.EBADefense * establishment.EBEwfl10: completed...0.0 sec
                    EBAlimit_EBEwfb10_250 = establishment.ELimit * establishment.EBEwfb10_250
                        establishment.disaggregate(building.disaggregate(zone.limit))
                            building.disaggregate(zone.limit)............0.0 sec
                        establishment.disaggregate(building.disaggregate(zone.limit)): completed...0.0 sec
                    EBAlimit_EBEwfb10_250 = establishment.ELimit * establishment.EBEwfb10_250: completed...0.0 sec
                    EBAlimit_EBEwfl10 = establishment.ELimit * establishment.EBEwfl10....0.0 sec
                    EBAnwCty_EBEwfb10_250 = establishment.EBAnwCty * establishment.EBEwfb10_250....0.0 sec
                    EBAnwCty_EBEwfl10 = establishment.EBAnwCty * establishment.EBEwfl10....0.0 sec
                    EBAparis_EBEwfb10_250 = establishment.EBAparis * establishment.EBEwfb10_250....0.0 sec
                    EBAparis_EBEwfl10 = establishment.EBAparis * establishment.EBEwfl10....0.0 sec
                    EBLCprice_EBEwfb10_250 = establishment.ELPB * establishment.EBEwfb10_250....0.0 sec
                    EBLCprice_EBEwfl10 = establishment.ELPB * establishment.EBEwfl10....0.0 sec
                    ECNGsubw_EBEwfb10_250 = establishment.ENGsubwSP * establishment.EBEwfb10_250....0.0 sec
                    ECNGsubw_EBEwfl10 = establishment.ENGsubwSP * establishment.EBEwfl10....0.0 sec
                    ECNGtrain_EBEwfb10_250 = establishment.ENGtrainSt * establishment.EBEwfb10_250....0.0 sec
                    ECNGtrain_EBEwfl10 = establishment.ENGtrainSt * establishment.EBEwfl10....0.0 sec
                    ECPBhghInc_EBEwfb10_250 = establishment.EPBhghInc * establishment.EBEwfb10_250....0.0 sec
                    ECPBhghInc_EBEwfl10 = establishment.EPBhghInc * establishment.EBEwfl10....0.0 sec
                    ECPBlowInc_EBEwfl10 = establishment.EPBlowInc * establishment.EBEwfl10....0.0 sec
                    ECPR0Ac_EBEwfb10_250 = establishment.ERam0 * establishment.EBEwfb10_250....0.0 sec
                    ECPR0Ac_EBEwfl10 = establishment.ERam0 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE1_EBEwfb10_250 = establishment.ETPNiv1 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE1_EBEwfl10 = establishment.ETPNiv1 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE2_EBEwfb10_250 = establishment.ETPNiv2 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE2_EBEwfl10 = establishment.ETPNiv2 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE3_EBEwfb10_250 = establishment.ETPNiv3 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE3_EBEwfl10 = establishment.ETPNiv3 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE4_EBEwfb10_250 = establishment.ETPNiv4 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE4_EBEwfl10 = establishment.ETPNiv4 * establishment.EBEwfl10....0.0 sec
                    ECQRdstPop_EBEwfb10_250 = establishment.ERRdensPop * establishment.EBEwfb10_250....0.0 sec
                    ECQRdstPop_EBEwfl10 = establishment.ERRdensPop * establishment.EBEwfl10....0.0 sec
                    ECRFproTax_EBEwfb10_250 = establishment.ERItaxPro * establishment.EBEwfb10_250....0.0 sec
                    ECRFproTax_EBEwfl10 = establishment.ERItaxPro * establishment.EBEwfl10....0.0 sec
                    ECTDTcD_EBEwfb10_250 = establishment.ECTDTcD * establishment.EBEwfb10_250....0.0 sec
                    ECTDTcD_EBEwfl10 = establishment.ECTDTcD * establishment.EBEwfl10....0.0 sec
                    ECTDVpD_EBEwfb10_250 = establishment.ECTDVpD * establishment.EBEwfb10_250....0.0 sec
                    ECTDVpD_EBEwfl10 = establishment.ECTDVpD * establishment.EBEwfl10....0.0 sec
                EEM chunk 1 out of 1.: completed.........................0.9 sec
                rmse_ln_emp_ratio = numpy.sqrt(establishment.disaggregate(sector.aggregate(establishment._init_error_ln_emp_ratio**2, function=mean)))
                    sector.aggregate(establishment._init_error_ln_emp_ratio**2,function=mean)
                        establishment._init_error_ln_emp_ratio**2........0.0 sec
                    sector.aggregate(establishment._init_error_ln_emp_ratio**2,function=mean): completed...0.0 sec
                rmse_ln_emp_ratio = numpy.sqrt(establishment.disaggregate(sector.aggregate(establishment._init_error_ln_emp_ratio**2, function=mean))): completed...0.0 sec
            Running Establishment Evolution Model (from paris.models.establishment_evolution_model): completed...1.9 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:17:07 2012
                paris.establishment.emp_pred
                    emp_pre1=establishment.employment_lag1...............0.0 sec
                paris.establishment.emp_pred: completed..................0.0 sec
                (establishment.disappeared == 0)*(establishment.building_id>0)*(paris.establishment.year_lag1 != pari.establishment.year)*(paris.establishment.emp_250_lag1)....0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.0 sec
            Running Establishment Reappearance Model (from paris.models.establishment_reappearance_model): started on Tue Apr 10 05:17:07 2012
                _actual_ = control_total.aggregate(establishment.employment)....0.0 sec

                (establishment.disappeared == 1)*(paris.establishment.emp_250)
                    emp_250 = (establishment.employment < 250).astype('i')....0.0 sec
                (establishment.disappeared == 1)*(paris.establishment.emp_250): completed...0.0 sec
                
                +-----------+-------------+--------+--------+------------+---------+--------+------+
                | sector_id | disappeared | actual | target | difference |  action |   N    | note |
                +-----------+-------------+--------+--------+------------+---------+--------+------+
                |     1     |      0      | 14678  | 23639  |    8961    |   +776  |  +101  |      |
                |     2     |      0      | 529461 | 669637 |   140176   | +103739 | +10717 |      |
                |     3     |      0      | 151226 | 235165 |   83939    |  +72885 | +11379 |      |
                |     4     |      0      | 476652 | 662645 |   185993   | +175735 | +26192 |      |
                |     5     |      0      | 256179 | 293676 |   37497    |  +37497 |   +1   |      |
                |     6     |      0      | 228778 | 258834 |   30056    |  +30056 |   +1   |      |
                |     7     |      0      | 52359  | 103730 |   51371    |  +22552 | +3249  |      |
                |     8     |      0      | 883748 | 972065 |   88317    |  +88317 |   +1   |      |
                |     9     |      0      | 361404 | 474468 |   113064   |  +75536 | +14961 |      |
                |     10    |      0      | 680118 | 789083 |   108965   |  +33390 | +4670  |      |
                |     11    |      0      | 575448 | 610784 |   35336    |  +34124 | +3231  |      |
                +-----------+-------------+--------+--------+------------+---------+--------+------+
                
            Running Establishment Reappearance Model (from paris.models.establishment_reappearance_model): completed...0.8 sec
            Running Establishment Transition Model (from paris.models.transition_model): started on Tue Apr 10 05:17:07 2012
                _actual_ = control_total.aggregate(establishment.employment)....0.0 sec
                
                +-----------+-------------+--------+--------+------------+--------+------+
                | sector_id | disappeared | actual | target | difference | action | note |
                +-----------+-------------+--------+--------+------------+--------+------+
                |     1     |      0      | 15454  | 23639  |    8185    | +8185  |      |
                |     2     |      0      | 633200 | 669637 |   36437    | +36437 |      |
                |     3     |      0      | 224111 | 235165 |   11054    | +11054 |      |
                |     4     |      0      | 652387 | 662645 |   10258    | +10258 |      |
                |     5     |      0      | 293676 | 293676 |     0      |   0    |      |
                |     6     |      0      | 258834 | 258834 |     0      |   0    |      |
                |     7     |      0      | 74911  | 103730 |   28819    | +28819 |      |
                |     8     |      0      | 972065 | 972065 |     0      |   0    |      |
                |     9     |      0      | 436940 | 474468 |   37528    | +37528 |      |
                |     10    |      0      | 713508 | 789083 |   75575    | +75575 |      |
                |     11    |      0      | 609572 | 610784 |    1212    | +1212  |      |
                +-----------+-------------+--------+--------+------------+--------+------+
                
            Running Establishment Transition Model (from paris.models.transition_model): completed...0.5 sec
            Running Establishment Location Choice Model (from urbansim.models.agent_location_choice_model): started on Tue Apr 10 05:17:08 2012
                (establishment.disappeared==0)*(establishment.building_id <= 0)....0.0 sec
                (establishment.employment)*(establishment.disappeared==0)....0.0 sec
                Total number of individuals: 110034
                ELCM chunk 1 out of 1.: started on Tue Apr 10 05:17:08 2012
                    Number of agents in this chunk: 110034
                    vacant_non_home_based_job_spaces = clip_to_zero(urbansim_zone.building.total_non_home_based_job_spaces - paris.building.number_of_non_home_based_jobs)
                        total_non_home_based_job_spaces = numpy.round(safe_array_divide(building.non_residential_sqft, urbansim_zone.building.building_sqft_per_job))Warning: invalid value encountered in divide
....0.0 sec
                        number_of_non_home_based_jobs = building.aggregate((establishment.employment)*(establishment.disappeared==0))....0.0 sec
                        WARNING: Negative values detected in function/method ''
                        WARNING: Minimum: -24863.0. Negative values clipped to zero.
                    vacant_non_home_based_job_spaces = clip_to_zero(urbansim_zone.building.total_non_home_based_job_spaces - paris.building.number_of_non_home_based_jobs): completed...0.0 sec
                    Available capacity: 1349922.0 units.
                    CDGhighw = building.disaggregate(zone.cdisthwy)/1000....0.0 sec
                    CLEmpTot_lag1 = ln_bounded(building.disaggregate(zone.emptot_lag1))
                        zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0),intermediates=[building])
                            building.aggregate(establishment.autogenvar287)
                                establishment.employment_lag1*(establishment.disappeared_lag1==0)
                                    opus_core.variables.VVV_lagLLL.......0.4 sec
                                establishment.employment_lag1*(establishment.disappeared_lag1==0): completed...0.4 sec
                            building.aggregate(establishment.autogenvar287): completed...0.4 sec
                        zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0),intermediates=[building]): completed...0.4 sec
                    CLEmpTot_lag1 = ln_bounded(building.disaggregate(zone.emptot_lag1)): completed...0.4 sec
                    CLOActPotSt = building.disaggregate(zone.CLOActPotSt)
                        ln_bounded(zone.CNOActPotSt)
                            1.0*zone.project99st.........................0.0 sec
                        ln_bounded(zone.CNOActPotSt): completed..........0.0 sec
                    CLOActPotSt = building.disaggregate(zone.CLOActPotSt): completed...0.0 sec
                    CNRKold = building.disaggregate(zone.ZPRKold)
                        (zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.CNRhh))*100
                            building.aggregate(household.autogenvar60)
                                household.age_of_head>55.................0.0 sec
                            building.aggregate(household.autogenvar60): completed...0.3 sec
                        (zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.CNRhh))*100: completed...0.3 sec
                    CNRKold = building.disaggregate(zone.ZPRKold): completed...0.3 sec
                    CNRKyng = building.disaggregate(zone.ZPRKyng)
                        (zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.CNRhh))*100
                            building.aggregate(household.autogenvar63)
                                household.age_of_head<=35................0.0 sec
                            building.aggregate(household.autogenvar63): completed...0.2 sec
                        (zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.CNRhh))*100: completed...0.2 sec
                    CNRKyng = building.disaggregate(zone.ZPRKyng): completed...0.2 sec
                    CPGZFU = building.disaggregate(zone.czfu)............0.0 sec
                    CPRchld111g = building.disaggregate(zone.CPRchld111g)
                        100*((zone.aggregate(household.children11>=1, intermediates = [building]))/(zone.CNRhh))
                            building.aggregate(household.autogenvar296)
                                household.children11>=1..................0.0 sec
                            building.aggregate(household.autogenvar296): completed...0.3 sec
                        100*((zone.aggregate(household.children11>=1, intermediates = [building]))/(zone.CNRhh)): completed...0.3 sec
                    CPRchld111g = building.disaggregate(zone.CPRchld111g): completed...0.3 sec
                    CQEsec10dst_lag1 = building.disaggregate(zone.emp_s10_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s10_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 10),intermediates=[building])
                                building.aggregate(establishment.autogenvar299)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==10)
                                        opus_core.variables.VVV_lagLLL...0.4 sec
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==10): completed...0.4 sec
                                building.aggregate(establishment.autogenvar299): completed...0.4 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 10),intermediates=[building]): completed...0.4 sec
                        zone.emp_s10_lag1/(1000*zone.CNOActPotSt): completed...0.4 sec
                    CQEsec10dst_lag1 = building.disaggregate(zone.emp_s10_lag1/(1000*zone.CNOActPotSt)): completed...0.4 sec
                    CQEsec11dst_lag1 = building.disaggregate(zone.emp_s11_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s11_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 11),intermediates=[building])
                                building.aggregate(establishment.autogenvar302)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==11)....0.0 sec
                                building.aggregate(establishment.autogenvar302): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 11),intermediates=[building]): completed...0.0 sec
                        zone.emp_s11_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec11dst_lag1 = building.disaggregate(zone.emp_s11_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec2dst_lag1 = building.disaggregate(zone.emp_s2_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s2_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 2),intermediates=[building])
                                building.aggregate(establishment.autogenvar305)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==2)....0.0 sec
                                building.aggregate(establishment.autogenvar305): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 2),intermediates=[building]): completed...0.0 sec
                        zone.emp_s2_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec2dst_lag1 = building.disaggregate(zone.emp_s2_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec3dst_lag1 = building.disaggregate(zone.emp_s3_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s3_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 3),intermediates=[building])
                                building.aggregate(establishment.autogenvar308)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==3)....0.0 sec
                                building.aggregate(establishment.autogenvar308): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 3),intermediates=[building]): completed...0.0 sec
                        zone.emp_s3_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec3dst_lag1 = building.disaggregate(zone.emp_s3_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec4dst_lag1 = building.disaggregate(zone.emp_s4_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s4_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 4),intermediates=[building])
                                building.aggregate(establishment.autogenvar311)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==4)....0.0 sec
                                building.aggregate(establishment.autogenvar311): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 4),intermediates=[building]): completed...0.0 sec
                        zone.emp_s4_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec4dst_lag1 = building.disaggregate(zone.emp_s4_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec5dst_lag1 = building.disaggregate(zone.emp_s5_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s5_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 5),intermediates=[building])
                                building.aggregate(establishment.autogenvar314)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==5)....0.0 sec
                                building.aggregate(establishment.autogenvar314): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 5),intermediates=[building]): completed...0.0 sec
                        zone.emp_s5_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec5dst_lag1 = building.disaggregate(zone.emp_s5_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec6dst_lag1 = building.disaggregate(zone.emp_s6_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s6_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 6),intermediates=[building])
                                building.aggregate(establishment.autogenvar317)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==6)....0.0 sec
                                building.aggregate(establishment.autogenvar317): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 6),intermediates=[building]): completed...0.0 sec
                        zone.emp_s6_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec6dst_lag1 = building.disaggregate(zone.emp_s6_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec7dst_lag1 = building.disaggregate(zone.emp_s7_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s7_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 7),intermediates=[building])
                                building.aggregate(establishment.autogenvar320)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==7)....0.0 sec
                                building.aggregate(establishment.autogenvar320): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 7),intermediates=[building]): completed...0.0 sec
                        zone.emp_s7_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec7dst_lag1 = building.disaggregate(zone.emp_s7_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec8dst_lag1 = building.disaggregate(zone.emp_s8_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s8_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 8),intermediates=[building])
                                building.aggregate(establishment.autogenvar323)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==8)....0.0 sec
                                building.aggregate(establishment.autogenvar323): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 8),intermediates=[building]): completed...0.0 sec
                        zone.emp_s8_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec8dst_lag1 = building.disaggregate(zone.emp_s8_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec9dst_lag1 = building.disaggregate(zone.emp_s9_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s9_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 9),intermediates=[building])
                                building.aggregate(establishment.autogenvar326)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==9)....0.0 sec
                                building.aggregate(establishment.autogenvar326): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 9),intermediates=[building]): completed...0.0 sec
                        zone.emp_s9_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec9dst_lag1 = building.disaggregate(zone.emp_s9_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    biotech = paris.building.zgp_id==22
                        zgp_id = building.disaggregate(zone.zgp_id)......0.0 sec
                    biotech = paris.building.zgp_id==22: completed.......0.0 sec
                    clichy_montfermeil = paris.building.zgp_id==21.......0.0 sec
                    confluence = paris.building.zgp_id==23...............0.0 sec
                    descates = paris.building.zgp_id==24.................0.0 sec
                    la_defense = paris.building.zgp_id==25...............0.0 sec
                    le_bourget = paris.building.zgp_id==26...............0.0 sec
                    paris_pole = (paris.building.zgp_id>=27)*(paris.building.zgp_id<=46) ....0.0 sec
                    pleyel = paris.building.zgp_id==47...................0.0 sec
                    roissy = paris.building.zgp_id==48...................0.0 sec
                    saclay = paris.building.zgp_id==49...................0.0 sec
                    val_de_france_gonesse = paris.building.zgp_id==50....0.0 sec
                    Choice set size: 50
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                ELCM chunk 1 out of 1.: completed.......................25.5 sec
            Running Establishment Location Choice Model (from urbansim.models.agent_location_choice_model): completed...25.6 sec
            Running Household Transition Model (from urbansim.models.transition_model): started on Tue Apr 10 05:17:34 2012
                _actual_ = control_total.aggregate(household._one_)......0.2 sec
                
                +---------+--------+--------+------------+--------+------+
                | hh_type | actual | target | difference | action | note |
                +---------+--------+--------+------------+--------+------+
                |    1    | 155634 | 173788 |   18154    | +18154 |      |
                |    2    | 377859 | 420885 |   43026    | +43026 |      |
                |    3    | 47172  | 32330  |   -14842   | -14842 |      |
                |    4    | 981140 | 954867 |   -26273   | -26273 |      |
                |    5    | 335787 | 358215 |   22428    | +22428 |      |
                |    6    | 285132 | 311048 |   25916    | +25916 |      |
                |    7    | 48804  | 36416  |   -12388   | -12388 |      |
                |    8    | 588849 | 570088 |   -18761   | -18761 |      |
                |    9    | 209685 | 216346 |    6661    | +6661  |      |
                |    10   | 128531 | 141418 |   12887    | +12887 |      |
                |    11   | 38873  | 30314  |   -8559    | -8559  |      |
                |    12   | 330542 | 321269 |   -9273    | -9273  |      |
                |    13   | 233033 | 248488 |   15455    | +15455 |      |
                |    14   | 101556 | 105640 |    4084    | +4084  |      |
                |    15   | 38058  | 29221  |   -8837    | -8837  |      |
                |    16   | 239520 | 230585 |   -8935    | -8935  |      |
                |    17   | 91069  | 95259  |    4190    | +4190  |      |
                |    18   | 30201  | 32189  |    1988    | +1988  |      |
                |    19   | 16953  | 13219  |   -3734    | -3734  |      |
                |    20   | 104171 | 103797 |    -374    |  -374  |      |
                |    21   | 36333  | 37582  |    1249    | +1249  |      |
                |    22   | 11847  | 12165  |    318     |  +318  |      |
                |    23   |  8483  |  7542  |    -941    |  -941  |      |
                |    24   | 71137  | 70385  |    -752    |  -752  |      |
                +---------+--------+--------+------------+--------+------+
                
            Running Household Transition Model (from urbansim.models.transition_model): completed...9.7 sec
            Running Household Relocation Model (from urbansim.models.agent_relocation_model): started on Tue Apr 10 05:17:43 2012
                Number of agents sampled based on rates: 557042
                Number of total movers: 703041
            Running Household Relocation Model (from urbansim.models.agent_relocation_model): completed...4.3 sec
            Running Household Location Choice Model (from urbansim.models.household_location_choice_model): started on Tue Apr 10 05:17:48 2012
                Total number of individuals: 703041
                HLCM chunk 1 out of 1.: started on Tue Apr 10 05:17:48 2012
                    Number of agents in this chunk: 703041
                    vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households)
                        number_of_households = building.number_of_agents(household)....0.4 sec
                        WARNING: Negative values detected in function/method ''
                        WARNING: Minimum: -12.0. Negative values clipped to zero.
                    vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households): completed...0.4 sec
                    Available capacity: 1060842.0 units.
                    (urbansim_zone.building.vacant_residential_units>0)*(household.building_type_id==building.building_type_id)....0.0 sec
                    paris.building.M_DDDjt
                        M_1j0 = paris.building.number_of_households_of_type_1_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs1=building.aggregate(household.hh_type==1)
                                        household.hh_type==1.............0.5 sec
                                    _hhs1=building.aggregate(household.hh_type==1): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs1=building.aggregate(household.hh_type==1)
                                        household.hh_type==1.............0.0 sec
                                    _hhs1=building.aggregate(household.hh_type==1): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_1j0 = paris.building.number_of_households_of_type_1_lag1: completed...0.9 sec
                        TM_1t = alldata.aggregate_all(numpy.logical_and(household.hh_type==1, household.building_id<=0))
                            numpy.logical_and(household.hh_type==1,household.building_id<=0)....0.0 sec
                        TM_1t = alldata.aggregate_all(numpy.logical_and(household.hh_type==1, household.building_id<=0)): completed...0.1 sec
                        TM_10 = paris.alldata.number_of_households_of_type_1_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs1=alldata.aggregate_all(household.hh_type==1)
                                        household.hh_type==1.............0.5 sec
                                    _hhs1=alldata.aggregate_all(household.hh_type==1): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs1=alldata.aggregate_all(household.hh_type==1)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_10 = paris.alldata.number_of_households_of_type_1_lag1: completed...0.7 sec
                        V_ijt = urbansim_zone.building.vacant_residential_units....0.0 sec
                        V_ij0 = urbansim_zone.building.vacant_residential_units_lag1
                            opus_core.variables.VVV_lagLLL
                                vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households)
                                    number_of_households = building.number_of_agents(household)....1.1 sec
                                    WARNING: Negative values detected in function/method ''
                                    WARNING: Minimum: -22.0. Negative values clipped to zero.
                                vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households): completed...1.1 sec
                            opus_core.variables.VVV_lagLLL: completed....1.1 sec
                        V_ij0 = urbansim_zone.building.vacant_residential_units_lag1: completed...1.1 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................2.8 sec
                    paris.building.M_DDDjt
                        M_2j0 = paris.building.number_of_households_of_type_2_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs2=building.aggregate(household.hh_type==2)
                                        household.hh_type==2.............0.5 sec
                                    _hhs2=building.aggregate(household.hh_type==2): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs2=building.aggregate(household.hh_type==2)
                                        household.hh_type==2.............0.0 sec
                                    _hhs2=building.aggregate(household.hh_type==2): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_2j0 = paris.building.number_of_households_of_type_2_lag1: completed...1.0 sec
                        TM_2t = alldata.aggregate_all(numpy.logical_and(household.hh_type==2, household.building_id<=0))
                            numpy.logical_and(household.hh_type==2,household.building_id<=0)....0.0 sec
                        TM_2t = alldata.aggregate_all(numpy.logical_and(household.hh_type==2, household.building_id<=0)): completed...0.1 sec
                        TM_20 = paris.alldata.number_of_households_of_type_2_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs2=alldata.aggregate_all(household.hh_type==2)
                                        household.hh_type==2.............0.5 sec
                                    _hhs2=alldata.aggregate_all(household.hh_type==2): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs2=alldata.aggregate_all(household.hh_type==2)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_20 = paris.alldata.number_of_households_of_type_2_lag1: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_3j0 = paris.building.number_of_households_of_type_3_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs3=building.aggregate(household.hh_type==3)
                                        household.hh_type==3.............0.5 sec
                                    _hhs3=building.aggregate(household.hh_type==3): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs3=building.aggregate(household.hh_type==3)
                                        household.hh_type==3.............0.0 sec
                                    _hhs3=building.aggregate(household.hh_type==3): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_3j0 = paris.building.number_of_households_of_type_3_lag1: completed...1.0 sec
                        TM_3t = alldata.aggregate_all(numpy.logical_and(household.hh_type==3, household.building_id<=0))
                            numpy.logical_and(household.hh_type==3,household.building_id<=0)....0.0 sec
                        TM_3t = alldata.aggregate_all(numpy.logical_and(household.hh_type==3, household.building_id<=0)): completed...0.1 sec
                        TM_30 = paris.alldata.number_of_households_of_type_3_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs3=alldata.aggregate_all(household.hh_type==3)
                                        household.hh_type==3.............0.5 sec
                                    _hhs3=alldata.aggregate_all(household.hh_type==3): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs3=alldata.aggregate_all(household.hh_type==3)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_30 = paris.alldata.number_of_households_of_type_3_lag1: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_4j0 = paris.building.number_of_households_of_type_4_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs4=building.aggregate(household.hh_type==4)
                                        household.hh_type==4.............0.5 sec
                                    _hhs4=building.aggregate(household.hh_type==4): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs4=building.aggregate(household.hh_type==4)
                                        household.hh_type==4.............0.0 sec
                                    _hhs4=building.aggregate(household.hh_type==4): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_4j0 = paris.building.number_of_households_of_type_4_lag1: completed...1.0 sec
                        TM_4t = alldata.aggregate_all(numpy.logical_and(household.hh_type==4, household.building_id<=0))
                            numpy.logical_and(household.hh_type==4,household.building_id<=0)....0.0 sec
                        TM_4t = alldata.aggregate_all(numpy.logical_and(household.hh_type==4, household.building_id<=0)): completed...0.1 sec
                        TM_40 = paris.alldata.number_of_households_of_type_4_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs4=alldata.aggregate_all(household.hh_type==4)
                                        household.hh_type==4.............0.5 sec
                                    _hhs4=alldata.aggregate_all(household.hh_type==4): completed...0.7 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs4=alldata.aggregate_all(household.hh_type==4)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_40 = paris.alldata.number_of_households_of_type_4_lag1: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_5j0 = paris.building.number_of_households_of_type_5_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs5=building.aggregate(household.hh_type==5)
                                        household.hh_type==5.............0.5 sec
                                    _hhs5=building.aggregate(household.hh_type==5): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs5=building.aggregate(household.hh_type==5)
                                        household.hh_type==5.............0.0 sec
                                    _hhs5=building.aggregate(household.hh_type==5): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_5j0 = paris.building.number_of_households_of_type_5_lag1: completed...1.0 sec
                        TM_5t = alldata.aggregate_all(numpy.logical_and(household.hh_type==5, household.building_id<=0))
                            numpy.logical_and(household.hh_type==5,household.building_id<=0)....0.0 sec
                        TM_5t = alldata.aggregate_all(numpy.logical_and(household.hh_type==5, household.building_id<=0)): completed...0.1 sec
                        TM_50 = paris.alldata.number_of_households_of_type_5_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs5=alldata.aggregate_all(household.hh_type==5)
                                        household.hh_type==5.............0.5 sec
                                    _hhs5=alldata.aggregate_all(household.hh_type==5): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs5=alldata.aggregate_all(household.hh_type==5)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_50 = paris.alldata.number_of_households_of_type_5_lag1: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_6j0 = paris.building.number_of_households_of_type_6_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs6=building.aggregate(household.hh_type==6)
                                        household.hh_type==6.............0.5 sec
                                    _hhs6=building.aggregate(household.hh_type==6): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs6=building.aggregate(household.hh_type==6)
                                        household.hh_type==6.............0.0 sec
                                    _hhs6=building.aggregate(household.hh_type==6): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_6j0 = paris.building.number_of_households_of_type_6_lag1: completed...1.0 sec
                        TM_6t = alldata.aggregate_all(numpy.logical_and(household.hh_type==6, household.building_id<=0))
                            numpy.logical_and(household.hh_type==6,household.building_id<=0)....0.0 sec
                        TM_6t = alldata.aggregate_all(numpy.logical_and(household.hh_type==6, household.building_id<=0)): completed...0.1 sec
                        TM_60 = paris.alldata.number_of_households_of_type_6_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs6=alldata.aggregate_all(household.hh_type==6)
                                        household.hh_type==6.............0.5 sec
                                    _hhs6=alldata.aggregate_all(household.hh_type==6): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs6=alldata.aggregate_all(household.hh_type==6)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_60 = paris.alldata.number_of_households_of_type_6_lag1: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_7j0 = paris.building.number_of_households_of_type_7_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs7=building.aggregate(household.hh_type==7)
                                        household.hh_type==7.............0.5 sec
                                    _hhs7=building.aggregate(household.hh_type==7): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs7=building.aggregate(household.hh_type==7)
                                        household.hh_type==7.............0.0 sec
                                    _hhs7=building.aggregate(household.hh_type==7): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_7j0 = paris.building.number_of_households_of_type_7_lag1: completed...1.0 sec
                        TM_7t = alldata.aggregate_all(numpy.logical_and(household.hh_type==7, household.building_id<=0))
                            numpy.logical_and(household.hh_type==7,household.building_id<=0)....0.0 sec
                        TM_7t = alldata.aggregate_all(numpy.logical_and(household.hh_type==7, household.building_id<=0)): completed...0.1 sec
                        TM_70 = paris.alldata.number_of_households_of_type_7_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs7=alldata.aggregate_all(household.hh_type==7)
                                        household.hh_type==7.............0.5 sec
                                    _hhs7=alldata.aggregate_all(household.hh_type==7): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs7=alldata.aggregate_all(household.hh_type==7)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_70 = paris.alldata.number_of_households_of_type_7_lag1: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_8j0 = paris.building.number_of_households_of_type_8_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs8=building.aggregate(household.hh_type==8)
                                        household.hh_type==8.............0.5 sec
                                    _hhs8=building.aggregate(household.hh_type==8): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs8=building.aggregate(household.hh_type==8)
                                        household.hh_type==8.............0.0 sec
                                    _hhs8=building.aggregate(household.hh_type==8): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_8j0 = paris.building.number_of_households_of_type_8_lag1: completed...1.0 sec
                        TM_8t = alldata.aggregate_all(numpy.logical_and(household.hh_type==8, household.building_id<=0))
                            numpy.logical_and(household.hh_type==8,household.building_id<=0)....0.0 sec
                        TM_8t = alldata.aggregate_all(numpy.logical_and(household.hh_type==8, household.building_id<=0)): completed...0.1 sec
                        TM_80 = paris.alldata.number_of_households_of_type_8_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs8=alldata.aggregate_all(household.hh_type==8)
                                        household.hh_type==8.............0.5 sec
                                    _hhs8=alldata.aggregate_all(household.hh_type==8): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs8=alldata.aggregate_all(household.hh_type==8)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_80 = paris.alldata.number_of_households_of_type_8_lag1: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_9j0 = paris.building.number_of_households_of_type_9_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs9=building.aggregate(household.hh_type==9)
                                        household.hh_type==9.............0.5 sec
                                    _hhs9=building.aggregate(household.hh_type==9): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs9=building.aggregate(household.hh_type==9)
                                        household.hh_type==9.............0.0 sec
                                    _hhs9=building.aggregate(household.hh_type==9): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_9j0 = paris.building.number_of_households_of_type_9_lag1: completed...0.9 sec
                        TM_9t = alldata.aggregate_all(numpy.logical_and(household.hh_type==9, household.building_id<=0))
                            numpy.logical_and(household.hh_type==9,household.building_id<=0)....0.0 sec
                        TM_9t = alldata.aggregate_all(numpy.logical_and(household.hh_type==9, household.building_id<=0)): completed...0.1 sec
                        TM_90 = paris.alldata.number_of_households_of_type_9_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs9=alldata.aggregate_all(household.hh_type==9)
                                        household.hh_type==9.............0.5 sec
                                    _hhs9=alldata.aggregate_all(household.hh_type==9): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs9=alldata.aggregate_all(household.hh_type==9)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_90 = paris.alldata.number_of_households_of_type_9_lag1: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_10j0 = paris.building.number_of_households_of_type_10_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs10=building.aggregate(household.hh_type==10)
                                        household.hh_type==10............0.5 sec
                                    _hhs10=building.aggregate(household.hh_type==10): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs10=building.aggregate(household.hh_type==10)
                                        household.hh_type==10............0.0 sec
                                    _hhs10=building.aggregate(household.hh_type==10): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_10j0 = paris.building.number_of_households_of_type_10_lag1: completed...0.9 sec
                        TM_10t = alldata.aggregate_all(numpy.logical_and(household.hh_type==10, household.building_id<=0))
                            numpy.logical_and(household.hh_type==10,household.building_id<=0)....0.0 sec
                        TM_10t = alldata.aggregate_all(numpy.logical_and(household.hh_type==10, household.building_id<=0)): completed...0.1 sec
                        TM_100 = paris.alldata.number_of_households_of_type_10_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs10=alldata.aggregate_all(household.hh_type==10)
                                        household.hh_type==10............0.5 sec
                                    _hhs10=alldata.aggregate_all(household.hh_type==10): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs10=alldata.aggregate_all(household.hh_type==10)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_100 = paris.alldata.number_of_households_of_type_10_lag1: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_11j0 = paris.building.number_of_households_of_type_11_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs11=building.aggregate(household.hh_type==11)
                                        household.hh_type==11............0.5 sec
                                    _hhs11=building.aggregate(household.hh_type==11): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs11=building.aggregate(household.hh_type==11)
                                        household.hh_type==11............0.0 sec
                                    _hhs11=building.aggregate(household.hh_type==11): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_11j0 = paris.building.number_of_households_of_type_11_lag1: completed...0.9 sec
                        TM_11t = alldata.aggregate_all(numpy.logical_and(household.hh_type==11, household.building_id<=0))
                            numpy.logical_and(household.hh_type==11,household.building_id<=0)....0.0 sec
                        TM_11t = alldata.aggregate_all(numpy.logical_and(household.hh_type==11, household.building_id<=0)): completed...0.1 sec
                        TM_110 = paris.alldata.number_of_households_of_type_11_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs11=alldata.aggregate_all(household.hh_type==11)
                                        household.hh_type==11............0.5 sec
                                    _hhs11=alldata.aggregate_all(household.hh_type==11): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs11=alldata.aggregate_all(household.hh_type==11)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_110 = paris.alldata.number_of_households_of_type_11_lag1: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_12j0 = paris.building.number_of_households_of_type_12_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs12=building.aggregate(household.hh_type==12)
                                        household.hh_type==12............0.5 sec
                                    _hhs12=building.aggregate(household.hh_type==12): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs12=building.aggregate(household.hh_type==12)
                                        household.hh_type==12............0.0 sec
                                    _hhs12=building.aggregate(household.hh_type==12): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_12j0 = paris.building.number_of_households_of_type_12_lag1: completed...1.0 sec
                        TM_12t = alldata.aggregate_all(numpy.logical_and(household.hh_type==12, household.building_id<=0))
                            numpy.logical_and(household.hh_type==12,household.building_id<=0)....0.0 sec
                        TM_12t = alldata.aggregate_all(numpy.logical_and(household.hh_type==12, household.building_id<=0)): completed...0.1 sec
                        TM_120 = paris.alldata.number_of_households_of_type_12_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs12=alldata.aggregate_all(household.hh_type==12)
                                        household.hh_type==12............0.5 sec
                                    _hhs12=alldata.aggregate_all(household.hh_type==12): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs12=alldata.aggregate_all(household.hh_type==12)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_120 = paris.alldata.number_of_households_of_type_12_lag1: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_13j0 = paris.building.number_of_households_of_type_13_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs13=building.aggregate(household.hh_type==13)
                                        household.hh_type==13............0.5 sec
                                    _hhs13=building.aggregate(household.hh_type==13): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs13=building.aggregate(household.hh_type==13)
                                        household.hh_type==13............0.0 sec
                                    _hhs13=building.aggregate(household.hh_type==13): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_13j0 = paris.building.number_of_households_of_type_13_lag1: completed...1.0 sec
                        TM_13t = alldata.aggregate_all(numpy.logical_and(household.hh_type==13, household.building_id<=0))
                            numpy.logical_and(household.hh_type==13,household.building_id<=0)....0.0 sec
                        TM_13t = alldata.aggregate_all(numpy.logical_and(household.hh_type==13, household.building_id<=0)): completed...0.1 sec
                        TM_130 = paris.alldata.number_of_households_of_type_13_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs13=alldata.aggregate_all(household.hh_type==13)
                                        household.hh_type==13............0.5 sec
                                    _hhs13=alldata.aggregate_all(household.hh_type==13): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs13=alldata.aggregate_all(household.hh_type==13)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_130 = paris.alldata.number_of_households_of_type_13_lag1: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_14j0 = paris.building.number_of_households_of_type_14_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs14=building.aggregate(household.hh_type==14)
                                        household.hh_type==14............0.5 sec
                                    _hhs14=building.aggregate(household.hh_type==14): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs14=building.aggregate(household.hh_type==14)
                                        household.hh_type==14............0.0 sec
                                    _hhs14=building.aggregate(household.hh_type==14): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_14j0 = paris.building.number_of_households_of_type_14_lag1: completed...1.0 sec
                        TM_14t = alldata.aggregate_all(numpy.logical_and(household.hh_type==14, household.building_id<=0))
                            numpy.logical_and(household.hh_type==14,household.building_id<=0)....0.0 sec
                        TM_14t = alldata.aggregate_all(numpy.logical_and(household.hh_type==14, household.building_id<=0)): completed...0.1 sec
                        TM_140 = paris.alldata.number_of_households_of_type_14_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs14=alldata.aggregate_all(household.hh_type==14)
                                        household.hh_type==14............0.5 sec
                                    _hhs14=alldata.aggregate_all(household.hh_type==14): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs14=alldata.aggregate_all(household.hh_type==14)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_140 = paris.alldata.number_of_households_of_type_14_lag1: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_15j0 = paris.building.number_of_households_of_type_15_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs15=building.aggregate(household.hh_type==15)
                                        household.hh_type==15............0.5 sec
                                    _hhs15=building.aggregate(household.hh_type==15): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs15=building.aggregate(household.hh_type==15)
                                        household.hh_type==15............0.0 sec
                                    _hhs15=building.aggregate(household.hh_type==15): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_15j0 = paris.building.number_of_households_of_type_15_lag1: completed...0.9 sec
                        TM_15t = alldata.aggregate_all(numpy.logical_and(household.hh_type==15, household.building_id<=0))
                            numpy.logical_and(household.hh_type==15,household.building_id<=0)....0.0 sec
                        TM_15t = alldata.aggregate_all(numpy.logical_and(household.hh_type==15, household.building_id<=0)): completed...0.1 sec
                        TM_150 = paris.alldata.number_of_households_of_type_15_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs15=alldata.aggregate_all(household.hh_type==15)
                                        household.hh_type==15............0.5 sec
                                    _hhs15=alldata.aggregate_all(household.hh_type==15): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs15=alldata.aggregate_all(household.hh_type==15)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_150 = paris.alldata.number_of_households_of_type_15_lag1: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_16j0 = paris.building.number_of_households_of_type_16_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs16=building.aggregate(household.hh_type==16)
                                        household.hh_type==16............0.5 sec
                                    _hhs16=building.aggregate(household.hh_type==16): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs16=building.aggregate(household.hh_type==16)
                                        household.hh_type==16............0.0 sec
                                    _hhs16=building.aggregate(household.hh_type==16): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_16j0 = paris.building.number_of_households_of_type_16_lag1: completed...0.9 sec
                        TM_16t = alldata.aggregate_all(numpy.logical_and(household.hh_type==16, household.building_id<=0))
                            numpy.logical_and(household.hh_type==16,household.building_id<=0)....0.0 sec
                        TM_16t = alldata.aggregate_all(numpy.logical_and(household.hh_type==16, household.building_id<=0)): completed...0.1 sec
                        TM_160 = paris.alldata.number_of_households_of_type_16_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs16=alldata.aggregate_all(household.hh_type==16)
                                        household.hh_type==16............0.5 sec
                                    _hhs16=alldata.aggregate_all(household.hh_type==16): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs16=alldata.aggregate_all(household.hh_type==16)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_160 = paris.alldata.number_of_households_of_type_16_lag1: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_17j0 = paris.building.number_of_households_of_type_17_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs17=building.aggregate(household.hh_type==17)
                                        household.hh_type==17............0.5 sec
                                    _hhs17=building.aggregate(household.hh_type==17): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs17=building.aggregate(household.hh_type==17)
                                        household.hh_type==17............0.0 sec
                                    _hhs17=building.aggregate(household.hh_type==17): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_17j0 = paris.building.number_of_households_of_type_17_lag1: completed...0.9 sec
                        TM_17t = alldata.aggregate_all(numpy.logical_and(household.hh_type==17, household.building_id<=0))
                            numpy.logical_and(household.hh_type==17,household.building_id<=0)....0.0 sec
                        TM_17t = alldata.aggregate_all(numpy.logical_and(household.hh_type==17, household.building_id<=0)): completed...0.1 sec
                        TM_170 = paris.alldata.number_of_households_of_type_17_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs17=alldata.aggregate_all(household.hh_type==17)
                                        household.hh_type==17............0.5 sec
                                    _hhs17=alldata.aggregate_all(household.hh_type==17): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs17=alldata.aggregate_all(household.hh_type==17)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_170 = paris.alldata.number_of_households_of_type_17_lag1: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_18j0 = paris.building.number_of_households_of_type_18_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs18=building.aggregate(household.hh_type==18)
                                        household.hh_type==18............0.5 sec
                                    _hhs18=building.aggregate(household.hh_type==18): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs18=building.aggregate(household.hh_type==18)
                                        household.hh_type==18............0.0 sec
                                    _hhs18=building.aggregate(household.hh_type==18): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_18j0 = paris.building.number_of_households_of_type_18_lag1: completed...0.9 sec
                        TM_18t = alldata.aggregate_all(numpy.logical_and(household.hh_type==18, household.building_id<=0))
                            numpy.logical_and(household.hh_type==18,household.building_id<=0)....0.0 sec
                        TM_18t = alldata.aggregate_all(numpy.logical_and(household.hh_type==18, household.building_id<=0)): completed...0.1 sec
                        TM_180 = paris.alldata.number_of_households_of_type_18_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs18=alldata.aggregate_all(household.hh_type==18)
                                        household.hh_type==18............0.5 sec
                                    _hhs18=alldata.aggregate_all(household.hh_type==18): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs18=alldata.aggregate_all(household.hh_type==18)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_180 = paris.alldata.number_of_households_of_type_18_lag1: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_19j0 = paris.building.number_of_households_of_type_19_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs19=building.aggregate(household.hh_type==19)
                                        household.hh_type==19............0.5 sec
                                    _hhs19=building.aggregate(household.hh_type==19): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs19=building.aggregate(household.hh_type==19)
                                        household.hh_type==19............0.0 sec
                                    _hhs19=building.aggregate(household.hh_type==19): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_19j0 = paris.building.number_of_households_of_type_19_lag1: completed...0.9 sec
                        TM_19t = alldata.aggregate_all(numpy.logical_and(household.hh_type==19, household.building_id<=0))
                            numpy.logical_and(household.hh_type==19,household.building_id<=0)....0.0 sec
                        TM_19t = alldata.aggregate_all(numpy.logical_and(household.hh_type==19, household.building_id<=0)): completed...0.1 sec
                        TM_190 = paris.alldata.number_of_households_of_type_19_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs19=alldata.aggregate_all(household.hh_type==19)
                                        household.hh_type==19............0.5 sec
                                    _hhs19=alldata.aggregate_all(household.hh_type==19): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs19=alldata.aggregate_all(household.hh_type==19)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_190 = paris.alldata.number_of_households_of_type_19_lag1: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_20j0 = paris.building.number_of_households_of_type_20_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs20=building.aggregate(household.hh_type==20)
                                        household.hh_type==20............0.5 sec
                                    _hhs20=building.aggregate(household.hh_type==20): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs20=building.aggregate(household.hh_type==20)
                                        household.hh_type==20............0.0 sec
                                    _hhs20=building.aggregate(household.hh_type==20): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_20j0 = paris.building.number_of_households_of_type_20_lag1: completed...1.0 sec
                        TM_20t = alldata.aggregate_all(numpy.logical_and(household.hh_type==20, household.building_id<=0))
                            numpy.logical_and(household.hh_type==20,household.building_id<=0)....0.0 sec
                        TM_20t = alldata.aggregate_all(numpy.logical_and(household.hh_type==20, household.building_id<=0)): completed...0.1 sec
                        TM_200 = paris.alldata.number_of_households_of_type_20_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs20=alldata.aggregate_all(household.hh_type==20)
                                        household.hh_type==20............0.5 sec
                                    _hhs20=alldata.aggregate_all(household.hh_type==20): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs20=alldata.aggregate_all(household.hh_type==20)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_200 = paris.alldata.number_of_households_of_type_20_lag1: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_21j0 = paris.building.number_of_households_of_type_21_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs21=building.aggregate(household.hh_type==21)
                                        household.hh_type==21............0.5 sec
                                    _hhs21=building.aggregate(household.hh_type==21): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs21=building.aggregate(household.hh_type==21)
                                        household.hh_type==21............0.0 sec
                                    _hhs21=building.aggregate(household.hh_type==21): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_21j0 = paris.building.number_of_households_of_type_21_lag1: completed...0.9 sec
                        TM_21t = alldata.aggregate_all(numpy.logical_and(household.hh_type==21, household.building_id<=0))
                            numpy.logical_and(household.hh_type==21,household.building_id<=0)....0.0 sec
                        TM_21t = alldata.aggregate_all(numpy.logical_and(household.hh_type==21, household.building_id<=0)): completed...0.1 sec
                        TM_210 = paris.alldata.number_of_households_of_type_21_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs21=alldata.aggregate_all(household.hh_type==21)
                                        household.hh_type==21............0.5 sec
                                    _hhs21=alldata.aggregate_all(household.hh_type==21): completed...0.5 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.5 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs21=alldata.aggregate_all(household.hh_type==21)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_210 = paris.alldata.number_of_households_of_type_21_lag1: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_22j0 = paris.building.number_of_households_of_type_22_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs22=building.aggregate(household.hh_type==22)
                                        household.hh_type==22............0.5 sec
                                    _hhs22=building.aggregate(household.hh_type==22): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs22=building.aggregate(household.hh_type==22)
                                        household.hh_type==22............0.0 sec
                                    _hhs22=building.aggregate(household.hh_type==22): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_22j0 = paris.building.number_of_households_of_type_22_lag1: completed...0.9 sec
                        TM_22t = alldata.aggregate_all(numpy.logical_and(household.hh_type==22, household.building_id<=0))
                            numpy.logical_and(household.hh_type==22,household.building_id<=0)....0.0 sec
                        TM_22t = alldata.aggregate_all(numpy.logical_and(household.hh_type==22, household.building_id<=0)): completed...0.1 sec
                        TM_220 = paris.alldata.number_of_households_of_type_22_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs22=alldata.aggregate_all(household.hh_type==22)
                                        household.hh_type==22............0.5 sec
                                    _hhs22=alldata.aggregate_all(household.hh_type==22): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs22=alldata.aggregate_all(household.hh_type==22)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_220 = paris.alldata.number_of_households_of_type_22_lag1: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_23j0 = paris.building.number_of_households_of_type_23_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs23=building.aggregate(household.hh_type==23)
                                        household.hh_type==23............0.5 sec
                                    _hhs23=building.aggregate(household.hh_type==23): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs23=building.aggregate(household.hh_type==23)
                                        household.hh_type==23............0.0 sec
                                    _hhs23=building.aggregate(household.hh_type==23): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_23j0 = paris.building.number_of_households_of_type_23_lag1: completed...1.0 sec
                        TM_23t = alldata.aggregate_all(numpy.logical_and(household.hh_type==23, household.building_id<=0))
                            numpy.logical_and(household.hh_type==23,household.building_id<=0)....0.0 sec
                        TM_23t = alldata.aggregate_all(numpy.logical_and(household.hh_type==23, household.building_id<=0)): completed...0.1 sec
                        TM_230 = paris.alldata.number_of_households_of_type_23_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs23=alldata.aggregate_all(household.hh_type==23)
                                        household.hh_type==23............0.5 sec
                                    _hhs23=alldata.aggregate_all(household.hh_type==23): completed...0.7 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs23=alldata.aggregate_all(household.hh_type==23)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_230 = paris.alldata.number_of_households_of_type_23_lag1: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_24j0 = paris.building.number_of_households_of_type_24_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs24=building.aggregate(household.hh_type==24)
                                        household.hh_type==24............0.5 sec
                                    _hhs24=building.aggregate(household.hh_type==24): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs24=building.aggregate(household.hh_type==24)
                                        household.hh_type==24............0.0 sec
                                    _hhs24=building.aggregate(household.hh_type==24): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.1 sec
                        M_24j0 = paris.building.number_of_households_of_type_24_lag1: completed...1.1 sec
                        TM_24t = alldata.aggregate_all(numpy.logical_and(household.hh_type==24, household.building_id<=0))
                            numpy.logical_and(household.hh_type==24,household.building_id<=0)....0.0 sec
                        TM_24t = alldata.aggregate_all(numpy.logical_and(household.hh_type==24, household.building_id<=0)): completed...0.1 sec
                        TM_240 = paris.alldata.number_of_households_of_type_24_lag1
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs24=alldata.aggregate_all(household.hh_type==24)
                                        household.hh_type==24............0.5 sec
                                    _hhs24=alldata.aggregate_all(household.hh_type==24): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs24=alldata.aggregate_all(household.hh_type==24)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_240 = paris.alldata.number_of_households_of_type_24_lag1: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    CBAPC = (building.disaggregate(zone.dept==92))+(building.disaggregate(zone.dept==93))+(building.disaggregate(zone.dept==94))
                        zone.dept==94....................................0.0 sec
                        zone.dept==92....................................0.0 sec
                        zone.dept==93....................................0.0 sec
                    CBAPC = (building.disaggregate(zone.dept==92))+(building.disaggregate(zone.dept==93))+(building.disaggregate(zone.dept==94)): completed...0.0 sec
                    CBAparis = building.disaggregate(zone.dept==75)......0.0 sec
                    CDGart = building.disaggregate(zone.cdistart)/1000...0.0 sec
                    CDGartClse = building.disaggregate(zone.cdgartclse)..0.0 sec
                    CDGartFar = building.disaggregate(zone.cdgartfar)....0.0 sec
                    CDGhighwClse = building.disaggregate(zone.cdghighwclse)....0.0 sec
                    CDGhighwFar = building.disaggregate(zone.cdghighwfar)....0.0 sec
                    CLCrPriceF = ln_bounded(building.price)..............0.0 sec
                    CLCrPriceF_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....3.1 sec
                    CLCrPriceH = ln_bounded(building.price)..............0.0 sec
                    CLCrPriceH_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....3.1 sec
                    CLCsPriceF = ln_bounded(building.price)..............0.0 sec
                    CLCsPriceF_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....3.1 sec
                    CLCsPriceH = ln_bounded(building.price)..............0.0 sec
                    CLCsPriceH_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....3.1 sec
                    CLRrUnitsF = ln_bounded(building.residential_units)..0.0 sec
                    CLRrUnitsH = ln_bounded(building.residential_units)..0.0 sec
                    CLRsUnitsF = ln_bounded(building.residential_units)..0.0 sec
                    CLRsUnitsH = ln_bounded(building.residential_units)..0.0 sec
                    CNGsubwSP_HBRcar0 = (household.cars==0)*(building.disaggregate(zone.csubway9))....1.1 sec
                    CNGsubwSP_HBRcar1g = (household.cars>=1)*(building.disaggregate(zone.csubway9))....1.2 sec
                    CNGtrainSt_HBRcar0 = (household.cars==0)*(building.disaggregate(zone.ctrain9))....1.2 sec
                    CNGtrainSt_HBRcar1g = (household.cars>=1)*(building.disaggregate(zone.ctrain9))....1.2 sec
                    CNRsUnitsH = building.residential_units..............0.0 sec
                    CPBMedInc_HBRmedInc = (household.lincomepc<=10.3)*(household.lincomepc>9.9)*((building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.lincomepc<=9.9, intermediates = [building])- zone.aggregate(household.lincomepc>10.3, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum))))*100)
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.lincomepc<=9.9,intermediates=[building])-zone.aggregate(household.lincomepc>10.3,intermediates=[building])
                            building.number_of_agents(household).........0.5 sec
                            building.aggregate(household.autogenvar155)
                                household.lincomepc<=9.9.................0.0 sec
                            building.aggregate(household.autogenvar155): completed...0.2 sec
                            building.aggregate(household.autogenvar148)
                                household.lincomepc>10.3.................0.0 sec
                            building.aggregate(household.autogenvar148): completed...0.2 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.lincomepc<=9.9,intermediates=[building])-zone.aggregate(household.lincomepc>10.3,intermediates=[building]): completed...0.9 sec
                        (zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPBMedInc_HBRmedInc = (household.lincomepc<=10.3)*(household.lincomepc>9.9)*((building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.lincomepc<=9.9, intermediates = [building])- zone.aggregate(household.lincomepc>10.3, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum))))*100): completed...3.2 sec
                    CPBhghInc_HBRhghInc = (household.lincomepc>10.3)*(building.disaggregate(zone.aggregate(household.lincomepc>10.3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.lincomepc>10.3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPBhghInc_HBRhghInc = (household.lincomepc>10.3)*(building.disaggregate(zone.aggregate(household.lincomepc>10.3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.5 sec
                    CPBlowInc_HBRlowInc = (household.lincomepc<=9.9)*(building.disaggregate(zone.aggregate(household.lincomepc<=9.9, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.lincomepc<=9.9,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPBlowInc_HBRlowInc = (household.lincomepc<=9.9)*(building.disaggregate(zone.aggregate(household.lincomepc<=9.9, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.5 sec
                    CPInoise = building.disaggregate(zone.cnoise)........0.0 sec
                    CPOforest = building.disaggregate(zone.cpbois).......0.0 sec
                    CPOpark = building.disaggregate(zone.cpparc_jardin)..0.0 sec
                    CPOwater = building.disaggregate(zone.cpeau).........0.0 sec
                    CPRKfrgn_KBRfrgn = (household.race_id==1)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.race_id==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar55)
                                household.race_id==1.....................0.0 sec
                            building.aggregate(household.autogenvar55): completed...0.2 sec
                        zone.aggregate(household.race_id==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRKfrgn_KBRfrgn = (household.race_id==1)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.6 sec
                    CPRKfrgn_KBRnoFrgn = (household.race_id==0)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)....1.3 sec
                    CPRKmidAge_KBRmidAge = ((household.age_of_head>35) * (household.age_of_head<=55))*(building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.age_of_head>55, intermediates = [building])- zone.aggregate(household.age_of_head<=35, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.age_of_head>55,intermediates=[building])-zone.aggregate(household.age_of_head<=35,intermediates=[building])
                            building.aggregate(household.autogenvar60)
                                household.age_of_head>55.................0.0 sec
                            building.aggregate(household.autogenvar60): completed...0.2 sec
                            building.aggregate(household.autogenvar63)
                                household.age_of_head<=35................0.0 sec
                            building.aggregate(household.autogenvar63): completed...0.2 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.age_of_head>55,intermediates=[building])-zone.aggregate(household.age_of_head<=35,intermediates=[building]): completed...0.3 sec
                    CPRKmidAge_KBRmidAge = ((household.age_of_head>35) * (household.age_of_head<=55))*(building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.age_of_head>55, intermediates = [building])- zone.aggregate(household.age_of_head<=35, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...2.4 sec
                    CPRKold_KBRold = (household.age_of_head>55)*(building.disaggregate(zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.age_of_head>55,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPRKold_KBRold = (household.age_of_head>55)*(building.disaggregate(zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRKyng_KBRyng = (household.age_of_head<=35)*(building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPRKyng_KBRyng = (household.age_of_head<=35)*(building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRaft90 = building.disaggregate(zone.cpraft90)......0.0 sec
                    CPRam0_HBRam0 = (household.workers==0)*(building.disaggregate(zone.aggregate(household.workers==0, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers==0,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar162)
                                household.workers==0.....................0.0 sec
                            building.aggregate(household.autogenvar162): completed...0.2 sec
                        zone.aggregate(household.workers==0,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam0_HBRam0 = (household.workers==0)*(building.disaggregate(zone.aggregate(household.workers==0, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.5 sec
                    CPRam1_HBRam1 = (household.workers==1)*(building.disaggregate(zone.aggregate(household.workers==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar67)
                                household.workers==1.....................0.0 sec
                            building.aggregate(household.autogenvar67): completed...0.2 sec
                        zone.aggregate(household.workers==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam1_HBRam1 = (household.workers==1)*(building.disaggregate(zone.aggregate(household.workers==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.5 sec
                    CPRam1g_HBRam1g = (household.workers>=1)*(building.disaggregate(zone.aggregate(household.workers>=1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers>=1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar381)
                                household.workers>=1.....................0.0 sec
                            building.aggregate(household.autogenvar381): completed...0.2 sec
                        zone.aggregate(household.workers>=1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam1g_HBRam1g = (household.workers>=1)*(building.disaggregate(zone.aggregate(household.workers>=1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.5 sec
                    CPRam2g_HBRam2g = (household.workers>=2)*(building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar71)
                                household.workers>=2.....................0.0 sec
                            building.aggregate(household.autogenvar71): completed...0.2 sec
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam2g_HBRam2g = (household.workers>=2)*(building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.5 sec
                    CPRbef15 = building.disaggregate(zone.cprbef15)......0.0 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2))
                        zone.aggregate(establishment.employment,function=sum)....0.0 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2)): completed...0.0 sec
                    building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    building.disaggregate(zone.ZRRdensPop): completed....0.2 sec
                    HBRsmeDept = (household.previous_dpt==75)*(building.disaggregate(zone.dept==75))+(household.previous_dpt==77)*(building.disaggregate(zone.dept==77))+(household.previous_dpt==78)*(building.disaggregate(zone.dept==78))+(household.previous_dpt==91)*(building.disaggregate(zone.dept==91))+(household.previous_dpt==92)*(building.disaggregate(zone.dept==92))+(household.previous_dpt==93)*(building.disaggregate(zone.dept==93))+(household.previous_dpt==94)*(building.disaggregate(zone.dept==94))+(household.previous_dpt==95)*(building.disaggregate(zone.dept==95))
                        zone.dept==95....................................0.0 sec
                        zone.dept==77....................................0.0 sec
                        zone.dept==78....................................0.0 sec
                        zone.dept==91....................................0.0 sec
                    HBRsmeDept = (household.previous_dpt==75)*(building.disaggregate(zone.dept==75))+(household.previous_dpt==77)*(building.disaggregate(zone.dept==77))+(household.previous_dpt==78)*(building.disaggregate(zone.dept==78))+(household.previous_dpt==91)*(building.disaggregate(zone.dept==91))+(household.previous_dpt==92)*(building.disaggregate(zone.dept==92))+(household.previous_dpt==93)*(building.disaggregate(zone.dept==93))+(household.previous_dpt==94)*(building.disaggregate(zone.dept==94))+(household.previous_dpt==95)*(building.disaggregate(zone.dept==95)): completed...3.4 sec
                    ctdtco_HBRcar0 = (household.cars==0)*(building.ctdtco)
                        building.disaggregate(zone.ctdtco)...............0.0 sec
                    ctdtco_HBRcar0 = (household.cars==0)*(building.ctdtco): completed...1.2 sec
                    ctdtco_HBRcar1g = (household.cars>=1)*(building.ctdtco)....1.2 sec
                    ctdvpo_HBRcar0 = (household.cars==0)*(building.ctdvpo)
                        building.disaggregate(zone.ctdvpo)...............0.0 sec
                    ctdvpo_HBRcar0 = (household.cars==0)*(building.ctdvpo): completed...1.2 sec
                    ctdvpo_HBRcar1g = (household.cars>=1)*(building.ctdvpo)....1.2 sec
                    Choice set size: 50
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                HLCM chunk 1 out of 1.: completed.................4 min, 1.1 sec
            Running Household Location Choice Model (from urbansim.models.household_location_choice_model): completed...4 min, 1.5 sec
            Running Real Estate Price Model (from urbansim.models.real_estate_price_model): started on Tue Apr 10 05:21:49 2012
                ln_price=ln(building.price)..............................0.0 sec
                Total number of individuals: 6500
                REPM chunk 1 out of 1.: started on Tue Apr 10 05:21:49 2012
                    Number of agents in this chunk: 6500
                    building.disaggregate(zone.ZPBlowInc)
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh))
                            zone.aggregate(building.number_of_agents(household),function=sum)
                                building.number_of_agents(household).....0.5 sec
                            zone.aggregate(building.number_of_agents(household),function=sum): completed...0.5 sec
                            zone_id = household.disaggregate(building.zone_id)....0.2 sec
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh)): completed...0.9 sec
                    building.disaggregate(zone.ZPBlowInc): completed.....0.9 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum)))
                            building.aggregate(household.autogenvar60)...0.2 sec
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum))): completed...0.2 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100: completed...0.2 sec
                    CRItaxBati = building.disaggregate(zone.bati)........0.0 sec
                    building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    building.disaggregate(zone.ZRRdensPop): completed....0.2 sec
                REPM chunk 1 out of 1.: completed........................1.3 sec
            Running Real Estate Price Model (from urbansim.models.real_estate_price_model): completed...1.3 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:21:52 2012
                household.disaggregate(zone.dept)........................0.2 sec
            Running opus_core.simple_model.SimpleModel: completed........0.2 sec
            Writing datasets to cache for year 2000: started on Tue Apr 10 05:21:52 2012
                Flushing building
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2000/buildings doesn't exist and is created
                Flushing sector
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2000/sectors doesn't exist and is created
                Flushing home_based_status
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2000/home_based_status doesn't exist and is created
                Flushing zone
                Flushing household
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2000/households doesn't exist and is created
                Flushing development_event_history
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2000/development_event_history doesn't exist and is created
                Flushing target_vacancy
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2000/target_vacancies doesn't exist and is created
                Flushing building_type
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2000/building_types doesn't exist and is created
                Flushing building_sqft_per_job
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2000/building_sqft_per_job doesn't exist and is created
                Flushing choice
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2000/choice_set doesn't exist and is created
                Flushing establishment
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2000/establishment doesn't exist and is created
            Writing datasets to cache for year 2000: completed..........15.7 sec
        Simulate year 2000: completed.............................5 min, 9.7 sec
        Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/year_2000_log.txt
    Starting simulation for year 2000: completed..................5 min, 9.7 sec
Start simulation run: completed...................................5 min, 9.7 sec
Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
Running simulation for year 2000 in new process: completed.......5 min, 10.1 sec
Triggering travelmodel
Leaving travelmodel
Running simulation for year 2001 in new process: started on Tue Apr 10 05:22:08 2012
    Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
    Invoking: /usr/bin/python /workspace/opus/src/opus_core/model_coordinators/model_system.py -r /tmp/tmpk7U_un/resources.pickle --log-file-name run_multiprocess.log
Cache Directory set to: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16
Start simulation run: started on Tue Apr 10 05:22:08 2012
    random seed = (946286477,)
    Starting simulation for year 2001: started on Tue Apr 10 05:22:08 2012
        Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
        Logging to file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/year_2001_log.txt
        Simulate year 2001: started on Tue Apr 10 05:22:08 2012
            Running Swap Datasets (from opus_core.models.swap_datasets): started on Tue Apr 10 05:22:08 2012....0.0 sec
            Running Swap Datasets (from opus_core.models.swap_datasets): started on Tue Apr 10 05:22:08 2012
                Backed up /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2001/zones to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2001/zones_ORIGINAL
                Renamed /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2001/zones_baseline to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2001/zones
            Running Swap Datasets (from opus_core.models.swap_datasets): completed...0.0 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:22:08 2012
                numpy.clip(vpo, 0, 240)..................................0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.0 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:22:08 2012
                numpy.clip(tco, 0, 240)..................................0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.0 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:22:08 2012
                numpy.clip(tcd, 0, 240)..................................0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.0 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:22:08 2012
                numpy.clip(vpd, 0, 240)..................................0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.0 sec
            Running Development Project Transition Model (from urbansim.models.real_estate_transition_model): started on Tue Apr 10 05:22:08 2012
                is_residential = building.disaggregate(building_type.is_residential)....0.0 sec
                is_residential = development_event_history.disaggregate(building_type.is_residential)....0.0 sec
                
                +----------------+-----------+-----------+------------+----------+
                | is_residential |   actual  |   target  | difference |  action  |
                +----------------+-----------+-----------+------------+----------+
                |       1        |  4910845  |  4954359  |   43514    | +43517.0 |
                |       0        | 382249150 | 363046494 | -19202656  |    0     |
                +----------------+-----------+-----------+------------+----------+
            Running Development Project Transition Model (from urbansim.models.real_estate_transition_model): completed...1.7 sec
            Running Non-Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): started on Tue Apr 10 05:22:10 2012
                is_non_residential = numpy.logical_not(urbansim_zone.development_project.is_residential)....0.0 sec
                Nothing to be done.
            Running Non-Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): completed...0.0 sec
            Running Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): started on Tue Apr 10 05:22:10 2012
                Total number of individuals: 3666
                DPLCM chunk 1 out of 1.: started on Tue Apr 10 05:22:10 2012
                    Number of agents in this chunk: 3666
                    developable_residential_units_capacity = clip_to_zero(building.residential_units_capacity - building.residential_units)....0.0 sec
                    Available capacity: 31881308 units.
                    (building.building_type_id==1)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==2)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==3)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==4)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    CBAPC = (building.disaggregate(zone.dept==92))+(building.disaggregate(zone.dept==93))+(building.disaggregate(zone.dept==94))
                        zone.dept==94....................................0.0 sec
                        zone.dept==92....................................0.0 sec
                        zone.dept==93....................................0.0 sec
                    CBAPC = (building.disaggregate(zone.dept==92))+(building.disaggregate(zone.dept==93))+(building.disaggregate(zone.dept==94)): completed...0.0 sec
                    CBAnwCty = building.disaggregate(zone.cvilnouvel)....0.0 sec
                    CBAparis = building.disaggregate(zone.dept==75)
                        zone.dept==75....................................0.0 sec
                    CBAparis = building.disaggregate(zone.dept==75): completed...0.0 sec
                    CDGCBD = building.disaggregate(zone.cd_chatelet).....0.0 sec
                    CDGart = building.disaggregate(zone.cdistart)/1000...0.0 sec
                    CDGhighw = building.disaggregate(zone.cdisthwy)/1000....0.0 sec
                    CLCrPriceF = ln_bounded(building.price)..............0.0 sec
                    CLCrPriceH = ln_bounded(building.price)..............0.0 sec
                    CLCsPriceH = ln_bounded(building.price)..............0.0 sec
                    CLGarea = building.disaggregate(zone.ZLGarea)
                        ln_bounded(zone.careakm2)........................0.0 sec
                    CLGarea = building.disaggregate(zone.ZLGarea): completed...0.0 sec
                    CNGsubwSP = building.disaggregate(zone.csubway9).....0.0 sec
                    CNGtrainSt = building.disaggregate(zone.ctrain9).....0.0 sec
                    CPBhghInc = building.disaggregate(zone.ZPBhghInc)
                        100*(zone.aggregate(household.lincomepc>10.3)/(zone.CNRhh))
                            zone.aggregate(building.number_of_agents(household),function=sum)
                                building.number_of_agents(household).....0.6 sec
                            zone.aggregate(building.number_of_agents(household),function=sum): completed...0.6 sec
                            household.lincomepc>10.3.....................0.0 sec
                            zone_id = household.disaggregate(building.zone_id)....0.2 sec
                        100*(zone.aggregate(household.lincomepc>10.3)/(zone.CNRhh)): completed...1.1 sec
                    CPBhghInc = building.disaggregate(zone.ZPBhghInc): completed...1.1 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc)
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh))
                            household.lincomepc<=9.9.....................0.0 sec
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh)): completed...0.2 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc): completed...0.2 sec
                    CPInoise = building.disaggregate(zone.cnoise)........0.0 sec
                    CPOforest = building.disaggregate(zone.cpbois).......0.0 sec
                    CPOhlth = building.disaggregate(zone.cpequipem_sante)....0.0 sec
                    CPOpark = building.disaggregate(zone.cpparc_jardin)..0.0 sec
                    CPOsport = building.disaggregate(zone.cpsport).......0.0 sec
                    CPOwater = building.disaggregate(zone.cpeau).........0.0 sec
                    CPRKfrgn = building.disaggregate(zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))))*100
                        zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household)))
                            building.aggregate(household.race_id==1)
                                household.race_id==1.....................0.0 sec
                            building.aggregate(household.race_id==1): completed...0.3 sec
                        zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))): completed...0.3 sec
                    CPRKfrgn = building.disaggregate(zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))))*100: completed...0.3 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum)))
                            building.aggregate(household.autogenvar60)
                                household.age_of_head>55.................0.0 sec
                            building.aggregate(household.autogenvar60): completed...0.2 sec
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum))): completed...0.2 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100: completed...0.2 sec
                    CPRKyng = building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar63)
                                household.age_of_head<=35................0.0 sec
                            building.aggregate(household.autogenvar63): completed...0.2 sec
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRKyng = building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.2 sec
                    CPRaft90 = building.disaggregate(zone.cpraft90)......0.0 sec
                    CPRam1 = building.disaggregate(zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.workers==1)
                                household.workers==1.....................0.0 sec
                            building.aggregate(household.workers==1): completed...0.3 sec
                        zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRam1 = building.disaggregate(zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRam2g = building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar71)
                                household.workers>=2.....................0.0 sec
                            building.aggregate(household.autogenvar71): completed...0.2 sec
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam2g = building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.2 sec
                    CPRam3g = building.disaggregate(zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.workers>=3)
                                household.workers>=3.....................0.0 sec
                            building.aggregate(household.workers>=3): completed...0.2 sec
                        zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam3g = building.disaggregate(zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.2 sec
                    CPRbef15 = building.disaggregate(zone.cprbef15)......0.0 sec
                    CPRmemb2 = building.disaggregate(zone.aggregate(household.size==2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.size==2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar75)
                                household.size==2........................0.0 sec
                            building.aggregate(household.autogenvar75): completed...0.3 sec
                        zone.aggregate(household.size==2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRmemb2 = building.disaggregate(zone.aggregate(household.size==2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRmemb3g = building.disaggregate(zone.aggregate(household.size>=3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.size>=3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar78)
                                household.size>=3........................0.0 sec
                            building.aggregate(household.autogenvar78): completed...0.2 sec
                        zone.aggregate(household.size>=3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRmemb3g = building.disaggregate(zone.aggregate(household.size>=3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2))
                        zone.aggregate(establishment.employment,function=sum)....0.0 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2)): completed...0.0 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.2 sec
                    ctdvpo = building.disaggregate(zone.ctdvpo)..........0.0 sec
                    Choice set size: 10
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                DPLCM chunk 1 out of 1.: completed.......................4.4 sec
            Running Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): completed...4.4 sec
            Running Add Development Projects Quantity to Buildings (from urbansim_zone.models.add_projects_to_buildings): started on Tue Apr 10 05:22:15 2012....0.2 sec
            emp_250 = (establishment.employment < 250).astype('i').......0.0 sec
            Running Establishment Disappearance Model (from paris.models.establishment_disappearance_model): started on Tue Apr 10 05:22:15 2012
                Total number of individuals: 311355
                EDM chunk 1 out of 1.: started on Tue Apr 10 05:22:15 2012
                    Number of agents in this chunk: 311355
                    EBADefense = establishment.disaggregate(building.CBADefense)
                        building.disaggregate(zone.insee==92062)+building.disaggregate(zone.insee==92026)+building.disaggregate(zone.insee==92050)
                            zone.insee==92050............................0.0 sec
                            zone.insee==92026............................0.0 sec
                            zone.insee==92062............................0.0 sec
                        building.disaggregate(zone.insee==92062)+building.disaggregate(zone.insee==92026)+building.disaggregate(zone.insee==92050): completed...0.0 sec
                    EBADefense = establishment.disaggregate(building.CBADefense): completed...0.1 sec
                    EBAnwCty = establishment.disaggregate(building.CBAnwCty)....0.0 sec
                    EBAparis = establishment.disaggregate(building.disaggregate(zone.dept==75))
                        building.disaggregate(zone.dept==75).............0.0 sec
                    EBAparis = establishment.disaggregate(building.disaggregate(zone.dept==75)): completed...0.0 sec
                    ECTDTcD = establishment.disaggregate(building.ctdtcd)
                        building.disaggregate(zone.ctdtcd)...............0.0 sec
                    ECTDTcD = establishment.disaggregate(building.ctdtcd): completed...0.0 sec
                    ECTDVpD = establishment.disaggregate(building.ctdvpd)
                        building.disaggregate(zone.ctdvpd)...............0.0 sec
                    ECTDVpD = establishment.disaggregate(building.ctdvpd): completed...0.1 sec
                    ELPB = establishment.disaggregate(building.CLPB)
                        building.disaggregate(zone.ZCLPB)
                            ln_bounded(zone.aggregate(building.price*(building.building_type_id==6), function=sum)/zone.aggregate((building.building_type_id==6), function=sum))
                                building.price*(building.building_type_id==6)....0.0 sec
                                (building.building_type_id==6)...........0.0 sec
                            ln_bounded(zone.aggregate(building.price*(building.building_type_id==6), function=sum)/zone.aggregate((building.building_type_id==6), function=sum)): completed...0.0 sec
                        building.disaggregate(zone.ZCLPB): completed.....0.0 sec
                    ELPB = establishment.disaggregate(building.CLPB): completed...0.0 sec
                    ENGsubwSP = establishment.disaggregate(building.CNGsubwSP)....0.0 sec
                    ENGtrainSt = establishment.disaggregate(building.CNGtrainSt)....0.0 sec
                    EPBhghInc = establishment.disaggregate(building.CPBhghInc)/100....0.0 sec
                    EPBlowInc = establishment.disaggregate(building.CPBlowInc)/100....0.0 sec
                    ERItaxPro = establishment.disaggregate(building.CRItaxPro)
                        building.disaggregate(zone.taxpro)...............0.0 sec
                    ERItaxPro = establishment.disaggregate(building.CRItaxPro): completed...0.1 sec
                    ERRdensPop = establishment.disaggregate(building.CRRdensPop)....0.0 sec
                    ERam0 = establishment.disaggregate(building.CPRam0)/100
                        building.disaggregate(zone.ZPRam0)
                            (zone.aggregate(building.aggregate(household.workers==0))/(zone.CNRhh))*100
                                building.aggregate(household.workers==0)
                                    household.workers==0.................0.0 sec
                                building.aggregate(household.workers==0): completed...0.2 sec
                            (zone.aggregate(building.aggregate(household.workers==0))/(zone.CNRhh))*100: completed...0.2 sec
                        building.disaggregate(zone.ZPRam0): completed....0.2 sec
                    ERam0 = establishment.disaggregate(building.CPRam0)/100: completed...0.3 sec
                    ETPNiv1 = establishment.disaggregate(building.CTPNiv1)
                        building.disaggregate(zone.ctpniv1)..............0.0 sec
                    ETPNiv1 = establishment.disaggregate(building.CTPNiv1): completed...0.1 sec
                    ETPNiv2 = establishment.disaggregate(building.CTPNiv2)
                        building.disaggregate(zone.ctpniv2)..............0.0 sec
                    ETPNiv2 = establishment.disaggregate(building.CTPNiv2): completed...0.0 sec
                    ETPNiv3 = establishment.disaggregate(building.CTPNiv3)
                        building.disaggregate(zone.ctpniv3)..............0.0 sec
                    ETPNiv3 = establishment.disaggregate(building.CTPNiv3): completed...0.0 sec
                    ETPNiv4 = establishment.disaggregate(building.CTPNiv4)
                        building.disaggregate(zone.ctpniv4)..............0.0 sec
                    ETPNiv4 = establishment.disaggregate(building.CTPNiv4): completed...0.0 sec
                    emp = establishment.employment.......................0.0 sec
                    w10=(establishment.employment_lag1 >= 10)*(establishment.employment_lag1 < 20)
                        opus_core.variables.VVV_lagLLL...................0.4 sec
                    w10=(establishment.employment_lag1 >= 10)*(establishment.employment_lag1 < 20): completed...0.4 sec
                    w100=(establishment.employment_lag1 >= 100)..........0.0 sec
                    w100slope=paris.establishment.w100*(establishment.employment_lag1 - 100)....0.0 sec
                    w10slope=paris.establishment.w10*(establishment.employment_lag1 - 10)....0.0 sec
                    w2=(establishment.employment_lag1 >= 2)*(establishment.employment_lag1 < 3)....0.0 sec
                    w20=(establishment.employment_lag1 >= 20)*(establishment.employment_lag1 < 50)....0.0 sec
                    w20slope=paris.establishment.w20*(establishment.employment_lag1 - 20)....0.0 sec
                    w3=(establishment.employment_lag1 >= 3)*(establishment.employment_lag1 < 6)....0.0 sec
                    w3slope=paris.establishment.w3*(establishment.employment_lag1 - 3)....0.0 sec
                    w50=(establishment.employment_lag1 >= 50)*(establishment.employment_lag1 < 100)....0.0 sec
                    w50slope=paris.establishment.w50*(establishment.employment_lag1 - 50)....0.0 sec
                    w6=(establishment.employment_lag1 >= 6)*(establishment.employment_lag1 < 10)....0.0 sec
                    w6slope=paris.establishment.w6*(establishment.employment_lag1 - 6)....0.0 sec
                    Choice set size: 2
                EDM chunk 1 out of 1.: completed.........................3.4 sec
            Running Establishment Disappearance Model (from paris.models.establishment_disappearance_model): completed...3.5 sec
            Running Establishment Evolution Model (from paris.models.establishment_evolution_model): started on Tue Apr 10 05:22:18 2012
                (paris.establishment.year_lag1 != paris.establishment.year)*(paris.establishment.emp_250_lag1)*(establishment.building_id>0)
                    opus_core.variables.VVV_lagLLL
                        paris.establishment.year.........................0.1 sec
                        paris.establishment.year.........................0.0 sec
                    opus_core.variables.VVV_lagLLL: completed............0.4 sec
                    opus_core.variables.VVV_lagLLL
                        emp_250 = (establishment.employment < 250).astype('i')....0.1 sec
                    opus_core.variables.VVV_lagLLL: completed............0.4 sec
                (paris.establishment.year_lag1 != paris.establishment.year)*(paris.establishment.emp_250_lag1)*(establishment.building_id>0): completed...0.9 sec
                paris.establishment.ln_emp_ratio
                    lnemp=ln_bounded(establishment.employment)...........0.0 sec
                    lnemp_pre=ln_bounded(establishment.employment_lag1)..0.0 sec
                paris.establishment.ln_emp_ratio: completed..............0.0 sec
                Total number of individuals: 311355
                EEM chunk 1 out of 1.: started on Tue Apr 10 05:22:19 2012
                    Number of agents in this chunk: 311355
                    EBAdefense_EBEwfb10_250 = establishment.EBADefense * establishment.EBEwfb10_250
                        (establishment.employment_lag1>9)*(establishment.employment_lag1<250)....0.0 sec
                    EBAdefense_EBEwfb10_250 = establishment.EBADefense * establishment.EBEwfb10_250: completed...0.0 sec
                    EBAdefense_EBEwfl10 = establishment.EBADefense * establishment.EBEwfl10
                        establishment.employment_lag1<10.................0.0 sec
                    EBAdefense_EBEwfl10 = establishment.EBADefense * establishment.EBEwfl10: completed...0.0 sec
                    EBAlimit_EBEwfb10_250 = establishment.ELimit * establishment.EBEwfb10_250
                        establishment.disaggregate(building.disaggregate(zone.limit))
                            building.disaggregate(zone.limit)............0.0 sec
                        establishment.disaggregate(building.disaggregate(zone.limit)): completed...0.1 sec
                    EBAlimit_EBEwfb10_250 = establishment.ELimit * establishment.EBEwfb10_250: completed...0.1 sec
                    EBAlimit_EBEwfl10 = establishment.ELimit * establishment.EBEwfl10....0.0 sec
                    EBAnwCty_EBEwfb10_250 = establishment.EBAnwCty * establishment.EBEwfb10_250....0.0 sec
                    EBAnwCty_EBEwfl10 = establishment.EBAnwCty * establishment.EBEwfl10....0.0 sec
                    EBAparis_EBEwfb10_250 = establishment.EBAparis * establishment.EBEwfb10_250....0.0 sec
                    EBAparis_EBEwfl10 = establishment.EBAparis * establishment.EBEwfl10....0.0 sec
                    EBLCprice_EBEwfb10_250 = establishment.ELPB * establishment.EBEwfb10_250....0.0 sec
                    EBLCprice_EBEwfl10 = establishment.ELPB * establishment.EBEwfl10....0.0 sec
                    ECNGsubw_EBEwfb10_250 = establishment.ENGsubwSP * establishment.EBEwfb10_250....0.0 sec
                    ECNGsubw_EBEwfl10 = establishment.ENGsubwSP * establishment.EBEwfl10....0.0 sec
                    ECNGtrain_EBEwfb10_250 = establishment.ENGtrainSt * establishment.EBEwfb10_250....0.0 sec
                    ECNGtrain_EBEwfl10 = establishment.ENGtrainSt * establishment.EBEwfl10....0.0 sec
                    ECPBhghInc_EBEwfb10_250 = establishment.EPBhghInc * establishment.EBEwfb10_250....0.0 sec
                    ECPBhghInc_EBEwfl10 = establishment.EPBhghInc * establishment.EBEwfl10....0.0 sec
                    ECPBlowInc_EBEwfl10 = establishment.EPBlowInc * establishment.EBEwfl10....0.0 sec
                    ECPR0Ac_EBEwfb10_250 = establishment.ERam0 * establishment.EBEwfb10_250....0.0 sec
                    ECPR0Ac_EBEwfl10 = establishment.ERam0 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE1_EBEwfb10_250 = establishment.ETPNiv1 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE1_EBEwfl10 = establishment.ETPNiv1 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE2_EBEwfb10_250 = establishment.ETPNiv2 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE2_EBEwfl10 = establishment.ETPNiv2 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE3_EBEwfb10_250 = establishment.ETPNiv3 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE3_EBEwfl10 = establishment.ETPNiv3 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE4_EBEwfb10_250 = establishment.ETPNiv4 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE4_EBEwfl10 = establishment.ETPNiv4 * establishment.EBEwfl10....0.0 sec
                    ECQRdstPop_EBEwfb10_250 = establishment.ERRdensPop * establishment.EBEwfb10_250....0.0 sec
                    ECQRdstPop_EBEwfl10 = establishment.ERRdensPop * establishment.EBEwfl10....0.0 sec
                    ECRFproTax_EBEwfb10_250 = establishment.ERItaxPro * establishment.EBEwfb10_250....0.0 sec
                    ECRFproTax_EBEwfl10 = establishment.ERItaxPro * establishment.EBEwfl10....0.0 sec
                    ECTDTcD_EBEwfb10_250 = establishment.ECTDTcD * establishment.EBEwfb10_250....0.0 sec
                    ECTDTcD_EBEwfl10 = establishment.ECTDTcD * establishment.EBEwfl10....0.0 sec
                    ECTDVpD_EBEwfb10_250 = establishment.ECTDVpD * establishment.EBEwfb10_250....0.0 sec
                    ECTDVpD_EBEwfl10 = establishment.ECTDVpD * establishment.EBEwfl10....0.0 sec
                EEM chunk 1 out of 1.: completed.........................0.9 sec
                rmse_ln_emp_ratio = numpy.sqrt(establishment.disaggregate(sector.aggregate(establishment._init_error_ln_emp_ratio**2, function=mean)))
                    sector.aggregate(establishment._init_error_ln_emp_ratio**2,function=mean)
                        establishment._init_error_ln_emp_ratio**2........0.0 sec
                    sector.aggregate(establishment._init_error_ln_emp_ratio**2,function=mean): completed...0.0 sec
                rmse_ln_emp_ratio = numpy.sqrt(establishment.disaggregate(sector.aggregate(establishment._init_error_ln_emp_ratio**2, function=mean))): completed...0.0 sec
            Running Establishment Evolution Model (from paris.models.establishment_evolution_model): completed...2.0 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:22:20 2012
                paris.establishment.emp_pred
                    emp_pre1=establishment.employment_lag1...............0.0 sec
                paris.establishment.emp_pred: completed..................0.0 sec
                (establishment.disappeared == 0)*(establishment.building_id>0)*(paris.establishment.year_lag1 != pari.establishment.year)*(paris.establishment.emp_250_lag1)....0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.0 sec
            Running Establishment Reappearance Model (from paris.models.establishment_reappearance_model): started on Tue Apr 10 05:22:20 2012
                _actual_ = control_total.aggregate(establishment.employment)....0.0 sec

                (establishment.disappeared == 1)*(paris.establishment.emp_250)
                    emp_250 = (establishment.employment < 250).astype('i')....0.0 sec
                (establishment.disappeared == 1)*(paris.establishment.emp_250): completed...0.0 sec
                
                +-----------+-------------+--------+--------+------------+---------+----+------+
                | sector_id | disappeared | actual | target | difference |  action | N  | note |
                +-----------+-------------+--------+--------+------------+---------+----+------+
                |     1     |      0      | 22891  | 23882  |    991     |   +991  | +1 |      |
                |     2     |      0      | 578483 | 676507 |   98024    |  +98024 | +1 |      |
                |     3     |      0      | 167479 | 237578 |   70099    |  +70099 | +1 |      |
                |     4     |      0      | 507267 | 669443 |   162176   | +162176 | +1 |      |
                |     5     |      0      | 273147 | 296690 |   23543    |  +23543 | +1 |      |
                |     6     |      0      | 239972 | 261489 |   21517    |  +21517 | +1 |      |
                |     7     |      0      | 74092  | 104795 |   30703    |  +30703 | +1 |      |
                |     8     |      0      | 932026 | 982038 |   50012    |  +50012 | +1 |      |
                |     9     |      0      | 401360 | 479336 |   77976    |  +77976 | +1 |      |
                |     10    |      0      | 809625 | 797179 |   -12446   |    0    | 0  |      |
                |     11    |      0      | 586567 | 617051 |   30484    |  +30484 | +1 |      |
                +-----------+-------------+--------+--------+------------+---------+----+------+
                
            Running Establishment Reappearance Model (from paris.models.establishment_reappearance_model): completed...1.7 sec
            Running Establishment Transition Model (from paris.models.transition_model): started on Tue Apr 10 05:22:22 2012
                _actual_ = control_total.aggregate(establishment.employment)....0.0 sec
                
                +-----------+-------------+--------+--------+------------+--------+------+
                | sector_id | disappeared | actual | target | difference | action | note |
                +-----------+-------------+--------+--------+------------+--------+------+
                |     1     |      0      | 23882  | 23882  |     0      |   0    |      |
                |     2     |      0      | 676507 | 676507 |     0      |   0    |      |
                |     3     |      0      | 237578 | 237578 |     0      |   0    |      |
                |     4     |      0      | 669443 | 669443 |     0      |   0    |      |
                |     5     |      0      | 296690 | 296690 |     0      |   0    |      |
                |     6     |      0      | 261489 | 261489 |     0      |   0    |      |
                |     7     |      0      | 104795 | 104795 |     0      |   0    |      |
                |     8     |      0      | 982038 | 982038 |     0      |   0    |      |
                |     9     |      0      | 479336 | 479336 |     0      |   0    |      |
                |     10    |      0      | 809625 | 797179 |   -12446   | -12446 |      |
                |     11    |      0      | 617051 | 617051 |     0      |   0    |      |
                +-----------+-------------+--------+--------+------------+--------+------+
                
            Running Establishment Transition Model (from paris.models.transition_model): completed...0.2 sec
            Running Establishment Location Choice Model (from urbansim.models.agent_location_choice_model): started on Tue Apr 10 05:22:22 2012
                (establishment.disappeared==0)*(establishment.building_id <= 0)....0.0 sec
                (establishment.employment)*(establishment.disappeared==0)....0.0 sec
                Total number of individuals: 80531
                ELCM chunk 1 out of 1.: started on Tue Apr 10 05:22:22 2012
                    Number of agents in this chunk: 80531
                    vacant_non_home_based_job_spaces = clip_to_zero(urbansim_zone.building.total_non_home_based_job_spaces - paris.building.number_of_non_home_based_jobs)
                        total_non_home_based_job_spaces = numpy.round(safe_array_divide(building.non_residential_sqft, urbansim_zone.building.building_sqft_per_job))Warning: invalid value encountered in divide
....0.0 sec
                        number_of_non_home_based_jobs = building.aggregate((establishment.employment)*(establishment.disappeared==0))....0.0 sec
                        WARNING: Negative values detected in function/method ''
                        WARNING: Minimum: -18289.0. Negative values clipped to zero.
                    vacant_non_home_based_job_spaces = clip_to_zero(urbansim_zone.building.total_non_home_based_job_spaces - paris.building.number_of_non_home_based_jobs): completed...0.0 sec
                    Available capacity: 1012389.0 units.
                    CLEmpTot_lag1 = ln_bounded(building.disaggregate(zone.emptot_lag1))
                        zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0),intermediates=[building])
                            building.aggregate(establishment.autogenvar293)
                                establishment.employment_lag1*(establishment.disappeared_lag1==0)
                                    opus_core.variables.VVV_lagLLL.......0.4 sec
                                establishment.employment_lag1*(establishment.disappeared_lag1==0): completed...0.4 sec
                            building.aggregate(establishment.autogenvar293): completed...0.4 sec
                        zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0),intermediates=[building]): completed...0.5 sec
                    CLEmpTot_lag1 = ln_bounded(building.disaggregate(zone.emptot_lag1)): completed...0.5 sec
                    CLOActPotSt = building.disaggregate(zone.CLOActPotSt)
                        ln_bounded(zone.CNOActPotSt)
                            1.0*zone.project99st.........................0.0 sec
                        ln_bounded(zone.CNOActPotSt): completed..........0.0 sec
                    CLOActPotSt = building.disaggregate(zone.CLOActPotSt): completed...0.0 sec
                    CNRKold = building.disaggregate(zone.ZPRKold)
                        (zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.CNRhh))*100....0.0 sec
                    CNRKold = building.disaggregate(zone.ZPRKold): completed...0.0 sec
                    CNRKyng = building.disaggregate(zone.ZPRKyng)
                        (zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.CNRhh))*100....0.0 sec
                    CNRKyng = building.disaggregate(zone.ZPRKyng): completed...0.0 sec
                    CPGZFU = building.disaggregate(zone.czfu)............0.0 sec
                    CPRchld111g = building.disaggregate(zone.CPRchld111g)
                        100*((zone.aggregate(household.children11>=1, intermediates = [building]))/(zone.CNRhh))
                            building.aggregate(household.autogenvar300)
                                household.children11>=1..................0.0 sec
                            building.aggregate(household.autogenvar300): completed...0.3 sec
                        100*((zone.aggregate(household.children11>=1, intermediates = [building]))/(zone.CNRhh)): completed...0.3 sec
                    CPRchld111g = building.disaggregate(zone.CPRchld111g): completed...0.3 sec
                    CQEsec10dst_lag1 = building.disaggregate(zone.emp_s10_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s10_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 10),intermediates=[building])
                                building.aggregate(establishment.autogenvar303)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==10)
                                        opus_core.variables.VVV_lagLLL...0.4 sec
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==10): completed...0.4 sec
                                building.aggregate(establishment.autogenvar303): completed...0.4 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 10),intermediates=[building]): completed...0.4 sec
                        zone.emp_s10_lag1/(1000*zone.CNOActPotSt): completed...0.4 sec
                    CQEsec10dst_lag1 = building.disaggregate(zone.emp_s10_lag1/(1000*zone.CNOActPotSt)): completed...0.4 sec
                    CQEsec11dst_lag1 = building.disaggregate(zone.emp_s11_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s11_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 11),intermediates=[building])
                                building.aggregate(establishment.autogenvar306)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==11)....0.0 sec
                                building.aggregate(establishment.autogenvar306): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 11),intermediates=[building]): completed...0.0 sec
                        zone.emp_s11_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec11dst_lag1 = building.disaggregate(zone.emp_s11_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec2dst_lag1 = building.disaggregate(zone.emp_s2_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s2_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 2),intermediates=[building])
                                building.aggregate(establishment.autogenvar309)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==2)....0.0 sec
                                building.aggregate(establishment.autogenvar309): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 2),intermediates=[building]): completed...0.0 sec
                        zone.emp_s2_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec2dst_lag1 = building.disaggregate(zone.emp_s2_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec3dst_lag1 = building.disaggregate(zone.emp_s3_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s3_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 3),intermediates=[building])
                                building.aggregate(establishment.autogenvar312)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==3)....0.0 sec
                                building.aggregate(establishment.autogenvar312): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 3),intermediates=[building]): completed...0.0 sec
                        zone.emp_s3_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec3dst_lag1 = building.disaggregate(zone.emp_s3_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec4dst_lag1 = building.disaggregate(zone.emp_s4_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s4_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 4),intermediates=[building])
                                building.aggregate(establishment.autogenvar315)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==4)....0.0 sec
                                building.aggregate(establishment.autogenvar315): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 4),intermediates=[building]): completed...0.0 sec
                        zone.emp_s4_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec4dst_lag1 = building.disaggregate(zone.emp_s4_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec5dst_lag1 = building.disaggregate(zone.emp_s5_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s5_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 5),intermediates=[building])
                                building.aggregate(establishment.autogenvar318)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==5)....0.0 sec
                                building.aggregate(establishment.autogenvar318): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 5),intermediates=[building]): completed...0.0 sec
                        zone.emp_s5_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec5dst_lag1 = building.disaggregate(zone.emp_s5_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec6dst_lag1 = building.disaggregate(zone.emp_s6_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s6_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 6),intermediates=[building])
                                building.aggregate(establishment.autogenvar321)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==6)....0.0 sec
                                building.aggregate(establishment.autogenvar321): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 6),intermediates=[building]): completed...0.0 sec
                        zone.emp_s6_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec6dst_lag1 = building.disaggregate(zone.emp_s6_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec7dst_lag1 = building.disaggregate(zone.emp_s7_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s7_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 7),intermediates=[building])
                                building.aggregate(establishment.autogenvar324)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==7)....0.0 sec
                                building.aggregate(establishment.autogenvar324): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 7),intermediates=[building]): completed...0.0 sec
                        zone.emp_s7_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec7dst_lag1 = building.disaggregate(zone.emp_s7_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec8dst_lag1 = building.disaggregate(zone.emp_s8_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s8_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 8),intermediates=[building])
                                building.aggregate(establishment.autogenvar327)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==8)....0.0 sec
                                building.aggregate(establishment.autogenvar327): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 8),intermediates=[building]): completed...0.0 sec
                        zone.emp_s8_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec8dst_lag1 = building.disaggregate(zone.emp_s8_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec9dst_lag1 = building.disaggregate(zone.emp_s9_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s9_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 9),intermediates=[building])
                                building.aggregate(establishment.autogenvar330)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==9)....0.0 sec
                                building.aggregate(establishment.autogenvar330): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 9),intermediates=[building]): completed...0.0 sec
                        zone.emp_s9_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec9dst_lag1 = building.disaggregate(zone.emp_s9_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    biotech = paris.building.zgp_id==22
                        zgp_id = building.disaggregate(zone.zgp_id)......0.0 sec
                    biotech = paris.building.zgp_id==22: completed.......0.1 sec
                    clichy_montfermeil = paris.building.zgp_id==21.......0.0 sec
                    confluence = paris.building.zgp_id==23...............0.0 sec
                    descates = paris.building.zgp_id==24.................0.0 sec
                    la_defense = paris.building.zgp_id==25...............0.0 sec
                    le_bourget = paris.building.zgp_id==26...............0.0 sec
                    paris_pole = (paris.building.zgp_id>=27)*(paris.building.zgp_id<=46) ....0.0 sec
                    pleyel = paris.building.zgp_id==47...................0.0 sec
                    roissy = paris.building.zgp_id==48...................0.0 sec
                    saclay = paris.building.zgp_id==49...................0.0 sec
                    val_de_france_gonesse = paris.building.zgp_id==50....0.0 sec
                    Choice set size: 50
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                ELCM chunk 1 out of 1.: completed.......................18.9 sec
            Running Establishment Location Choice Model (from urbansim.models.agent_location_choice_model): completed...18.9 sec
            Running Household Transition Model (from urbansim.models.transition_model): started on Tue Apr 10 05:22:41 2012
                _actual_ = control_total.aggregate(household._one_)......0.2 sec
                
                +---------+--------+--------+------------+--------+------+
                | hh_type | actual | target | difference | action | note |
                +---------+--------+--------+------------+--------+------+
                |    1    | 173788 | 176052 |    2264    | +2264  |      |
                |    2    | 420885 | 426368 |    5483    | +5483  |      |
                |    3    | 32330  | 32751  |    421     |  +421  |      |
                |    4    | 954867 | 967306 |   12439    | +12439 |      |
                |    5    | 358215 | 363147 |    4932    | +4932  |      |
                |    6    | 311048 | 315331 |    4283    | +4283  |      |
                |    7    | 36416  | 36917  |    501     |  +501  |      |
                |    8    | 570088 | 577937 |    7849    | +7849  |      |
                |    9    | 216346 | 216802 |    456     |  +456  |      |
                |    10   | 141418 | 141716 |    298     |  +298  |      |
                |    11   | 30314  | 30377  |     63     |  +63   |      |
                |    12   | 321269 | 321946 |    677     |  +677  |      |
                |    13   | 248488 | 249387 |    899     |  +899  |      |
                |    14   | 105640 | 106022 |    382     |  +382  |      |
                |    15   | 29221  | 29326  |    105     |  +105  |      |
                |    16   | 230585 | 231420 |    835     |  +835  |      |
                |    17   | 95259  | 96089  |    830     |  +830  |      |
                |    18   | 32189  | 32469  |    280     |  +280  |      |
                |    19   | 13219  | 13334  |    115     |  +115  |      |
                |    20   | 103797 | 104701 |    904     |  +904  |      |
                |    21   | 37582  | 37529  |    -53     |  -53   |      |
                |    22   | 12165  | 12148  |    -17     |  -17   |      |
                |    23   |  7542  |  7531  |    -11     |  -11   |      |
                |    24   | 70385  | 70287  |    -98     |  -98   |      |
                +---------+--------+--------+------------+--------+------+
                
            Running Household Transition Model (from urbansim.models.transition_model): completed...9.0 sec
            Running Household Relocation Model (from urbansim.models.agent_relocation_model): started on Tue Apr 10 05:22:50 2012
                Number of agents sampled based on rates: 563754
                Number of total movers: 602234
            Running Household Relocation Model (from urbansim.models.agent_relocation_model): completed...4.2 sec
            Running Household Location Choice Model (from urbansim.models.household_location_choice_model): started on Tue Apr 10 05:22:55 2012
                Total number of individuals: 602234
                HLCM chunk 1 out of 1.: started on Tue Apr 10 05:22:55 2012
                    Number of agents in this chunk: 602234
                    vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households)
                        number_of_households = building.number_of_agents(household)....0.5 sec
                        WARNING: Negative values detected in function/method ''
                        WARNING: Minimum: -436.0. Negative values clipped to zero.
                    vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households): completed...0.5 sec
                    Available capacity: 969594.0 units.
                    (urbansim_zone.building.vacant_residential_units>0)*(household.building_type_id==building.building_type_id)....0.0 sec
                    paris.building.M_DDDjt
                        M_1j0 = paris.building.number_of_households_of_type_1_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs1=building.aggregate(household.hh_type==1)
                                        household.hh_type==1.............0.5 sec
                                    _hhs1=building.aggregate(household.hh_type==1): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs1=building.aggregate(household.hh_type==1)
                                        household.hh_type==1.............0.0 sec
                                    _hhs1=building.aggregate(household.hh_type==1): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_1j0 = paris.building.number_of_households_of_type_1_lag2: completed...0.9 sec
                        TM_1t = alldata.aggregate_all(numpy.logical_and(household.hh_type==1, household.building_id<=0))
                            numpy.logical_and(household.hh_type==1,household.building_id<=0)....0.0 sec
                        TM_1t = alldata.aggregate_all(numpy.logical_and(household.hh_type==1, household.building_id<=0)): completed...0.1 sec
                        TM_10 = paris.alldata.number_of_households_of_type_1_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs1=alldata.aggregate_all(household.hh_type==1)
                                        household.hh_type==1.............0.5 sec
                                    _hhs1=alldata.aggregate_all(household.hh_type==1): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs1=alldata.aggregate_all(household.hh_type==1)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_10 = paris.alldata.number_of_households_of_type_1_lag2: completed...0.7 sec
                        V_ijt = urbansim_zone.building.vacant_residential_units....0.0 sec
                        V_ij0 = urbansim_zone.building.vacant_residential_units_lag2
                            opus_core.variables.VVV_lagLLL
                                vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households)
                                    number_of_households = building.number_of_agents(household)....1.0 sec
                                    WARNING: Negative values detected in function/method ''
                                    WARNING: Minimum: -22.0. Negative values clipped to zero.
                                vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households): completed...1.0 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        V_ij0 = urbansim_zone.building.vacant_residential_units_lag2: completed...1.0 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................2.7 sec
                    paris.building.M_DDDjt
                        M_2j0 = paris.building.number_of_households_of_type_2_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs2=building.aggregate(household.hh_type==2)
                                        household.hh_type==2.............0.5 sec
                                    _hhs2=building.aggregate(household.hh_type==2): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs2=building.aggregate(household.hh_type==2)
                                        household.hh_type==2.............0.0 sec
                                    _hhs2=building.aggregate(household.hh_type==2): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_2j0 = paris.building.number_of_households_of_type_2_lag2: completed...0.9 sec
                        TM_2t = alldata.aggregate_all(numpy.logical_and(household.hh_type==2, household.building_id<=0))
                            numpy.logical_and(household.hh_type==2,household.building_id<=0)....0.0 sec
                        TM_2t = alldata.aggregate_all(numpy.logical_and(household.hh_type==2, household.building_id<=0)): completed...0.1 sec
                        TM_20 = paris.alldata.number_of_households_of_type_2_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs2=alldata.aggregate_all(household.hh_type==2)
                                        household.hh_type==2.............0.5 sec
                                    _hhs2=alldata.aggregate_all(household.hh_type==2): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs2=alldata.aggregate_all(household.hh_type==2)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_20 = paris.alldata.number_of_households_of_type_2_lag2: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_3j0 = paris.building.number_of_households_of_type_3_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs3=building.aggregate(household.hh_type==3)
                                        household.hh_type==3.............0.5 sec
                                    _hhs3=building.aggregate(household.hh_type==3): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs3=building.aggregate(household.hh_type==3)
                                        household.hh_type==3.............0.0 sec
                                    _hhs3=building.aggregate(household.hh_type==3): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_3j0 = paris.building.number_of_households_of_type_3_lag2: completed...0.9 sec
                        TM_3t = alldata.aggregate_all(numpy.logical_and(household.hh_type==3, household.building_id<=0))
                            numpy.logical_and(household.hh_type==3,household.building_id<=0)....0.0 sec
                        TM_3t = alldata.aggregate_all(numpy.logical_and(household.hh_type==3, household.building_id<=0)): completed...0.1 sec
                        TM_30 = paris.alldata.number_of_households_of_type_3_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs3=alldata.aggregate_all(household.hh_type==3)
                                        household.hh_type==3.............0.5 sec
                                    _hhs3=alldata.aggregate_all(household.hh_type==3): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs3=alldata.aggregate_all(household.hh_type==3)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_30 = paris.alldata.number_of_households_of_type_3_lag2: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_4j0 = paris.building.number_of_households_of_type_4_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs4=building.aggregate(household.hh_type==4)
                                        household.hh_type==4.............0.5 sec
                                    _hhs4=building.aggregate(household.hh_type==4): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs4=building.aggregate(household.hh_type==4)
                                        household.hh_type==4.............0.0 sec
                                    _hhs4=building.aggregate(household.hh_type==4): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_4j0 = paris.building.number_of_households_of_type_4_lag2: completed...0.9 sec
                        TM_4t = alldata.aggregate_all(numpy.logical_and(household.hh_type==4, household.building_id<=0))
                            numpy.logical_and(household.hh_type==4,household.building_id<=0)....0.0 sec
                        TM_4t = alldata.aggregate_all(numpy.logical_and(household.hh_type==4, household.building_id<=0)): completed...0.1 sec
                        TM_40 = paris.alldata.number_of_households_of_type_4_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs4=alldata.aggregate_all(household.hh_type==4)
                                        household.hh_type==4.............0.5 sec
                                    _hhs4=alldata.aggregate_all(household.hh_type==4): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs4=alldata.aggregate_all(household.hh_type==4)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_40 = paris.alldata.number_of_households_of_type_4_lag2: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_5j0 = paris.building.number_of_households_of_type_5_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs5=building.aggregate(household.hh_type==5)
                                        household.hh_type==5.............0.5 sec
                                    _hhs5=building.aggregate(household.hh_type==5): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs5=building.aggregate(household.hh_type==5)
                                        household.hh_type==5.............0.0 sec
                                    _hhs5=building.aggregate(household.hh_type==5): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_5j0 = paris.building.number_of_households_of_type_5_lag2: completed...0.9 sec
                        TM_5t = alldata.aggregate_all(numpy.logical_and(household.hh_type==5, household.building_id<=0))
                            numpy.logical_and(household.hh_type==5,household.building_id<=0)....0.0 sec
                        TM_5t = alldata.aggregate_all(numpy.logical_and(household.hh_type==5, household.building_id<=0)): completed...0.1 sec
                        TM_50 = paris.alldata.number_of_households_of_type_5_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs5=alldata.aggregate_all(household.hh_type==5)
                                        household.hh_type==5.............0.5 sec
                                    _hhs5=alldata.aggregate_all(household.hh_type==5): completed...0.5 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.5 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs5=alldata.aggregate_all(household.hh_type==5)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_50 = paris.alldata.number_of_households_of_type_5_lag2: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_6j0 = paris.building.number_of_households_of_type_6_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs6=building.aggregate(household.hh_type==6)
                                        household.hh_type==6.............0.5 sec
                                    _hhs6=building.aggregate(household.hh_type==6): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs6=building.aggregate(household.hh_type==6)
                                        household.hh_type==6.............0.0 sec
                                    _hhs6=building.aggregate(household.hh_type==6): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_6j0 = paris.building.number_of_households_of_type_6_lag2: completed...0.9 sec
                        TM_6t = alldata.aggregate_all(numpy.logical_and(household.hh_type==6, household.building_id<=0))
                            numpy.logical_and(household.hh_type==6,household.building_id<=0)....0.0 sec
                        TM_6t = alldata.aggregate_all(numpy.logical_and(household.hh_type==6, household.building_id<=0)): completed...0.1 sec
                        TM_60 = paris.alldata.number_of_households_of_type_6_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs6=alldata.aggregate_all(household.hh_type==6)
                                        household.hh_type==6.............0.5 sec
                                    _hhs6=alldata.aggregate_all(household.hh_type==6): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs6=alldata.aggregate_all(household.hh_type==6)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_60 = paris.alldata.number_of_households_of_type_6_lag2: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_7j0 = paris.building.number_of_households_of_type_7_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs7=building.aggregate(household.hh_type==7)
                                        household.hh_type==7.............0.5 sec
                                    _hhs7=building.aggregate(household.hh_type==7): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs7=building.aggregate(household.hh_type==7)
                                        household.hh_type==7.............0.0 sec
                                    _hhs7=building.aggregate(household.hh_type==7): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_7j0 = paris.building.number_of_households_of_type_7_lag2: completed...1.0 sec
                        TM_7t = alldata.aggregate_all(numpy.logical_and(household.hh_type==7, household.building_id<=0))
                            numpy.logical_and(household.hh_type==7,household.building_id<=0)....0.0 sec
                        TM_7t = alldata.aggregate_all(numpy.logical_and(household.hh_type==7, household.building_id<=0)): completed...0.1 sec
                        TM_70 = paris.alldata.number_of_households_of_type_7_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs7=alldata.aggregate_all(household.hh_type==7)
                                        household.hh_type==7.............0.5 sec
                                    _hhs7=alldata.aggregate_all(household.hh_type==7): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs7=alldata.aggregate_all(household.hh_type==7)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_70 = paris.alldata.number_of_households_of_type_7_lag2: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_8j0 = paris.building.number_of_households_of_type_8_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs8=building.aggregate(household.hh_type==8)
                                        household.hh_type==8.............0.5 sec
                                    _hhs8=building.aggregate(household.hh_type==8): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs8=building.aggregate(household.hh_type==8)
                                        household.hh_type==8.............0.0 sec
                                    _hhs8=building.aggregate(household.hh_type==8): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.1 sec
                        M_8j0 = paris.building.number_of_households_of_type_8_lag2: completed...1.1 sec
                        TM_8t = alldata.aggregate_all(numpy.logical_and(household.hh_type==8, household.building_id<=0))
                            numpy.logical_and(household.hh_type==8,household.building_id<=0)....0.0 sec
                        TM_8t = alldata.aggregate_all(numpy.logical_and(household.hh_type==8, household.building_id<=0)): completed...0.2 sec
                        TM_80 = paris.alldata.number_of_households_of_type_8_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs8=alldata.aggregate_all(household.hh_type==8)
                                        household.hh_type==8.............0.5 sec
                                    _hhs8=alldata.aggregate_all(household.hh_type==8): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs8=alldata.aggregate_all(household.hh_type==8)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_80 = paris.alldata.number_of_households_of_type_8_lag2: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_9j0 = paris.building.number_of_households_of_type_9_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs9=building.aggregate(household.hh_type==9)
                                        household.hh_type==9.............0.5 sec
                                    _hhs9=building.aggregate(household.hh_type==9): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs9=building.aggregate(household.hh_type==9)
                                        household.hh_type==9.............0.0 sec
                                    _hhs9=building.aggregate(household.hh_type==9): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_9j0 = paris.building.number_of_households_of_type_9_lag2: completed...0.9 sec
                        TM_9t = alldata.aggregate_all(numpy.logical_and(household.hh_type==9, household.building_id<=0))
                            numpy.logical_and(household.hh_type==9,household.building_id<=0)....0.0 sec
                        TM_9t = alldata.aggregate_all(numpy.logical_and(household.hh_type==9, household.building_id<=0)): completed...0.1 sec
                        TM_90 = paris.alldata.number_of_households_of_type_9_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs9=alldata.aggregate_all(household.hh_type==9)
                                        household.hh_type==9.............0.5 sec
                                    _hhs9=alldata.aggregate_all(household.hh_type==9): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs9=alldata.aggregate_all(household.hh_type==9)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_90 = paris.alldata.number_of_households_of_type_9_lag2: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_10j0 = paris.building.number_of_households_of_type_10_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs10=building.aggregate(household.hh_type==10)
                                        household.hh_type==10............0.5 sec
                                    _hhs10=building.aggregate(household.hh_type==10): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs10=building.aggregate(household.hh_type==10)
                                        household.hh_type==10............0.0 sec
                                    _hhs10=building.aggregate(household.hh_type==10): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_10j0 = paris.building.number_of_households_of_type_10_lag2: completed...0.9 sec
                        TM_10t = alldata.aggregate_all(numpy.logical_and(household.hh_type==10, household.building_id<=0))
                            numpy.logical_and(household.hh_type==10,household.building_id<=0)....0.0 sec
                        TM_10t = alldata.aggregate_all(numpy.logical_and(household.hh_type==10, household.building_id<=0)): completed...0.1 sec
                        TM_100 = paris.alldata.number_of_households_of_type_10_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs10=alldata.aggregate_all(household.hh_type==10)
                                        household.hh_type==10............0.5 sec
                                    _hhs10=alldata.aggregate_all(household.hh_type==10): completed...0.5 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs10=alldata.aggregate_all(household.hh_type==10)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_100 = paris.alldata.number_of_households_of_type_10_lag2: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_11j0 = paris.building.number_of_households_of_type_11_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs11=building.aggregate(household.hh_type==11)
                                        household.hh_type==11............0.5 sec
                                    _hhs11=building.aggregate(household.hh_type==11): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs11=building.aggregate(household.hh_type==11)
                                        household.hh_type==11............0.0 sec
                                    _hhs11=building.aggregate(household.hh_type==11): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_11j0 = paris.building.number_of_households_of_type_11_lag2: completed...0.9 sec
                        TM_11t = alldata.aggregate_all(numpy.logical_and(household.hh_type==11, household.building_id<=0))
                            numpy.logical_and(household.hh_type==11,household.building_id<=0)....0.0 sec
                        TM_11t = alldata.aggregate_all(numpy.logical_and(household.hh_type==11, household.building_id<=0)): completed...0.1 sec
                        TM_110 = paris.alldata.number_of_households_of_type_11_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs11=alldata.aggregate_all(household.hh_type==11)
                                        household.hh_type==11............0.5 sec
                                    _hhs11=alldata.aggregate_all(household.hh_type==11): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs11=alldata.aggregate_all(household.hh_type==11)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_110 = paris.alldata.number_of_households_of_type_11_lag2: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_12j0 = paris.building.number_of_households_of_type_12_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs12=building.aggregate(household.hh_type==12)
                                        household.hh_type==12............0.5 sec
                                    _hhs12=building.aggregate(household.hh_type==12): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs12=building.aggregate(household.hh_type==12)
                                        household.hh_type==12............0.0 sec
                                    _hhs12=building.aggregate(household.hh_type==12): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.1 sec
                        M_12j0 = paris.building.number_of_households_of_type_12_lag2: completed...1.1 sec
                        TM_12t = alldata.aggregate_all(numpy.logical_and(household.hh_type==12, household.building_id<=0))
                            numpy.logical_and(household.hh_type==12,household.building_id<=0)....0.0 sec
                        TM_12t = alldata.aggregate_all(numpy.logical_and(household.hh_type==12, household.building_id<=0)): completed...0.1 sec
                        TM_120 = paris.alldata.number_of_households_of_type_12_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs12=alldata.aggregate_all(household.hh_type==12)
                                        household.hh_type==12............0.5 sec
                                    _hhs12=alldata.aggregate_all(household.hh_type==12): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs12=alldata.aggregate_all(household.hh_type==12)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_120 = paris.alldata.number_of_households_of_type_12_lag2: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................2.0 sec
                    paris.building.M_DDDjt
                        M_13j0 = paris.building.number_of_households_of_type_13_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs13=building.aggregate(household.hh_type==13)
                                        household.hh_type==13............0.5 sec
                                    _hhs13=building.aggregate(household.hh_type==13): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs13=building.aggregate(household.hh_type==13)
                                        household.hh_type==13............0.0 sec
                                    _hhs13=building.aggregate(household.hh_type==13): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_13j0 = paris.building.number_of_households_of_type_13_lag2: completed...1.0 sec
                        TM_13t = alldata.aggregate_all(numpy.logical_and(household.hh_type==13, household.building_id<=0))
                            numpy.logical_and(household.hh_type==13,household.building_id<=0)....0.0 sec
                        TM_13t = alldata.aggregate_all(numpy.logical_and(household.hh_type==13, household.building_id<=0)): completed...0.1 sec
                        TM_130 = paris.alldata.number_of_households_of_type_13_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs13=alldata.aggregate_all(household.hh_type==13)
                                        household.hh_type==13............0.5 sec
                                    _hhs13=alldata.aggregate_all(household.hh_type==13): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs13=alldata.aggregate_all(household.hh_type==13)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_130 = paris.alldata.number_of_households_of_type_13_lag2: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_14j0 = paris.building.number_of_households_of_type_14_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs14=building.aggregate(household.hh_type==14)
                                        household.hh_type==14............0.5 sec
                                    _hhs14=building.aggregate(household.hh_type==14): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs14=building.aggregate(household.hh_type==14)
                                        household.hh_type==14............0.0 sec
                                    _hhs14=building.aggregate(household.hh_type==14): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_14j0 = paris.building.number_of_households_of_type_14_lag2: completed...1.0 sec
                        TM_14t = alldata.aggregate_all(numpy.logical_and(household.hh_type==14, household.building_id<=0))
                            numpy.logical_and(household.hh_type==14,household.building_id<=0)....0.0 sec
                        TM_14t = alldata.aggregate_all(numpy.logical_and(household.hh_type==14, household.building_id<=0)): completed...0.1 sec
                        TM_140 = paris.alldata.number_of_households_of_type_14_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs14=alldata.aggregate_all(household.hh_type==14)
                                        household.hh_type==14............0.5 sec
                                    _hhs14=alldata.aggregate_all(household.hh_type==14): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs14=alldata.aggregate_all(household.hh_type==14)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_140 = paris.alldata.number_of_households_of_type_14_lag2: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_15j0 = paris.building.number_of_households_of_type_15_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs15=building.aggregate(household.hh_type==15)
                                        household.hh_type==15............0.5 sec
                                    _hhs15=building.aggregate(household.hh_type==15): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs15=building.aggregate(household.hh_type==15)
                                        household.hh_type==15............0.0 sec
                                    _hhs15=building.aggregate(household.hh_type==15): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_15j0 = paris.building.number_of_households_of_type_15_lag2: completed...0.9 sec
                        TM_15t = alldata.aggregate_all(numpy.logical_and(household.hh_type==15, household.building_id<=0))
                            numpy.logical_and(household.hh_type==15,household.building_id<=0)....0.0 sec
                        TM_15t = alldata.aggregate_all(numpy.logical_and(household.hh_type==15, household.building_id<=0)): completed...0.1 sec
                        TM_150 = paris.alldata.number_of_households_of_type_15_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs15=alldata.aggregate_all(household.hh_type==15)
                                        household.hh_type==15............0.5 sec
                                    _hhs15=alldata.aggregate_all(household.hh_type==15): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs15=alldata.aggregate_all(household.hh_type==15)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_150 = paris.alldata.number_of_households_of_type_15_lag2: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_16j0 = paris.building.number_of_households_of_type_16_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs16=building.aggregate(household.hh_type==16)
                                        household.hh_type==16............0.5 sec
                                    _hhs16=building.aggregate(household.hh_type==16): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs16=building.aggregate(household.hh_type==16)
                                        household.hh_type==16............0.0 sec
                                    _hhs16=building.aggregate(household.hh_type==16): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_16j0 = paris.building.number_of_households_of_type_16_lag2: completed...0.9 sec
                        TM_16t = alldata.aggregate_all(numpy.logical_and(household.hh_type==16, household.building_id<=0))
                            numpy.logical_and(household.hh_type==16,household.building_id<=0)....0.0 sec
                        TM_16t = alldata.aggregate_all(numpy.logical_and(household.hh_type==16, household.building_id<=0)): completed...0.1 sec
                        TM_160 = paris.alldata.number_of_households_of_type_16_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs16=alldata.aggregate_all(household.hh_type==16)
                                        household.hh_type==16............0.5 sec
                                    _hhs16=alldata.aggregate_all(household.hh_type==16): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs16=alldata.aggregate_all(household.hh_type==16)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_160 = paris.alldata.number_of_households_of_type_16_lag2: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_17j0 = paris.building.number_of_households_of_type_17_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs17=building.aggregate(household.hh_type==17)
                                        household.hh_type==17............0.5 sec
                                    _hhs17=building.aggregate(household.hh_type==17): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs17=building.aggregate(household.hh_type==17)
                                        household.hh_type==17............0.0 sec
                                    _hhs17=building.aggregate(household.hh_type==17): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_17j0 = paris.building.number_of_households_of_type_17_lag2: completed...0.9 sec
                        TM_17t = alldata.aggregate_all(numpy.logical_and(household.hh_type==17, household.building_id<=0))
                            numpy.logical_and(household.hh_type==17,household.building_id<=0)....0.0 sec
                        TM_17t = alldata.aggregate_all(numpy.logical_and(household.hh_type==17, household.building_id<=0)): completed...0.1 sec
                        TM_170 = paris.alldata.number_of_households_of_type_17_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs17=alldata.aggregate_all(household.hh_type==17)
                                        household.hh_type==17............0.5 sec
                                    _hhs17=alldata.aggregate_all(household.hh_type==17): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs17=alldata.aggregate_all(household.hh_type==17)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_170 = paris.alldata.number_of_households_of_type_17_lag2: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_18j0 = paris.building.number_of_households_of_type_18_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs18=building.aggregate(household.hh_type==18)
                                        household.hh_type==18............0.5 sec
                                    _hhs18=building.aggregate(household.hh_type==18): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs18=building.aggregate(household.hh_type==18)
                                        household.hh_type==18............0.0 sec
                                    _hhs18=building.aggregate(household.hh_type==18): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_18j0 = paris.building.number_of_households_of_type_18_lag2: completed...1.0 sec
                        TM_18t = alldata.aggregate_all(numpy.logical_and(household.hh_type==18, household.building_id<=0))
                            numpy.logical_and(household.hh_type==18,household.building_id<=0)....0.0 sec
                        TM_18t = alldata.aggregate_all(numpy.logical_and(household.hh_type==18, household.building_id<=0)): completed...0.1 sec
                        TM_180 = paris.alldata.number_of_households_of_type_18_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs18=alldata.aggregate_all(household.hh_type==18)
                                        household.hh_type==18............0.5 sec
                                    _hhs18=alldata.aggregate_all(household.hh_type==18): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs18=alldata.aggregate_all(household.hh_type==18)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_180 = paris.alldata.number_of_households_of_type_18_lag2: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_19j0 = paris.building.number_of_households_of_type_19_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs19=building.aggregate(household.hh_type==19)
                                        household.hh_type==19............0.5 sec
                                    _hhs19=building.aggregate(household.hh_type==19): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs19=building.aggregate(household.hh_type==19)
                                        household.hh_type==19............0.0 sec
                                    _hhs19=building.aggregate(household.hh_type==19): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_19j0 = paris.building.number_of_households_of_type_19_lag2: completed...1.0 sec
                        TM_19t = alldata.aggregate_all(numpy.logical_and(household.hh_type==19, household.building_id<=0))
                            numpy.logical_and(household.hh_type==19,household.building_id<=0)....0.0 sec
                        TM_19t = alldata.aggregate_all(numpy.logical_and(household.hh_type==19, household.building_id<=0)): completed...0.1 sec
                        TM_190 = paris.alldata.number_of_households_of_type_19_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs19=alldata.aggregate_all(household.hh_type==19)
                                        household.hh_type==19............0.5 sec
                                    _hhs19=alldata.aggregate_all(household.hh_type==19): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs19=alldata.aggregate_all(household.hh_type==19)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_190 = paris.alldata.number_of_households_of_type_19_lag2: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_20j0 = paris.building.number_of_households_of_type_20_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs20=building.aggregate(household.hh_type==20)
                                        household.hh_type==20............0.5 sec
                                    _hhs20=building.aggregate(household.hh_type==20): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs20=building.aggregate(household.hh_type==20)
                                        household.hh_type==20............0.0 sec
                                    _hhs20=building.aggregate(household.hh_type==20): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_20j0 = paris.building.number_of_households_of_type_20_lag2: completed...1.0 sec
                        TM_20t = alldata.aggregate_all(numpy.logical_and(household.hh_type==20, household.building_id<=0))
                            numpy.logical_and(household.hh_type==20,household.building_id<=0)....0.0 sec
                        TM_20t = alldata.aggregate_all(numpy.logical_and(household.hh_type==20, household.building_id<=0)): completed...0.1 sec
                        TM_200 = paris.alldata.number_of_households_of_type_20_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs20=alldata.aggregate_all(household.hh_type==20)
                                        household.hh_type==20............0.5 sec
                                    _hhs20=alldata.aggregate_all(household.hh_type==20): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs20=alldata.aggregate_all(household.hh_type==20)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_200 = paris.alldata.number_of_households_of_type_20_lag2: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_21j0 = paris.building.number_of_households_of_type_21_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs21=building.aggregate(household.hh_type==21)
                                        household.hh_type==21............0.5 sec
                                    _hhs21=building.aggregate(household.hh_type==21): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs21=building.aggregate(household.hh_type==21)
                                        household.hh_type==21............0.0 sec
                                    _hhs21=building.aggregate(household.hh_type==21): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_21j0 = paris.building.number_of_households_of_type_21_lag2: completed...0.9 sec
                        TM_21t = alldata.aggregate_all(numpy.logical_and(household.hh_type==21, household.building_id<=0))
                            numpy.logical_and(household.hh_type==21,household.building_id<=0)....0.0 sec
                        TM_21t = alldata.aggregate_all(numpy.logical_and(household.hh_type==21, household.building_id<=0)): completed...0.1 sec
                        TM_210 = paris.alldata.number_of_households_of_type_21_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs21=alldata.aggregate_all(household.hh_type==21)
                                        household.hh_type==21............0.5 sec
                                    _hhs21=alldata.aggregate_all(household.hh_type==21): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs21=alldata.aggregate_all(household.hh_type==21)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_210 = paris.alldata.number_of_households_of_type_21_lag2: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_22j0 = paris.building.number_of_households_of_type_22_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs22=building.aggregate(household.hh_type==22)
                                        household.hh_type==22............0.5 sec
                                    _hhs22=building.aggregate(household.hh_type==22): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs22=building.aggregate(household.hh_type==22)
                                        household.hh_type==22............0.0 sec
                                    _hhs22=building.aggregate(household.hh_type==22): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_22j0 = paris.building.number_of_households_of_type_22_lag2: completed...0.9 sec
                        TM_22t = alldata.aggregate_all(numpy.logical_and(household.hh_type==22, household.building_id<=0))
                            numpy.logical_and(household.hh_type==22,household.building_id<=0)....0.0 sec
                        TM_22t = alldata.aggregate_all(numpy.logical_and(household.hh_type==22, household.building_id<=0)): completed...0.1 sec
                        TM_220 = paris.alldata.number_of_households_of_type_22_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs22=alldata.aggregate_all(household.hh_type==22)
                                        household.hh_type==22............0.5 sec
                                    _hhs22=alldata.aggregate_all(household.hh_type==22): completed...0.5 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs22=alldata.aggregate_all(household.hh_type==22)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_220 = paris.alldata.number_of_households_of_type_22_lag2: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_23j0 = paris.building.number_of_households_of_type_23_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs23=building.aggregate(household.hh_type==23)
                                        household.hh_type==23............0.5 sec
                                    _hhs23=building.aggregate(household.hh_type==23): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs23=building.aggregate(household.hh_type==23)
                                        household.hh_type==23............0.0 sec
                                    _hhs23=building.aggregate(household.hh_type==23): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_23j0 = paris.building.number_of_households_of_type_23_lag2: completed...0.9 sec
                        TM_23t = alldata.aggregate_all(numpy.logical_and(household.hh_type==23, household.building_id<=0))
                            numpy.logical_and(household.hh_type==23,household.building_id<=0)....0.0 sec
                        TM_23t = alldata.aggregate_all(numpy.logical_and(household.hh_type==23, household.building_id<=0)): completed...0.1 sec
                        TM_230 = paris.alldata.number_of_households_of_type_23_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs23=alldata.aggregate_all(household.hh_type==23)
                                        household.hh_type==23............0.5 sec
                                    _hhs23=alldata.aggregate_all(household.hh_type==23): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs23=alldata.aggregate_all(household.hh_type==23)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_230 = paris.alldata.number_of_households_of_type_23_lag2: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_24j0 = paris.building.number_of_households_of_type_24_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs24=building.aggregate(household.hh_type==24)
                                        household.hh_type==24............0.5 sec
                                    _hhs24=building.aggregate(household.hh_type==24): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs24=building.aggregate(household.hh_type==24)
                                        household.hh_type==24............0.0 sec
                                    _hhs24=building.aggregate(household.hh_type==24): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_24j0 = paris.building.number_of_households_of_type_24_lag2: completed...0.9 sec
                        TM_24t = alldata.aggregate_all(numpy.logical_and(household.hh_type==24, household.building_id<=0))
                            numpy.logical_and(household.hh_type==24,household.building_id<=0)....0.0 sec
                        TM_24t = alldata.aggregate_all(numpy.logical_and(household.hh_type==24, household.building_id<=0)): completed...0.1 sec
                        TM_240 = paris.alldata.number_of_households_of_type_24_lag2
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs24=alldata.aggregate_all(household.hh_type==24)
                                        household.hh_type==24............0.5 sec
                                    _hhs24=alldata.aggregate_all(household.hh_type==24): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs24=alldata.aggregate_all(household.hh_type==24)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_240 = paris.alldata.number_of_households_of_type_24_lag2: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    CDGartClse = building.disaggregate(zone.cdgartclse)..0.1 sec
                    CDGartFar = building.disaggregate(zone.cdgartfar)....0.0 sec
                    CDGhighwClse = building.disaggregate(zone.cdghighwclse)....0.1 sec
                    CDGhighwFar = building.disaggregate(zone.cdghighwfar)....0.1 sec
                    CLCrPriceF_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....3.2 sec
                    CLCrPriceH_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....3.4 sec
                    CLCsPriceF = ln_bounded(building.price)..............0.0 sec
                    CLCsPriceF_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.8 sec
                    CLCsPriceH_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.7 sec
                    CLRrUnitsF = ln_bounded(building.residential_units)..0.0 sec
                    CLRrUnitsH = ln_bounded(building.residential_units)..0.0 sec
                    CLRsUnitsF = ln_bounded(building.residential_units)..0.0 sec
                    CLRsUnitsH = ln_bounded(building.residential_units)..0.0 sec
                    CNGsubwSP_HBRcar0 = (household.cars==0)*(building.disaggregate(zone.csubway9))....1.0 sec
                    CNGsubwSP_HBRcar1g = (household.cars>=1)*(building.disaggregate(zone.csubway9))....1.0 sec
                    CNGtrainSt_HBRcar0 = (household.cars==0)*(building.disaggregate(zone.ctrain9))....1.0 sec
                    CNGtrainSt_HBRcar1g = (household.cars>=1)*(building.disaggregate(zone.ctrain9))....1.0 sec
                    CNRsUnitsH = building.residential_units..............0.0 sec
                    CPBMedInc_HBRmedInc = (household.lincomepc<=10.3)*(household.lincomepc>9.9)*((building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.lincomepc<=9.9, intermediates = [building])- zone.aggregate(household.lincomepc>10.3, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum))))*100)
                        (zone.aggregate(building.number_of_agents(household),function=sum))
                            building.number_of_agents(household).........0.5 sec
                        (zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.5 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.lincomepc<=9.9,intermediates=[building])-zone.aggregate(household.lincomepc>10.3,intermediates=[building])
                            building.aggregate(household.autogenvar103)
                                household.lincomepc>10.3.................0.0 sec
                            building.aggregate(household.autogenvar103): completed...0.2 sec
                            building.aggregate(household.autogenvar109)
                                household.lincomepc<=9.9.................0.0 sec
                            building.aggregate(household.autogenvar109): completed...0.2 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.lincomepc<=9.9,intermediates=[building])-zone.aggregate(household.lincomepc>10.3,intermediates=[building]): completed...0.4 sec
                    CPBMedInc_HBRmedInc = (household.lincomepc<=10.3)*(household.lincomepc>9.9)*((building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.lincomepc<=9.9, intermediates = [building])- zone.aggregate(household.lincomepc>10.3, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum))))*100): completed...2.8 sec
                    CPBhghInc_HBRhghInc = (household.lincomepc>10.3)*(building.disaggregate(zone.aggregate(household.lincomepc>10.3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.lincomepc>10.3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPBhghInc_HBRhghInc = (household.lincomepc>10.3)*(building.disaggregate(zone.aggregate(household.lincomepc>10.3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.2 sec
                    CPBlowInc_HBRlowInc = (household.lincomepc<=9.9)*(building.disaggregate(zone.aggregate(household.lincomepc<=9.9, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.lincomepc<=9.9,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPBlowInc_HBRlowInc = (household.lincomepc<=9.9)*(building.disaggregate(zone.aggregate(household.lincomepc<=9.9, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.2 sec
                    CPRKfrgn_KBRfrgn = (household.race_id==1)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.race_id==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar55)
                                household.race_id==1.....................0.0 sec
                            building.aggregate(household.autogenvar55): completed...0.2 sec
                        zone.aggregate(household.race_id==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRKfrgn_KBRfrgn = (household.race_id==1)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRKfrgn_KBRnoFrgn = (household.race_id==0)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)....1.1 sec
                    CPRKmidAge_KBRmidAge = ((household.age_of_head>35) * (household.age_of_head<=55))*(building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.age_of_head>55, intermediates = [building])- zone.aggregate(household.age_of_head<=35, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.age_of_head>55,intermediates=[building])-zone.aggregate(household.age_of_head<=35,intermediates=[building])
                            building.aggregate(household.autogenvar60)
                                household.age_of_head>55.................0.0 sec
                            building.aggregate(household.autogenvar60): completed...0.2 sec
                            building.aggregate(household.autogenvar63)
                                household.age_of_head<=35................0.0 sec
                            building.aggregate(household.autogenvar63): completed...0.2 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.age_of_head>55,intermediates=[building])-zone.aggregate(household.age_of_head<=35,intermediates=[building]): completed...0.4 sec
                    CPRKmidAge_KBRmidAge = ((household.age_of_head>35) * (household.age_of_head<=55))*(building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.age_of_head>55, intermediates = [building])- zone.aggregate(household.age_of_head<=35, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...2.2 sec
                    CPRKold_KBRold = (household.age_of_head>55)*(building.disaggregate(zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.age_of_head>55,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPRKold_KBRold = (household.age_of_head>55)*(building.disaggregate(zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.2 sec
                    CPRKyng_KBRyng = (household.age_of_head<=35)*(building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPRKyng_KBRyng = (household.age_of_head<=35)*(building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.2 sec
                    CPRam0_HBRam0 = (household.workers==0)*(building.disaggregate(zone.aggregate(household.workers==0, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers==0,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar168)
                                household.workers==0.....................0.0 sec
                            building.aggregate(household.autogenvar168): completed...0.2 sec
                        zone.aggregate(household.workers==0,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam0_HBRam0 = (household.workers==0)*(building.disaggregate(zone.aggregate(household.workers==0, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRam1_HBRam1 = (household.workers==1)*(building.disaggregate(zone.aggregate(household.workers==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar67)
                                household.workers==1.....................0.0 sec
                            building.aggregate(household.autogenvar67): completed...0.2 sec
                        zone.aggregate(household.workers==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam1_HBRam1 = (household.workers==1)*(building.disaggregate(zone.aggregate(household.workers==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRam1g_HBRam1g = (household.workers>=1)*(building.disaggregate(zone.aggregate(household.workers>=1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers>=1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar385)
                                household.workers>=1.....................0.0 sec
                            building.aggregate(household.autogenvar385): completed...0.2 sec
                        zone.aggregate(household.workers>=1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam1g_HBRam1g = (household.workers>=1)*(building.disaggregate(zone.aggregate(household.workers>=1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRam2g_HBRam2g = (household.workers>=2)*(building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar71)
                                household.workers>=2.....................0.0 sec
                            building.aggregate(household.autogenvar71): completed...0.2 sec
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam2g_HBRam2g = (household.workers>=2)*(building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2))
                        zone.aggregate(establishment.employment,function=sum)....0.0 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2)): completed...0.0 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.2 sec
                    HBRsmeDept = (household.previous_dpt==75)*(building.disaggregate(zone.dept==75))+(household.previous_dpt==77)*(building.disaggregate(zone.dept==77))+(household.previous_dpt==78)*(building.disaggregate(zone.dept==78))+(household.previous_dpt==91)*(building.disaggregate(zone.dept==91))+(household.previous_dpt==92)*(building.disaggregate(zone.dept==92))+(household.previous_dpt==93)*(building.disaggregate(zone.dept==93))+(household.previous_dpt==94)*(building.disaggregate(zone.dept==94))+(household.previous_dpt==95)*(building.disaggregate(zone.dept==95))
                        zone.dept==77....................................0.0 sec
                        zone.dept==78....................................0.0 sec
                        zone.dept==95....................................0.0 sec
                        zone.dept==91....................................0.0 sec
                    HBRsmeDept = (household.previous_dpt==75)*(building.disaggregate(zone.dept==75))+(household.previous_dpt==77)*(building.disaggregate(zone.dept==77))+(household.previous_dpt==78)*(building.disaggregate(zone.dept==78))+(household.previous_dpt==91)*(building.disaggregate(zone.dept==91))+(household.previous_dpt==92)*(building.disaggregate(zone.dept==92))+(household.previous_dpt==93)*(building.disaggregate(zone.dept==93))+(household.previous_dpt==94)*(building.disaggregate(zone.dept==94))+(household.previous_dpt==95)*(building.disaggregate(zone.dept==95)): completed...3.1 sec
                    ctdtco_HBRcar0 = (household.cars==0)*(building.ctdtco)
                        building.disaggregate(zone.ctdtco)...............0.0 sec
                    ctdtco_HBRcar0 = (household.cars==0)*(building.ctdtco): completed...1.1 sec
                    ctdtco_HBRcar1g = (household.cars>=1)*(building.ctdtco)....1.0 sec
                    ctdvpo_HBRcar0 = (household.cars==0)*(building.ctdvpo)....1.0 sec
                    ctdvpo_HBRcar1g = (household.cars>=1)*(building.ctdvpo)....1.0 sec
                    Choice set size: 50
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                HLCM chunk 1 out of 1.: completed................3 min, 37.1 sec
            Running Household Location Choice Model (from urbansim.models.household_location_choice_model): completed...3 min, 37.4 sec
            Running Real Estate Price Model (from urbansim.models.real_estate_price_model): started on Tue Apr 10 05:26:32 2012
                ln_price=ln(building.price)..............................0.0 sec
                Total number of individuals: 6500
                REPM chunk 1 out of 1.: started on Tue Apr 10 05:26:32 2012
                    Number of agents in this chunk: 6500
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc)
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh))
                            zone.aggregate(building.number_of_agents(household),function=sum)
                                building.number_of_agents(household).....0.5 sec
                            zone.aggregate(building.number_of_agents(household),function=sum): completed...0.5 sec
                            zone_id = household.disaggregate(building.zone_id)....0.2 sec
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh)): completed...0.8 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc): completed...0.8 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum)))
                            building.aggregate(household.autogenvar60)...0.2 sec
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum))): completed...0.2 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100: completed...0.2 sec
                    CRItaxBati = building.disaggregate(zone.bati)........0.0 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.2 sec
                REPM chunk 1 out of 1.: completed........................1.3 sec
            Running Real Estate Price Model (from urbansim.models.real_estate_price_model): completed...1.3 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:26:34 2012
                household.disaggregate(zone.dept)........................0.2 sec
            Running opus_core.simple_model.SimpleModel: completed........0.2 sec
            Writing datasets to cache for year 2001: started on Tue Apr 10 05:26:35 2012
                Flushing building
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2001/buildings doesn't exist and is created
                Flushing sector
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2001/sectors doesn't exist and is created
                Flushing home_based_status
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2001/home_based_status doesn't exist and is created
                Flushing zone
                Flushing household
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2001/households doesn't exist and is created
                Flushing development_event_history
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2001/development_event_history doesn't exist and is created
                Flushing target_vacancy
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2001/target_vacancies doesn't exist and is created
                Flushing building_type
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2001/building_types doesn't exist and is created
                Flushing building_sqft_per_job
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2001/building_sqft_per_job doesn't exist and is created
                Flushing choice
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2001/choice_set doesn't exist and is created
                Flushing establishment
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2001/establishment doesn't exist and is created
                Flushing development_project
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2001/development_projects doesn't exist and is created
            Writing datasets to cache for year 2001: completed..........20.6 sec
        Simulate year 2001: completed............................4 min, 47.2 sec
        Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/year_2001_log.txt
    Starting simulation for year 2001: completed.................4 min, 47.2 sec
Start simulation run: completed..................................4 min, 47.2 sec
Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
Running simulation for year 2001 in new process: completed.......4 min, 47.6 sec
Triggering travelmodel
Leaving travelmodel
Running simulation for year 2002 in new process: started on Tue Apr 10 05:26:55 2012
    Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
    Invoking: /usr/bin/python /workspace/opus/src/opus_core/model_coordinators/model_system.py -r /tmp/tmp1L9hHR/resources.pickle --log-file-name run_multiprocess.log
Cache Directory set to: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16
Start simulation run: started on Tue Apr 10 05:26:56 2012
    random seed = (784077897,)
    Starting simulation for year 2002: started on Tue Apr 10 05:26:56 2012
        Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
        Logging to file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/year_2002_log.txt
        Simulate year 2002: started on Tue Apr 10 05:26:56 2012
            Running Swap Datasets (from opus_core.models.swap_datasets): started on Tue Apr 10 05:26:56 2012....0.0 sec
            Running Swap Datasets (from opus_core.models.swap_datasets): started on Tue Apr 10 05:26:56 2012
                Backed up /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2002/zones to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2002/zones_ORIGINAL
                Renamed /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2002/zones_baseline to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2002/zones
            Running Swap Datasets (from opus_core.models.swap_datasets): completed...0.0 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:26:56 2012
                numpy.clip(vpo, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:26:56 2012
                numpy.clip(tco, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:26:56 2012
                numpy.clip(tcd, 0, 240)..................................0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:26:56 2012
                numpy.clip(vpd, 0, 240)..................................0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.0 sec
            Running Development Project Transition Model (from urbansim.models.real_estate_transition_model): started on Tue Apr 10 05:26:56 2012
                is_residential = building.disaggregate(building_type.is_residential)....0.1 sec
                is_residential = development_event_history.disaggregate(building_type.is_residential)....0.0 sec
                
                +----------------+-----------+-----------+------------+----------+
                | is_residential |   actual  |   target  | difference |  action  |
                +----------------+-----------+-----------+------------+----------+
                |       1        |  4954362  |  5002060  |   47698    | +47809.0 |
                |       0        | 382249150 | 369156079 | -13093071  |    0     |
                +----------------+-----------+-----------+------------+----------+
            Running Development Project Transition Model (from urbansim.models.real_estate_transition_model): completed...1.8 sec
            Running Non-Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): started on Tue Apr 10 05:26:58 2012
                is_non_residential = numpy.logical_not(urbansim_zone.development_project.is_residential)....0.0 sec
                Nothing to be done.
            Running Non-Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): completed...0.0 sec
            Running Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): started on Tue Apr 10 05:26:58 2012
                Total number of individuals: 4602
                DPLCM chunk 1 out of 1.: started on Tue Apr 10 05:26:58 2012
                    Number of agents in this chunk: 4602
                    developable_residential_units_capacity = clip_to_zero(building.residential_units_capacity - building.residential_units)....0.0 sec
                    Available capacity: 31837791 units.
                    (building.building_type_id==1)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==2)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==3)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==4)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    CBAPC = (building.disaggregate(zone.dept==92))+(building.disaggregate(zone.dept==93))+(building.disaggregate(zone.dept==94))
                        zone.dept==94....................................0.0 sec
                        zone.dept==92....................................0.0 sec
                        zone.dept==93....................................0.0 sec
                    CBAPC = (building.disaggregate(zone.dept==92))+(building.disaggregate(zone.dept==93))+(building.disaggregate(zone.dept==94)): completed...0.1 sec
                    CBAnwCty = building.disaggregate(zone.cvilnouvel)....0.0 sec
                    CBAparis = building.disaggregate(zone.dept==75)
                        zone.dept==75....................................0.0 sec
                    CBAparis = building.disaggregate(zone.dept==75): completed...0.0 sec
                    CDGCBD = building.disaggregate(zone.cd_chatelet).....0.0 sec
                    CDGart = building.disaggregate(zone.cdistart)/1000...0.0 sec
                    CDGhighw = building.disaggregate(zone.cdisthwy)/1000....0.0 sec
                    CLCrPriceF = ln_bounded(building.price)..............0.0 sec
                    CLCrPriceH = ln_bounded(building.price)..............0.0 sec
                    CLCsPriceH = ln_bounded(building.price)..............0.0 sec
                    CLGarea = building.disaggregate(zone.ZLGarea)
                        ln_bounded(zone.careakm2)........................0.0 sec
                    CLGarea = building.disaggregate(zone.ZLGarea): completed...0.1 sec
                    CNGsubwSP = building.disaggregate(zone.csubway9).....0.0 sec
                    CNGtrainSt = building.disaggregate(zone.ctrain9).....0.0 sec
                    CPBhghInc = building.disaggregate(zone.ZPBhghInc)
                        100*(zone.aggregate(household.lincomepc>10.3)/(zone.CNRhh))
                            zone.aggregate(building.number_of_agents(household),function=sum)
                                building.number_of_agents(household).....0.6 sec
                            zone.aggregate(building.number_of_agents(household),function=sum): completed...0.6 sec
                            household.lincomepc>10.3.....................0.0 sec
                            zone_id = household.disaggregate(building.zone_id)....0.2 sec
                        100*(zone.aggregate(household.lincomepc>10.3)/(zone.CNRhh)): completed...1.1 sec
                    CPBhghInc = building.disaggregate(zone.ZPBhghInc): completed...1.1 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc)
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh))
                            household.lincomepc<=9.9.....................0.0 sec
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh)): completed...0.2 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc): completed...0.2 sec
                    CPInoise = building.disaggregate(zone.cnoise)........0.0 sec
                    CPOforest = building.disaggregate(zone.cpbois).......0.0 sec
                    CPOhlth = building.disaggregate(zone.cpequipem_sante)....0.0 sec
                    CPOpark = building.disaggregate(zone.cpparc_jardin)..0.0 sec
                    CPOsport = building.disaggregate(zone.cpsport).......0.0 sec
                    CPOwater = building.disaggregate(zone.cpeau).........0.0 sec
                    CPRKfrgn = building.disaggregate(zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))))*100
                        zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household)))
                            building.aggregate(household.race_id==1)
                                household.race_id==1.....................0.0 sec
                            building.aggregate(household.race_id==1): completed...0.3 sec
                        zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))): completed...0.3 sec
                    CPRKfrgn = building.disaggregate(zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))))*100: completed...0.3 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum)))
                            building.aggregate(household.autogenvar60)
                                household.age_of_head>55.................0.0 sec
                            building.aggregate(household.autogenvar60): completed...0.3 sec
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum))): completed...0.3 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100: completed...0.3 sec
                    CPRKyng = building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar63)
                                household.age_of_head<=35................0.0 sec
                            building.aggregate(household.autogenvar63): completed...0.2 sec
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRKyng = building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.2 sec
                    CPRaft90 = building.disaggregate(zone.cpraft90)......0.0 sec
                    CPRam1 = building.disaggregate(zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.workers==1)
                                household.workers==1.....................0.0 sec
                            building.aggregate(household.workers==1): completed...0.3 sec
                        zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRam1 = building.disaggregate(zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRam2g = building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar71)
                                household.workers>=2.....................0.0 sec
                            building.aggregate(household.autogenvar71): completed...0.2 sec
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRam2g = building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRam3g = building.disaggregate(zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.workers>=3)
                                household.workers>=3.....................0.0 sec
                            building.aggregate(household.workers>=3): completed...0.2 sec
                        zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam3g = building.disaggregate(zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.2 sec
                    CPRbef15 = building.disaggregate(zone.cprbef15)......0.0 sec
                    CPRmemb2 = building.disaggregate(zone.aggregate(household.size==2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.size==2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar75)
                                household.size==2........................0.0 sec
                            building.aggregate(household.autogenvar75): completed...0.3 sec
                        zone.aggregate(household.size==2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRmemb2 = building.disaggregate(zone.aggregate(household.size==2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRmemb3g = building.disaggregate(zone.aggregate(household.size>=3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.size>=3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar78)
                                household.size>=3........................0.0 sec
                            building.aggregate(household.autogenvar78): completed...0.3 sec
                        zone.aggregate(household.size>=3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRmemb3g = building.disaggregate(zone.aggregate(household.size>=3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2))
                        zone.aggregate(establishment.employment,function=sum)....0.0 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2)): completed...0.0 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.2 sec
                    ctdvpo = building.disaggregate(zone.ctdvpo)..........0.0 sec
                    Choice set size: 10
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                DPLCM chunk 1 out of 1.: completed.......................4.8 sec
            Running Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): completed...4.8 sec
            Running Add Development Projects Quantity to Buildings (from urbansim_zone.models.add_projects_to_buildings): started on Tue Apr 10 05:27:03 2012....0.2 sec
            emp_250 = (establishment.employment < 250).astype('i').......0.0 sec
            Running Establishment Disappearance Model (from paris.models.establishment_disappearance_model): started on Tue Apr 10 05:27:03 2012
                Total number of individuals: 311181
                EDM chunk 1 out of 1.: started on Tue Apr 10 05:27:03 2012
                    Number of agents in this chunk: 311181
                    EBADefense = establishment.disaggregate(building.CBADefense)
                        building.disaggregate(zone.insee==92062)+building.disaggregate(zone.insee==92026)+building.disaggregate(zone.insee==92050)
                            zone.insee==92050............................0.0 sec
                            zone.insee==92026............................0.0 sec
                            zone.insee==92062............................0.0 sec
                        building.disaggregate(zone.insee==92062)+building.disaggregate(zone.insee==92026)+building.disaggregate(zone.insee==92050): completed...0.1 sec
                    EBADefense = establishment.disaggregate(building.CBADefense): completed...0.1 sec
                    EBAnwCty = establishment.disaggregate(building.CBAnwCty)....0.0 sec
                    EBAparis = establishment.disaggregate(building.disaggregate(zone.dept==75))
                        building.disaggregate(zone.dept==75).............0.0 sec
                    EBAparis = establishment.disaggregate(building.disaggregate(zone.dept==75)): completed...0.0 sec
                    ECTDTcD = establishment.disaggregate(building.ctdtcd)
                        building.disaggregate(zone.ctdtcd)...............0.0 sec
                    ECTDTcD = establishment.disaggregate(building.ctdtcd): completed...0.1 sec
                    ECTDVpD = establishment.disaggregate(building.ctdvpd)
                        building.disaggregate(zone.ctdvpd)...............0.0 sec
                    ECTDVpD = establishment.disaggregate(building.ctdvpd): completed...0.1 sec
                    ELPB = establishment.disaggregate(building.CLPB)
                        building.disaggregate(zone.ZCLPB)
                            ln_bounded(zone.aggregate(building.price*(building.building_type_id==6), function=sum)/zone.aggregate((building.building_type_id==6), function=sum))
                                building.price*(building.building_type_id==6)....0.0 sec
                                (building.building_type_id==6)...........0.0 sec
                            ln_bounded(zone.aggregate(building.price*(building.building_type_id==6), function=sum)/zone.aggregate((building.building_type_id==6), function=sum)): completed...0.0 sec
                        building.disaggregate(zone.ZCLPB): completed.....0.0 sec
                    ELPB = establishment.disaggregate(building.CLPB): completed...0.0 sec
                    ENGsubwSP = establishment.disaggregate(building.CNGsubwSP)....0.0 sec
                    ENGtrainSt = establishment.disaggregate(building.CNGtrainSt)....0.0 sec
                    EPBhghInc = establishment.disaggregate(building.CPBhghInc)/100....0.0 sec
                    EPBlowInc = establishment.disaggregate(building.CPBlowInc)/100....0.0 sec
                    ERItaxPro = establishment.disaggregate(building.CRItaxPro)
                        building.disaggregate(zone.taxpro)...............0.0 sec
                    ERItaxPro = establishment.disaggregate(building.CRItaxPro): completed...0.1 sec
                    ERRdensPop = establishment.disaggregate(building.CRRdensPop)....0.0 sec
                    ERam0 = establishment.disaggregate(building.CPRam0)/100
                        building.disaggregate(zone.ZPRam0)
                            (zone.aggregate(building.aggregate(household.workers==0))/(zone.CNRhh))*100
                                building.aggregate(household.workers==0)
                                    household.workers==0.................0.0 sec
                                building.aggregate(household.workers==0): completed...0.2 sec
                            (zone.aggregate(building.aggregate(household.workers==0))/(zone.CNRhh))*100: completed...0.2 sec
                        building.disaggregate(zone.ZPRam0): completed....0.3 sec
                    ERam0 = establishment.disaggregate(building.CPRam0)/100: completed...0.3 sec
                    ETPNiv1 = establishment.disaggregate(building.CTPNiv1)
                        building.disaggregate(zone.ctpniv1)..............0.0 sec
                    ETPNiv1 = establishment.disaggregate(building.CTPNiv1): completed...0.1 sec
                    ETPNiv2 = establishment.disaggregate(building.CTPNiv2)
                        building.disaggregate(zone.ctpniv2)..............0.0 sec
                    ETPNiv2 = establishment.disaggregate(building.CTPNiv2): completed...0.1 sec
                    ETPNiv3 = establishment.disaggregate(building.CTPNiv3)
                        building.disaggregate(zone.ctpniv3)..............0.0 sec
                    ETPNiv3 = establishment.disaggregate(building.CTPNiv3): completed...0.1 sec
                    ETPNiv4 = establishment.disaggregate(building.CTPNiv4)
                        building.disaggregate(zone.ctpniv4)..............0.0 sec
                    ETPNiv4 = establishment.disaggregate(building.CTPNiv4): completed...0.1 sec
                    emp = establishment.employment.......................0.0 sec
                    w10=(establishment.employment_lag1 >= 10)*(establishment.employment_lag1 < 20)
                        opus_core.variables.VVV_lagLLL...................0.4 sec
                    w10=(establishment.employment_lag1 >= 10)*(establishment.employment_lag1 < 20): completed...0.4 sec
                    w100=(establishment.employment_lag1 >= 100)..........0.0 sec
                    w100slope=paris.establishment.w100*(establishment.employment_lag1 - 100)....0.0 sec
                    w10slope=paris.establishment.w10*(establishment.employment_lag1 - 10)....0.0 sec
                    w2=(establishment.employment_lag1 >= 2)*(establishment.employment_lag1 < 3)....0.0 sec
                    w20=(establishment.employment_lag1 >= 20)*(establishment.employment_lag1 < 50)....0.0 sec
                    w20slope=paris.establishment.w20*(establishment.employment_lag1 - 20)....0.0 sec
                    w3=(establishment.employment_lag1 >= 3)*(establishment.employment_lag1 < 6)....0.0 sec
                    w3slope=paris.establishment.w3*(establishment.employment_lag1 - 3)....0.0 sec
                    w50=(establishment.employment_lag1 >= 50)*(establishment.employment_lag1 < 100)....0.0 sec
                    w50slope=paris.establishment.w50*(establishment.employment_lag1 - 50)....0.0 sec
                    w6=(establishment.employment_lag1 >= 6)*(establishment.employment_lag1 < 10)....0.0 sec
                    w6slope=paris.establishment.w6*(establishment.employment_lag1 - 6)....0.0 sec
                    Choice set size: 2
                EDM chunk 1 out of 1.: completed.........................3.6 sec
            Running Establishment Disappearance Model (from paris.models.establishment_disappearance_model): completed...3.7 sec
            Running Establishment Evolution Model (from paris.models.establishment_evolution_model): started on Tue Apr 10 05:27:07 2012
                (paris.establishment.year_lag1 != paris.establishment.year)*(paris.establishment.emp_250_lag1)*(establishment.building_id>0)
                    opus_core.variables.VVV_lagLLL
                        paris.establishment.year.........................0.1 sec
                        paris.establishment.year.........................0.0 sec
                    opus_core.variables.VVV_lagLLL: completed............0.4 sec
                    opus_core.variables.VVV_lagLLL
                        emp_250 = (establishment.employment < 250).astype('i')....0.1 sec
                    opus_core.variables.VVV_lagLLL: completed............0.4 sec
                (paris.establishment.year_lag1 != paris.establishment.year)*(paris.establishment.emp_250_lag1)*(establishment.building_id>0): completed...0.9 sec
                paris.establishment.ln_emp_ratio
                    lnemp=ln_bounded(establishment.employment)...........0.0 sec
                    lnemp_pre=ln_bounded(establishment.employment_lag1)..0.0 sec
                paris.establishment.ln_emp_ratio: completed..............0.0 sec
                Total number of individuals: 311181
                EEM chunk 1 out of 1.: started on Tue Apr 10 05:27:08 2012
                    Number of agents in this chunk: 311181
                    EBAdefense_EBEwfb10_250 = establishment.EBADefense * establishment.EBEwfb10_250
                        (establishment.employment_lag1>9)*(establishment.employment_lag1<250)....0.0 sec
                    EBAdefense_EBEwfb10_250 = establishment.EBADefense * establishment.EBEwfb10_250: completed...0.0 sec
                    EBAdefense_EBEwfl10 = establishment.EBADefense * establishment.EBEwfl10
                        establishment.employment_lag1<10.................0.0 sec
                    EBAdefense_EBEwfl10 = establishment.EBADefense * establishment.EBEwfl10: completed...0.0 sec
                    EBAlimit_EBEwfb10_250 = establishment.ELimit * establishment.EBEwfb10_250
                        establishment.disaggregate(building.disaggregate(zone.limit))
                            building.disaggregate(zone.limit)............0.1 sec
                        establishment.disaggregate(building.disaggregate(zone.limit)): completed...0.1 sec
                    EBAlimit_EBEwfb10_250 = establishment.ELimit * establishment.EBEwfb10_250: completed...0.1 sec
                    EBAlimit_EBEwfl10 = establishment.ELimit * establishment.EBEwfl10....0.0 sec
                    EBAnwCty_EBEwfb10_250 = establishment.EBAnwCty * establishment.EBEwfb10_250....0.0 sec
                    EBAnwCty_EBEwfl10 = establishment.EBAnwCty * establishment.EBEwfl10....0.0 sec
                    EBAparis_EBEwfb10_250 = establishment.EBAparis * establishment.EBEwfb10_250....0.0 sec
                    EBAparis_EBEwfl10 = establishment.EBAparis * establishment.EBEwfl10....0.0 sec
                    EBLCprice_EBEwfb10_250 = establishment.ELPB * establishment.EBEwfb10_250....0.0 sec
                    EBLCprice_EBEwfl10 = establishment.ELPB * establishment.EBEwfl10....0.0 sec
                    ECNGsubw_EBEwfb10_250 = establishment.ENGsubwSP * establishment.EBEwfb10_250....0.0 sec
                    ECNGsubw_EBEwfl10 = establishment.ENGsubwSP * establishment.EBEwfl10....0.0 sec
                    ECNGtrain_EBEwfb10_250 = establishment.ENGtrainSt * establishment.EBEwfb10_250....0.0 sec
                    ECNGtrain_EBEwfl10 = establishment.ENGtrainSt * establishment.EBEwfl10....0.0 sec
                    ECPBhghInc_EBEwfb10_250 = establishment.EPBhghInc * establishment.EBEwfb10_250....0.0 sec
                    ECPBhghInc_EBEwfl10 = establishment.EPBhghInc * establishment.EBEwfl10....0.0 sec
                    ECPBlowInc_EBEwfl10 = establishment.EPBlowInc * establishment.EBEwfl10....0.0 sec
                    ECPR0Ac_EBEwfb10_250 = establishment.ERam0 * establishment.EBEwfb10_250....0.0 sec
                    ECPR0Ac_EBEwfl10 = establishment.ERam0 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE1_EBEwfb10_250 = establishment.ETPNiv1 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE1_EBEwfl10 = establishment.ETPNiv1 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE2_EBEwfb10_250 = establishment.ETPNiv2 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE2_EBEwfl10 = establishment.ETPNiv2 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE3_EBEwfb10_250 = establishment.ETPNiv3 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE3_EBEwfl10 = establishment.ETPNiv3 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE4_EBEwfb10_250 = establishment.ETPNiv4 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE4_EBEwfl10 = establishment.ETPNiv4 * establishment.EBEwfl10....0.0 sec
                    ECQRdstPop_EBEwfb10_250 = establishment.ERRdensPop * establishment.EBEwfb10_250....0.0 sec
                    ECQRdstPop_EBEwfl10 = establishment.ERRdensPop * establishment.EBEwfl10....0.0 sec
                    ECRFproTax_EBEwfb10_250 = establishment.ERItaxPro * establishment.EBEwfb10_250....0.0 sec
                    ECRFproTax_EBEwfl10 = establishment.ERItaxPro * establishment.EBEwfl10....0.0 sec
                    ECTDTcD_EBEwfb10_250 = establishment.ECTDTcD * establishment.EBEwfb10_250....0.0 sec
                    ECTDTcD_EBEwfl10 = establishment.ECTDTcD * establishment.EBEwfl10....0.0 sec
                    ECTDVpD_EBEwfb10_250 = establishment.ECTDVpD * establishment.EBEwfb10_250....0.0 sec
                    ECTDVpD_EBEwfl10 = establishment.ECTDVpD * establishment.EBEwfl10....0.0 sec
                EEM chunk 1 out of 1.: completed.........................0.9 sec
                rmse_ln_emp_ratio = numpy.sqrt(establishment.disaggregate(sector.aggregate(establishment._init_error_ln_emp_ratio**2, function=mean)))
                    sector.aggregate(establishment._init_error_ln_emp_ratio**2,function=mean)
                        establishment._init_error_ln_emp_ratio**2........0.0 sec
                    sector.aggregate(establishment._init_error_ln_emp_ratio**2,function=mean): completed...0.0 sec
                rmse_ln_emp_ratio = numpy.sqrt(establishment.disaggregate(sector.aggregate(establishment._init_error_ln_emp_ratio**2, function=mean))): completed...0.1 sec
            Running Establishment Evolution Model (from paris.models.establishment_evolution_model): completed...2.1 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:27:09 2012
                paris.establishment.emp_pred
                    emp_pre1=establishment.employment_lag1...............0.0 sec
                paris.establishment.emp_pred: completed..................0.0 sec
                (establishment.disappeared == 0)*(establishment.building_id>0)*(paris.establishment.year_lag1 != pari.establishment.year)*(paris.establishment.emp_250_lag1)....0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.0 sec
            Running Establishment Reappearance Model (from paris.models.establishment_reappearance_model): started on Tue Apr 10 05:27:09 2012
                _actual_ = control_total.aggregate(establishment.employment)....0.0 sec

                (establishment.disappeared == 1)*(paris.establishment.emp_250)
                    emp_250 = (establishment.employment < 250).astype('i')....0.0 sec
                (establishment.disappeared == 1)*(paris.establishment.emp_250): completed...0.0 sec
                
                +-----------+-------------+--------+--------+------------+---------+--------+------+
                | sector_id | disappeared | actual | target | difference |  action |   N    | note |
                +-----------+-------------+--------+--------+------------+---------+--------+------+
                |     1     |      0      | 24679  | 24127  |    -552    |    0    |   0    |      |
                |     2     |      0      | 537142 | 683448 |   146306   | +114725 | +11791 |      |
                |     3     |      0      | 146757 | 240016 |   93259    |  +80633 | +12319 |      |
                |     4     |      0      | 443742 | 676312 |   232570   | +179687 | +27358 |      |
                |     5     |      0      | 266348 | 299734 |   33386    |  +33386 |   +1   |      |
                |     6     |      0      | 230122 | 264172 |   34050    |  +30798 | +2855  |      |
                |     7     |      0      | 64155  | 105870 |   41715    |  +30238 | +4692  |      |
                |     8     |      0      | 855844 | 992114 |   136270   | +136270 |   +1   |      |
                |     9     |      0      | 361610 | 484253 |   122643   |  +85951 | +17423 |      |
                |     10    |      0      | 767360 | 805358 |   37998    |  +36829 | +5670  |      |
                |     11    |      0      | 560256 | 623381 |   63125    |  +35793 | +3351  |      |
                +-----------+-------------+--------+--------+------------+---------+--------+------+
                
            Running Establishment Reappearance Model (from paris.models.establishment_reappearance_model): completed...0.7 sec
            Running Establishment Transition Model (from paris.models.transition_model): started on Tue Apr 10 05:27:10 2012
                _actual_ = control_total.aggregate(establishment.employment)....0.0 sec
                
                +-----------+-------------+--------+--------+------------+--------+------+
                | sector_id | disappeared | actual | target | difference | action | note |
                +-----------+-------------+--------+--------+------------+--------+------+
                |     1     |      0      | 24679  | 24127  |    -552    |  -552  |      |
                |     2     |      0      | 651867 | 683448 |   31581    | +31581 |      |
                |     3     |      0      | 227390 | 240016 |   12626    | +12626 |      |
                |     4     |      0      | 623429 | 676312 |   52883    | +52883 |      |
                |     5     |      0      | 299734 | 299734 |     0      |   0    |      |
                |     6     |      0      | 260920 | 264172 |    3252    | +3252  |      |
                |     7     |      0      | 94393  | 105870 |   11477    | +11477 |      |
                |     8     |      0      | 992114 | 992114 |     0      |   0    |      |
                |     9     |      0      | 447561 | 484253 |   36692    | +36692 |      |
                |     10    |      0      | 804189 | 805358 |    1169    | +1169  |      |
                |     11    |      0      | 596049 | 623381 |   27332    | +27332 |      |
                +-----------+-------------+--------+--------+------------+--------+------+
                
            Running Establishment Transition Model (from paris.models.transition_model): completed...0.6 sec
            Running Establishment Location Choice Model (from urbansim.models.agent_location_choice_model): started on Tue Apr 10 05:27:10 2012
                (establishment.disappeared==0)*(establishment.building_id <= 0)....0.0 sec
                (establishment.employment)*(establishment.disappeared==0)....0.0 sec
                Total number of individuals: 122449
                ELCM chunk 1 out of 1.: started on Tue Apr 10 05:27:10 2012
                    Number of agents in this chunk: 122449
                    vacant_non_home_based_job_spaces = clip_to_zero(urbansim_zone.building.total_non_home_based_job_spaces - paris.building.number_of_non_home_based_jobs)
                        total_non_home_based_job_spaces = numpy.round(safe_array_divide(building.non_residential_sqft, urbansim_zone.building.building_sqft_per_job))Warning: invalid value encountered in divide
....0.0 sec
                        number_of_non_home_based_jobs = building.aggregate((establishment.employment)*(establishment.disappeared==0))....0.0 sec
                        WARNING: Negative values detected in function/method ''
                        WARNING: Minimum: -11793.0. Negative values clipped to zero.
                    vacant_non_home_based_job_spaces = clip_to_zero(urbansim_zone.building.total_non_home_based_job_spaces - paris.building.number_of_non_home_based_jobs): completed...0.0 sec
                    Available capacity: 1272444.0 units.
                    CLEmpTot_lag1 = ln_bounded(building.disaggregate(zone.emptot_lag1))
                        zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0),intermediates=[building])
                            building.aggregate(establishment.autogenvar293)
                                establishment.employment_lag1*(establishment.disappeared_lag1==0)
                                    opus_core.variables.VVV_lagLLL.......0.5 sec
                                establishment.employment_lag1*(establishment.disappeared_lag1==0): completed...0.5 sec
                            building.aggregate(establishment.autogenvar293): completed...0.5 sec
                        zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0),intermediates=[building]): completed...0.5 sec
                    CLEmpTot_lag1 = ln_bounded(building.disaggregate(zone.emptot_lag1)): completed...0.5 sec
                    CLOActPotSt = building.disaggregate(zone.CLOActPotSt)
                        ln_bounded(zone.CNOActPotSt)
                            1.0*zone.project99st.........................0.1 sec
                        ln_bounded(zone.CNOActPotSt): completed..........0.1 sec
                    CLOActPotSt = building.disaggregate(zone.CLOActPotSt): completed...0.1 sec
                    CNRKold = building.disaggregate(zone.ZPRKold)
                        (zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.CNRhh))*100....0.0 sec
                    CNRKold = building.disaggregate(zone.ZPRKold): completed...0.0 sec
                    CNRKyng = building.disaggregate(zone.ZPRKyng)
                        (zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.CNRhh))*100....0.0 sec
                    CNRKyng = building.disaggregate(zone.ZPRKyng): completed...0.0 sec
                    CPGZFU = building.disaggregate(zone.czfu)............0.0 sec
                    CPRchld111g = building.disaggregate(zone.CPRchld111g)
                        100*((zone.aggregate(household.children11>=1, intermediates = [building]))/(zone.CNRhh))
                            building.aggregate(household.autogenvar300)
                                household.children11>=1..................0.0 sec
                            building.aggregate(household.autogenvar300): completed...0.3 sec
                        100*((zone.aggregate(household.children11>=1, intermediates = [building]))/(zone.CNRhh)): completed...0.3 sec
                    CPRchld111g = building.disaggregate(zone.CPRchld111g): completed...0.3 sec
                    CQEsec10dst_lag1 = building.disaggregate(zone.emp_s10_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s10_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 10),intermediates=[building])
                                building.aggregate(establishment.autogenvar303)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==10)
                                        opus_core.variables.VVV_lagLLL...0.4 sec
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==10): completed...0.4 sec
                                building.aggregate(establishment.autogenvar303): completed...0.5 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 10),intermediates=[building]): completed...0.5 sec
                        zone.emp_s10_lag1/(1000*zone.CNOActPotSt): completed...0.5 sec
                    CQEsec10dst_lag1 = building.disaggregate(zone.emp_s10_lag1/(1000*zone.CNOActPotSt)): completed...0.5 sec
                    CQEsec11dst_lag1 = building.disaggregate(zone.emp_s11_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s11_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 11),intermediates=[building])
                                building.aggregate(establishment.autogenvar306)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==11)....0.0 sec
                                building.aggregate(establishment.autogenvar306): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 11),intermediates=[building]): completed...0.0 sec
                        zone.emp_s11_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec11dst_lag1 = building.disaggregate(zone.emp_s11_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec2dst_lag1 = building.disaggregate(zone.emp_s2_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s2_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 2),intermediates=[building])
                                building.aggregate(establishment.autogenvar309)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==2)....0.0 sec
                                building.aggregate(establishment.autogenvar309): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 2),intermediates=[building]): completed...0.0 sec
                        zone.emp_s2_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec2dst_lag1 = building.disaggregate(zone.emp_s2_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec3dst_lag1 = building.disaggregate(zone.emp_s3_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s3_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 3),intermediates=[building])
                                building.aggregate(establishment.autogenvar312)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==3)....0.0 sec
                                building.aggregate(establishment.autogenvar312): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 3),intermediates=[building]): completed...0.0 sec
                        zone.emp_s3_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec3dst_lag1 = building.disaggregate(zone.emp_s3_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec4dst_lag1 = building.disaggregate(zone.emp_s4_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s4_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 4),intermediates=[building])
                                building.aggregate(establishment.autogenvar315)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==4)....0.0 sec
                                building.aggregate(establishment.autogenvar315): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 4),intermediates=[building]): completed...0.0 sec
                        zone.emp_s4_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec4dst_lag1 = building.disaggregate(zone.emp_s4_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec5dst_lag1 = building.disaggregate(zone.emp_s5_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s5_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 5),intermediates=[building])
                                building.aggregate(establishment.autogenvar318)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==5)....0.0 sec
                                building.aggregate(establishment.autogenvar318): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 5),intermediates=[building]): completed...0.0 sec
                        zone.emp_s5_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec5dst_lag1 = building.disaggregate(zone.emp_s5_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec6dst_lag1 = building.disaggregate(zone.emp_s6_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s6_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 6),intermediates=[building])
                                building.aggregate(establishment.autogenvar321)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==6)....0.0 sec
                                building.aggregate(establishment.autogenvar321): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 6),intermediates=[building]): completed...0.0 sec
                        zone.emp_s6_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec6dst_lag1 = building.disaggregate(zone.emp_s6_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec7dst_lag1 = building.disaggregate(zone.emp_s7_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s7_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 7),intermediates=[building])
                                building.aggregate(establishment.autogenvar324)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==7)....0.0 sec
                                building.aggregate(establishment.autogenvar324): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 7),intermediates=[building]): completed...0.0 sec
                        zone.emp_s7_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec7dst_lag1 = building.disaggregate(zone.emp_s7_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec8dst_lag1 = building.disaggregate(zone.emp_s8_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s8_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 8),intermediates=[building])
                                building.aggregate(establishment.autogenvar327)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==8)....0.0 sec
                                building.aggregate(establishment.autogenvar327): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 8),intermediates=[building]): completed...0.0 sec
                        zone.emp_s8_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec8dst_lag1 = building.disaggregate(zone.emp_s8_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec9dst_lag1 = building.disaggregate(zone.emp_s9_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s9_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 9),intermediates=[building])
                                building.aggregate(establishment.autogenvar330)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==9)....0.0 sec
                                building.aggregate(establishment.autogenvar330): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 9),intermediates=[building]): completed...0.0 sec
                        zone.emp_s9_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec9dst_lag1 = building.disaggregate(zone.emp_s9_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    biotech = paris.building.zgp_id==22
                        zgp_id = building.disaggregate(zone.zgp_id)......0.0 sec
                    biotech = paris.building.zgp_id==22: completed.......0.0 sec
                    clichy_montfermeil = paris.building.zgp_id==21.......0.0 sec
                    confluence = paris.building.zgp_id==23...............0.0 sec
                    descates = paris.building.zgp_id==24.................0.0 sec
                    la_defense = paris.building.zgp_id==25...............0.0 sec
                    le_bourget = paris.building.zgp_id==26...............0.0 sec
                    paris_pole = (paris.building.zgp_id>=27)*(paris.building.zgp_id<=46) ....0.0 sec
                    pleyel = paris.building.zgp_id==47...................0.0 sec
                    roissy = paris.building.zgp_id==48...................0.0 sec
                    saclay = paris.building.zgp_id==49...................0.0 sec
                    val_de_france_gonesse = paris.building.zgp_id==50....0.0 sec
                    Choice set size: 50
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 3 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                ELCM chunk 1 out of 1.: completed.......................27.1 sec
            Running Establishment Location Choice Model (from urbansim.models.agent_location_choice_model): completed...27.2 sec
            Running Household Transition Model (from urbansim.models.transition_model): started on Tue Apr 10 05:27:37 2012
                _actual_ = control_total.aggregate(household._one_)......0.2 sec
                
                +---------+--------+--------+------------+--------+------+
                | hh_type | actual | target | difference | action | note |
                +---------+--------+--------+------------+--------+------+
                |    1    | 176052 | 178340 |    2288    | +2288  |      |
                |    2    | 426368 | 431910 |    5542    | +5542  |      |
                |    3    | 32751  | 33177  |    426     |  +426  |      |
                |    4    | 967306 | 979880 |   12574    | +12574 |      |
                |    5    | 363147 | 368136 |    4989    | +4989  |      |
                |    6    | 315331 | 319663 |    4332    | +4332  |      |
                |    7    | 36917  | 37425  |    508     |  +508  |      |
                |    8    | 577937 | 585878 |    7941    | +7941  |      |
                |    9    | 216802 | 217253 |    451     |  +451  |      |
                |    10   | 141716 | 142010 |    294     |  +294  |      |
                |    11   | 30377  | 30441  |     64     |  +64   |      |
                |    12   | 321946 | 322615 |    669     |  +669  |      |
                |    13   | 249387 | 250283 |    896     |  +896  |      |
                |    14   | 106022 | 106403 |    381     |  +381  |      |
                |    15   | 29326  | 29432  |    106     |  +106  |      |
                |    16   | 231420 | 232252 |    832     |  +832  |      |
                |    17   | 96089  | 96923  |    834     |  +834  |      |
                |    18   | 32469  | 32751  |    282     |  +282  |      |
                |    19   | 13334  | 13450  |    116     |  +116  |      |
                |    20   | 104701 | 105610 |    909     |  +909  |      |
                |    21   | 37529  | 37476  |    -53     |  -53   |      |
                |    22   | 12148  | 12131  |    -17     |  -17   |      |
                |    23   |  7531  |  7520  |    -11     |  -11   |      |
                |    24   | 70287  | 70186  |    -101    |  -101  |      |
                +---------+--------+--------+------------+--------+------+
                
            Running Household Transition Model (from urbansim.models.transition_model): completed...9.1 sec
            Running Household Relocation Model (from urbansim.models.agent_relocation_model): started on Tue Apr 10 05:27:47 2012
                Number of agents sampled based on rates: 567941
                Number of total movers: 606622
            Running Household Relocation Model (from urbansim.models.agent_relocation_model): completed...4.2 sec
            Running Household Location Choice Model (from urbansim.models.household_location_choice_model): started on Tue Apr 10 05:27:51 2012
                Total number of individuals: 606622
                HLCM chunk 1 out of 1.: started on Tue Apr 10 05:27:51 2012
                    Number of agents in this chunk: 606622
                    vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households)
                        number_of_households = building.number_of_agents(household)....0.4 sec
                        WARNING: Negative values detected in function/method ''
                        WARNING: Minimum: -160.0. Negative values clipped to zero.
                    vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households): completed...0.4 sec
                    Available capacity: 970281.0 units.
                    (urbansim_zone.building.vacant_residential_units>0)*(household.building_type_id==building.building_type_id)....0.0 sec
                    paris.building.M_DDDjt
                        M_1j0 = paris.building.number_of_households_of_type_1_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs1=building.aggregate(household.hh_type==1)
                                        household.hh_type==1.............0.5 sec
                                    _hhs1=building.aggregate(household.hh_type==1): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs1=building.aggregate(household.hh_type==1)
                                        household.hh_type==1.............0.0 sec
                                    _hhs1=building.aggregate(household.hh_type==1): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_1j0 = paris.building.number_of_households_of_type_1_lag3: completed...0.9 sec
                        TM_1t = alldata.aggregate_all(numpy.logical_and(household.hh_type==1, household.building_id<=0))
                            numpy.logical_and(household.hh_type==1,household.building_id<=0)....0.0 sec
                        TM_1t = alldata.aggregate_all(numpy.logical_and(household.hh_type==1, household.building_id<=0)): completed...0.1 sec
                        TM_10 = paris.alldata.number_of_households_of_type_1_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs1=alldata.aggregate_all(household.hh_type==1)
                                        household.hh_type==1.............0.5 sec
                                    _hhs1=alldata.aggregate_all(household.hh_type==1): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs1=alldata.aggregate_all(household.hh_type==1)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_10 = paris.alldata.number_of_households_of_type_1_lag3: completed...0.6 sec
                        V_ijt = urbansim_zone.building.vacant_residential_units....0.0 sec
                        V_ij0 = urbansim_zone.building.vacant_residential_units_lag3
                            opus_core.variables.VVV_lagLLL
                                vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households)
                                    number_of_households = building.number_of_agents(household)....1.0 sec
                                    WARNING: Negative values detected in function/method ''
                                    WARNING: Minimum: -22.0. Negative values clipped to zero.
                                vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households): completed...1.0 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        V_ij0 = urbansim_zone.building.vacant_residential_units_lag3: completed...1.0 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................2.6 sec
                    paris.building.M_DDDjt
                        M_2j0 = paris.building.number_of_households_of_type_2_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs2=building.aggregate(household.hh_type==2)
                                        household.hh_type==2.............0.5 sec
                                    _hhs2=building.aggregate(household.hh_type==2): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs2=building.aggregate(household.hh_type==2)
                                        household.hh_type==2.............0.0 sec
                                    _hhs2=building.aggregate(household.hh_type==2): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_2j0 = paris.building.number_of_households_of_type_2_lag3: completed...1.0 sec
                        TM_2t = alldata.aggregate_all(numpy.logical_and(household.hh_type==2, household.building_id<=0))
                            numpy.logical_and(household.hh_type==2,household.building_id<=0)....0.0 sec
                        TM_2t = alldata.aggregate_all(numpy.logical_and(household.hh_type==2, household.building_id<=0)): completed...0.1 sec
                        TM_20 = paris.alldata.number_of_households_of_type_2_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs2=alldata.aggregate_all(household.hh_type==2)
                                        household.hh_type==2.............0.5 sec
                                    _hhs2=alldata.aggregate_all(household.hh_type==2): completed...0.5 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.5 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs2=alldata.aggregate_all(household.hh_type==2)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_20 = paris.alldata.number_of_households_of_type_2_lag3: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_3j0 = paris.building.number_of_households_of_type_3_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs3=building.aggregate(household.hh_type==3)
                                        household.hh_type==3.............0.5 sec
                                    _hhs3=building.aggregate(household.hh_type==3): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs3=building.aggregate(household.hh_type==3)
                                        household.hh_type==3.............0.0 sec
                                    _hhs3=building.aggregate(household.hh_type==3): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_3j0 = paris.building.number_of_households_of_type_3_lag3: completed...0.9 sec
                        TM_3t = alldata.aggregate_all(numpy.logical_and(household.hh_type==3, household.building_id<=0))
                            numpy.logical_and(household.hh_type==3,household.building_id<=0)....0.0 sec
                        TM_3t = alldata.aggregate_all(numpy.logical_and(household.hh_type==3, household.building_id<=0)): completed...0.1 sec
                        TM_30 = paris.alldata.number_of_households_of_type_3_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs3=alldata.aggregate_all(household.hh_type==3)
                                        household.hh_type==3.............0.5 sec
                                    _hhs3=alldata.aggregate_all(household.hh_type==3): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs3=alldata.aggregate_all(household.hh_type==3)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_30 = paris.alldata.number_of_households_of_type_3_lag3: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_4j0 = paris.building.number_of_households_of_type_4_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs4=building.aggregate(household.hh_type==4)
                                        household.hh_type==4.............0.5 sec
                                    _hhs4=building.aggregate(household.hh_type==4): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs4=building.aggregate(household.hh_type==4)
                                        household.hh_type==4.............0.0 sec
                                    _hhs4=building.aggregate(household.hh_type==4): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_4j0 = paris.building.number_of_households_of_type_4_lag3: completed...1.0 sec
                        TM_4t = alldata.aggregate_all(numpy.logical_and(household.hh_type==4, household.building_id<=0))
                            numpy.logical_and(household.hh_type==4,household.building_id<=0)....0.0 sec
                        TM_4t = alldata.aggregate_all(numpy.logical_and(household.hh_type==4, household.building_id<=0)): completed...0.1 sec
                        TM_40 = paris.alldata.number_of_households_of_type_4_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs4=alldata.aggregate_all(household.hh_type==4)
                                        household.hh_type==4.............0.5 sec
                                    _hhs4=alldata.aggregate_all(household.hh_type==4): completed...0.7 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs4=alldata.aggregate_all(household.hh_type==4)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_40 = paris.alldata.number_of_households_of_type_4_lag3: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_5j0 = paris.building.number_of_households_of_type_5_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs5=building.aggregate(household.hh_type==5)
                                        household.hh_type==5.............0.5 sec
                                    _hhs5=building.aggregate(household.hh_type==5): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs5=building.aggregate(household.hh_type==5)
                                        household.hh_type==5.............0.0 sec
                                    _hhs5=building.aggregate(household.hh_type==5): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_5j0 = paris.building.number_of_households_of_type_5_lag3: completed...1.0 sec
                        TM_5t = alldata.aggregate_all(numpy.logical_and(household.hh_type==5, household.building_id<=0))
                            numpy.logical_and(household.hh_type==5,household.building_id<=0)....0.0 sec
                        TM_5t = alldata.aggregate_all(numpy.logical_and(household.hh_type==5, household.building_id<=0)): completed...0.1 sec
                        TM_50 = paris.alldata.number_of_households_of_type_5_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs5=alldata.aggregate_all(household.hh_type==5)
                                        household.hh_type==5.............0.5 sec
                                    _hhs5=alldata.aggregate_all(household.hh_type==5): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs5=alldata.aggregate_all(household.hh_type==5)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_50 = paris.alldata.number_of_households_of_type_5_lag3: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_6j0 = paris.building.number_of_households_of_type_6_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs6=building.aggregate(household.hh_type==6)
                                        household.hh_type==6.............0.5 sec
                                    _hhs6=building.aggregate(household.hh_type==6): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs6=building.aggregate(household.hh_type==6)
                                        household.hh_type==6.............0.0 sec
                                    _hhs6=building.aggregate(household.hh_type==6): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_6j0 = paris.building.number_of_households_of_type_6_lag3: completed...1.0 sec
                        TM_6t = alldata.aggregate_all(numpy.logical_and(household.hh_type==6, household.building_id<=0))
                            numpy.logical_and(household.hh_type==6,household.building_id<=0)....0.0 sec
                        TM_6t = alldata.aggregate_all(numpy.logical_and(household.hh_type==6, household.building_id<=0)): completed...0.1 sec
                        TM_60 = paris.alldata.number_of_households_of_type_6_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs6=alldata.aggregate_all(household.hh_type==6)
                                        household.hh_type==6.............0.5 sec
                                    _hhs6=alldata.aggregate_all(household.hh_type==6): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs6=alldata.aggregate_all(household.hh_type==6)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_60 = paris.alldata.number_of_households_of_type_6_lag3: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_7j0 = paris.building.number_of_households_of_type_7_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs7=building.aggregate(household.hh_type==7)
                                        household.hh_type==7.............0.5 sec
                                    _hhs7=building.aggregate(household.hh_type==7): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs7=building.aggregate(household.hh_type==7)
                                        household.hh_type==7.............0.0 sec
                                    _hhs7=building.aggregate(household.hh_type==7): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_7j0 = paris.building.number_of_households_of_type_7_lag3: completed...1.0 sec
                        TM_7t = alldata.aggregate_all(numpy.logical_and(household.hh_type==7, household.building_id<=0))
                            numpy.logical_and(household.hh_type==7,household.building_id<=0)....0.0 sec
                        TM_7t = alldata.aggregate_all(numpy.logical_and(household.hh_type==7, household.building_id<=0)): completed...0.1 sec
                        TM_70 = paris.alldata.number_of_households_of_type_7_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs7=alldata.aggregate_all(household.hh_type==7)
                                        household.hh_type==7.............0.5 sec
                                    _hhs7=alldata.aggregate_all(household.hh_type==7): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs7=alldata.aggregate_all(household.hh_type==7)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_70 = paris.alldata.number_of_households_of_type_7_lag3: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_8j0 = paris.building.number_of_households_of_type_8_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs8=building.aggregate(household.hh_type==8)
                                        household.hh_type==8.............0.5 sec
                                    _hhs8=building.aggregate(household.hh_type==8): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs8=building.aggregate(household.hh_type==8)
                                        household.hh_type==8.............0.0 sec
                                    _hhs8=building.aggregate(household.hh_type==8): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_8j0 = paris.building.number_of_households_of_type_8_lag3: completed...1.0 sec
                        TM_8t = alldata.aggregate_all(numpy.logical_and(household.hh_type==8, household.building_id<=0))
                            numpy.logical_and(household.hh_type==8,household.building_id<=0)....0.0 sec
                        TM_8t = alldata.aggregate_all(numpy.logical_and(household.hh_type==8, household.building_id<=0)): completed...0.1 sec
                        TM_80 = paris.alldata.number_of_households_of_type_8_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs8=alldata.aggregate_all(household.hh_type==8)
                                        household.hh_type==8.............0.5 sec
                                    _hhs8=alldata.aggregate_all(household.hh_type==8): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs8=alldata.aggregate_all(household.hh_type==8)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_80 = paris.alldata.number_of_households_of_type_8_lag3: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_9j0 = paris.building.number_of_households_of_type_9_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs9=building.aggregate(household.hh_type==9)
                                        household.hh_type==9.............0.5 sec
                                    _hhs9=building.aggregate(household.hh_type==9): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs9=building.aggregate(household.hh_type==9)
                                        household.hh_type==9.............0.0 sec
                                    _hhs9=building.aggregate(household.hh_type==9): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_9j0 = paris.building.number_of_households_of_type_9_lag3: completed...0.9 sec
                        TM_9t = alldata.aggregate_all(numpy.logical_and(household.hh_type==9, household.building_id<=0))
                            numpy.logical_and(household.hh_type==9,household.building_id<=0)....0.0 sec
                        TM_9t = alldata.aggregate_all(numpy.logical_and(household.hh_type==9, household.building_id<=0)): completed...0.1 sec
                        TM_90 = paris.alldata.number_of_households_of_type_9_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs9=alldata.aggregate_all(household.hh_type==9)
                                        household.hh_type==9.............0.5 sec
                                    _hhs9=alldata.aggregate_all(household.hh_type==9): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs9=alldata.aggregate_all(household.hh_type==9)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_90 = paris.alldata.number_of_households_of_type_9_lag3: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_10j0 = paris.building.number_of_households_of_type_10_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs10=building.aggregate(household.hh_type==10)
                                        household.hh_type==10............0.5 sec
                                    _hhs10=building.aggregate(household.hh_type==10): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs10=building.aggregate(household.hh_type==10)
                                        household.hh_type==10............0.0 sec
                                    _hhs10=building.aggregate(household.hh_type==10): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_10j0 = paris.building.number_of_households_of_type_10_lag3: completed...0.9 sec
                        TM_10t = alldata.aggregate_all(numpy.logical_and(household.hh_type==10, household.building_id<=0))
                            numpy.logical_and(household.hh_type==10,household.building_id<=0)....0.0 sec
                        TM_10t = alldata.aggregate_all(numpy.logical_and(household.hh_type==10, household.building_id<=0)): completed...0.1 sec
                        TM_100 = paris.alldata.number_of_households_of_type_10_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs10=alldata.aggregate_all(household.hh_type==10)
                                        household.hh_type==10............0.5 sec
                                    _hhs10=alldata.aggregate_all(household.hh_type==10): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs10=alldata.aggregate_all(household.hh_type==10)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_100 = paris.alldata.number_of_households_of_type_10_lag3: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_11j0 = paris.building.number_of_households_of_type_11_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs11=building.aggregate(household.hh_type==11)
                                        household.hh_type==11............0.5 sec
                                    _hhs11=building.aggregate(household.hh_type==11): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs11=building.aggregate(household.hh_type==11)
                                        household.hh_type==11............0.0 sec
                                    _hhs11=building.aggregate(household.hh_type==11): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_11j0 = paris.building.number_of_households_of_type_11_lag3: completed...0.9 sec
                        TM_11t = alldata.aggregate_all(numpy.logical_and(household.hh_type==11, household.building_id<=0))
                            numpy.logical_and(household.hh_type==11,household.building_id<=0)....0.0 sec
                        TM_11t = alldata.aggregate_all(numpy.logical_and(household.hh_type==11, household.building_id<=0)): completed...0.1 sec
                        TM_110 = paris.alldata.number_of_households_of_type_11_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs11=alldata.aggregate_all(household.hh_type==11)
                                        household.hh_type==11............0.5 sec
                                    _hhs11=alldata.aggregate_all(household.hh_type==11): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs11=alldata.aggregate_all(household.hh_type==11)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_110 = paris.alldata.number_of_households_of_type_11_lag3: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_12j0 = paris.building.number_of_households_of_type_12_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs12=building.aggregate(household.hh_type==12)
                                        household.hh_type==12............0.5 sec
                                    _hhs12=building.aggregate(household.hh_type==12): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs12=building.aggregate(household.hh_type==12)
                                        household.hh_type==12............0.0 sec
                                    _hhs12=building.aggregate(household.hh_type==12): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_12j0 = paris.building.number_of_households_of_type_12_lag3: completed...1.0 sec
                        TM_12t = alldata.aggregate_all(numpy.logical_and(household.hh_type==12, household.building_id<=0))
                            numpy.logical_and(household.hh_type==12,household.building_id<=0)....0.0 sec
                        TM_12t = alldata.aggregate_all(numpy.logical_and(household.hh_type==12, household.building_id<=0)): completed...0.1 sec
                        TM_120 = paris.alldata.number_of_households_of_type_12_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs12=alldata.aggregate_all(household.hh_type==12)
                                        household.hh_type==12............0.5 sec
                                    _hhs12=alldata.aggregate_all(household.hh_type==12): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs12=alldata.aggregate_all(household.hh_type==12)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_120 = paris.alldata.number_of_households_of_type_12_lag3: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_13j0 = paris.building.number_of_households_of_type_13_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs13=building.aggregate(household.hh_type==13)
                                        household.hh_type==13............0.5 sec
                                    _hhs13=building.aggregate(household.hh_type==13): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs13=building.aggregate(household.hh_type==13)
                                        household.hh_type==13............0.0 sec
                                    _hhs13=building.aggregate(household.hh_type==13): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_13j0 = paris.building.number_of_households_of_type_13_lag3: completed...1.0 sec
                        TM_13t = alldata.aggregate_all(numpy.logical_and(household.hh_type==13, household.building_id<=0))
                            numpy.logical_and(household.hh_type==13,household.building_id<=0)....0.0 sec
                        TM_13t = alldata.aggregate_all(numpy.logical_and(household.hh_type==13, household.building_id<=0)): completed...0.1 sec
                        TM_130 = paris.alldata.number_of_households_of_type_13_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs13=alldata.aggregate_all(household.hh_type==13)
                                        household.hh_type==13............0.5 sec
                                    _hhs13=alldata.aggregate_all(household.hh_type==13): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs13=alldata.aggregate_all(household.hh_type==13)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_130 = paris.alldata.number_of_households_of_type_13_lag3: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_14j0 = paris.building.number_of_households_of_type_14_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs14=building.aggregate(household.hh_type==14)
                                        household.hh_type==14............0.5 sec
                                    _hhs14=building.aggregate(household.hh_type==14): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs14=building.aggregate(household.hh_type==14)
                                        household.hh_type==14............0.0 sec
                                    _hhs14=building.aggregate(household.hh_type==14): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_14j0 = paris.building.number_of_households_of_type_14_lag3: completed...1.0 sec
                        TM_14t = alldata.aggregate_all(numpy.logical_and(household.hh_type==14, household.building_id<=0))
                            numpy.logical_and(household.hh_type==14,household.building_id<=0)....0.0 sec
                        TM_14t = alldata.aggregate_all(numpy.logical_and(household.hh_type==14, household.building_id<=0)): completed...0.1 sec
                        TM_140 = paris.alldata.number_of_households_of_type_14_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs14=alldata.aggregate_all(household.hh_type==14)
                                        household.hh_type==14............0.5 sec
                                    _hhs14=alldata.aggregate_all(household.hh_type==14): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs14=alldata.aggregate_all(household.hh_type==14)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_140 = paris.alldata.number_of_households_of_type_14_lag3: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_15j0 = paris.building.number_of_households_of_type_15_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs15=building.aggregate(household.hh_type==15)
                                        household.hh_type==15............0.5 sec
                                    _hhs15=building.aggregate(household.hh_type==15): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs15=building.aggregate(household.hh_type==15)
                                        household.hh_type==15............0.0 sec
                                    _hhs15=building.aggregate(household.hh_type==15): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_15j0 = paris.building.number_of_households_of_type_15_lag3: completed...0.9 sec
                        TM_15t = alldata.aggregate_all(numpy.logical_and(household.hh_type==15, household.building_id<=0))
                            numpy.logical_and(household.hh_type==15,household.building_id<=0)....0.0 sec
                        TM_15t = alldata.aggregate_all(numpy.logical_and(household.hh_type==15, household.building_id<=0)): completed...0.1 sec
                        TM_150 = paris.alldata.number_of_households_of_type_15_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs15=alldata.aggregate_all(household.hh_type==15)
                                        household.hh_type==15............0.5 sec
                                    _hhs15=alldata.aggregate_all(household.hh_type==15): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs15=alldata.aggregate_all(household.hh_type==15)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_150 = paris.alldata.number_of_households_of_type_15_lag3: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_16j0 = paris.building.number_of_households_of_type_16_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs16=building.aggregate(household.hh_type==16)
                                        household.hh_type==16............0.5 sec
                                    _hhs16=building.aggregate(household.hh_type==16): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs16=building.aggregate(household.hh_type==16)
                                        household.hh_type==16............0.0 sec
                                    _hhs16=building.aggregate(household.hh_type==16): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_16j0 = paris.building.number_of_households_of_type_16_lag3: completed...0.9 sec
                        TM_16t = alldata.aggregate_all(numpy.logical_and(household.hh_type==16, household.building_id<=0))
                            numpy.logical_and(household.hh_type==16,household.building_id<=0)....0.0 sec
                        TM_16t = alldata.aggregate_all(numpy.logical_and(household.hh_type==16, household.building_id<=0)): completed...0.1 sec
                        TM_160 = paris.alldata.number_of_households_of_type_16_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs16=alldata.aggregate_all(household.hh_type==16)
                                        household.hh_type==16............0.5 sec
                                    _hhs16=alldata.aggregate_all(household.hh_type==16): completed...0.5 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.5 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs16=alldata.aggregate_all(household.hh_type==16)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_160 = paris.alldata.number_of_households_of_type_16_lag3: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_17j0 = paris.building.number_of_households_of_type_17_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs17=building.aggregate(household.hh_type==17)
                                        household.hh_type==17............0.5 sec
                                    _hhs17=building.aggregate(household.hh_type==17): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs17=building.aggregate(household.hh_type==17)
                                        household.hh_type==17............0.0 sec
                                    _hhs17=building.aggregate(household.hh_type==17): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_17j0 = paris.building.number_of_households_of_type_17_lag3: completed...0.9 sec
                        TM_17t = alldata.aggregate_all(numpy.logical_and(household.hh_type==17, household.building_id<=0))
                            numpy.logical_and(household.hh_type==17,household.building_id<=0)....0.0 sec
                        TM_17t = alldata.aggregate_all(numpy.logical_and(household.hh_type==17, household.building_id<=0)): completed...0.1 sec
                        TM_170 = paris.alldata.number_of_households_of_type_17_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs17=alldata.aggregate_all(household.hh_type==17)
                                        household.hh_type==17............0.5 sec
                                    _hhs17=alldata.aggregate_all(household.hh_type==17): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs17=alldata.aggregate_all(household.hh_type==17)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_170 = paris.alldata.number_of_households_of_type_17_lag3: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_18j0 = paris.building.number_of_households_of_type_18_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs18=building.aggregate(household.hh_type==18)
                                        household.hh_type==18............0.5 sec
                                    _hhs18=building.aggregate(household.hh_type==18): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs18=building.aggregate(household.hh_type==18)
                                        household.hh_type==18............0.0 sec
                                    _hhs18=building.aggregate(household.hh_type==18): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_18j0 = paris.building.number_of_households_of_type_18_lag3: completed...0.9 sec
                        TM_18t = alldata.aggregate_all(numpy.logical_and(household.hh_type==18, household.building_id<=0))
                            numpy.logical_and(household.hh_type==18,household.building_id<=0)....0.0 sec
                        TM_18t = alldata.aggregate_all(numpy.logical_and(household.hh_type==18, household.building_id<=0)): completed...0.1 sec
                        TM_180 = paris.alldata.number_of_households_of_type_18_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs18=alldata.aggregate_all(household.hh_type==18)
                                        household.hh_type==18............0.5 sec
                                    _hhs18=alldata.aggregate_all(household.hh_type==18): completed...0.5 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs18=alldata.aggregate_all(household.hh_type==18)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_180 = paris.alldata.number_of_households_of_type_18_lag3: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_19j0 = paris.building.number_of_households_of_type_19_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs19=building.aggregate(household.hh_type==19)
                                        household.hh_type==19............0.5 sec
                                    _hhs19=building.aggregate(household.hh_type==19): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs19=building.aggregate(household.hh_type==19)
                                        household.hh_type==19............0.0 sec
                                    _hhs19=building.aggregate(household.hh_type==19): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_19j0 = paris.building.number_of_households_of_type_19_lag3: completed...1.0 sec
                        TM_19t = alldata.aggregate_all(numpy.logical_and(household.hh_type==19, household.building_id<=0))
                            numpy.logical_and(household.hh_type==19,household.building_id<=0)....0.0 sec
                        TM_19t = alldata.aggregate_all(numpy.logical_and(household.hh_type==19, household.building_id<=0)): completed...0.1 sec
                        TM_190 = paris.alldata.number_of_households_of_type_19_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs19=alldata.aggregate_all(household.hh_type==19)
                                        household.hh_type==19............0.5 sec
                                    _hhs19=alldata.aggregate_all(household.hh_type==19): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs19=alldata.aggregate_all(household.hh_type==19)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_190 = paris.alldata.number_of_households_of_type_19_lag3: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_20j0 = paris.building.number_of_households_of_type_20_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs20=building.aggregate(household.hh_type==20)
                                        household.hh_type==20............0.5 sec
                                    _hhs20=building.aggregate(household.hh_type==20): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs20=building.aggregate(household.hh_type==20)
                                        household.hh_type==20............0.0 sec
                                    _hhs20=building.aggregate(household.hh_type==20): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_20j0 = paris.building.number_of_households_of_type_20_lag3: completed...1.0 sec
                        TM_20t = alldata.aggregate_all(numpy.logical_and(household.hh_type==20, household.building_id<=0))
                            numpy.logical_and(household.hh_type==20,household.building_id<=0)....0.0 sec
                        TM_20t = alldata.aggregate_all(numpy.logical_and(household.hh_type==20, household.building_id<=0)): completed...0.1 sec
                        TM_200 = paris.alldata.number_of_households_of_type_20_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs20=alldata.aggregate_all(household.hh_type==20)
                                        household.hh_type==20............0.5 sec
                                    _hhs20=alldata.aggregate_all(household.hh_type==20): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs20=alldata.aggregate_all(household.hh_type==20)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_200 = paris.alldata.number_of_households_of_type_20_lag3: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_21j0 = paris.building.number_of_households_of_type_21_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs21=building.aggregate(household.hh_type==21)
                                        household.hh_type==21............0.5 sec
                                    _hhs21=building.aggregate(household.hh_type==21): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs21=building.aggregate(household.hh_type==21)
                                        household.hh_type==21............0.0 sec
                                    _hhs21=building.aggregate(household.hh_type==21): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_21j0 = paris.building.number_of_households_of_type_21_lag3: completed...0.9 sec
                        TM_21t = alldata.aggregate_all(numpy.logical_and(household.hh_type==21, household.building_id<=0))
                            numpy.logical_and(household.hh_type==21,household.building_id<=0)....0.0 sec
                        TM_21t = alldata.aggregate_all(numpy.logical_and(household.hh_type==21, household.building_id<=0)): completed...0.1 sec
                        TM_210 = paris.alldata.number_of_households_of_type_21_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs21=alldata.aggregate_all(household.hh_type==21)
                                        household.hh_type==21............0.5 sec
                                    _hhs21=alldata.aggregate_all(household.hh_type==21): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs21=alldata.aggregate_all(household.hh_type==21)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_210 = paris.alldata.number_of_households_of_type_21_lag3: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_22j0 = paris.building.number_of_households_of_type_22_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs22=building.aggregate(household.hh_type==22)
                                        household.hh_type==22............0.5 sec
                                    _hhs22=building.aggregate(household.hh_type==22): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs22=building.aggregate(household.hh_type==22)
                                        household.hh_type==22............0.0 sec
                                    _hhs22=building.aggregate(household.hh_type==22): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_22j0 = paris.building.number_of_households_of_type_22_lag3: completed...0.9 sec
                        TM_22t = alldata.aggregate_all(numpy.logical_and(household.hh_type==22, household.building_id<=0))
                            numpy.logical_and(household.hh_type==22,household.building_id<=0)....0.0 sec
                        TM_22t = alldata.aggregate_all(numpy.logical_and(household.hh_type==22, household.building_id<=0)): completed...0.1 sec
                        TM_220 = paris.alldata.number_of_households_of_type_22_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs22=alldata.aggregate_all(household.hh_type==22)
                                        household.hh_type==22............0.5 sec
                                    _hhs22=alldata.aggregate_all(household.hh_type==22): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs22=alldata.aggregate_all(household.hh_type==22)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_220 = paris.alldata.number_of_households_of_type_22_lag3: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_23j0 = paris.building.number_of_households_of_type_23_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs23=building.aggregate(household.hh_type==23)
                                        household.hh_type==23............0.5 sec
                                    _hhs23=building.aggregate(household.hh_type==23): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs23=building.aggregate(household.hh_type==23)
                                        household.hh_type==23............0.0 sec
                                    _hhs23=building.aggregate(household.hh_type==23): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_23j0 = paris.building.number_of_households_of_type_23_lag3: completed...0.9 sec
                        TM_23t = alldata.aggregate_all(numpy.logical_and(household.hh_type==23, household.building_id<=0))
                            numpy.logical_and(household.hh_type==23,household.building_id<=0)....0.0 sec
                        TM_23t = alldata.aggregate_all(numpy.logical_and(household.hh_type==23, household.building_id<=0)): completed...0.1 sec
                        TM_230 = paris.alldata.number_of_households_of_type_23_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs23=alldata.aggregate_all(household.hh_type==23)
                                        household.hh_type==23............0.5 sec
                                    _hhs23=alldata.aggregate_all(household.hh_type==23): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs23=alldata.aggregate_all(household.hh_type==23)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_230 = paris.alldata.number_of_households_of_type_23_lag3: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_24j0 = paris.building.number_of_households_of_type_24_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs24=building.aggregate(household.hh_type==24)
                                        household.hh_type==24............0.5 sec
                                    _hhs24=building.aggregate(household.hh_type==24): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs24=building.aggregate(household.hh_type==24)
                                        household.hh_type==24............0.0 sec
                                    _hhs24=building.aggregate(household.hh_type==24): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_24j0 = paris.building.number_of_households_of_type_24_lag3: completed...1.0 sec
                        TM_24t = alldata.aggregate_all(numpy.logical_and(household.hh_type==24, household.building_id<=0))
                            numpy.logical_and(household.hh_type==24,household.building_id<=0)....0.0 sec
                        TM_24t = alldata.aggregate_all(numpy.logical_and(household.hh_type==24, household.building_id<=0)): completed...0.1 sec
                        TM_240 = paris.alldata.number_of_households_of_type_24_lag3
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs24=alldata.aggregate_all(household.hh_type==24)
                                        household.hh_type==24............0.5 sec
                                    _hhs24=alldata.aggregate_all(household.hh_type==24): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs24=alldata.aggregate_all(household.hh_type==24)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_240 = paris.alldata.number_of_households_of_type_24_lag3: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    CDGartClse = building.disaggregate(zone.cdgartclse)..0.0 sec
                    CDGartFar = building.disaggregate(zone.cdgartfar)....0.0 sec
                    CDGhighwClse = building.disaggregate(zone.cdghighwclse)....0.1 sec
                    CDGhighwFar = building.disaggregate(zone.cdghighwfar)....0.0 sec
                    CLCrPriceF_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.7 sec
                    CLCrPriceH_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.7 sec
                    CLCsPriceF = ln_bounded(building.price)..............0.0 sec
                    CLCsPriceF_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.7 sec
                    CLCsPriceH_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.7 sec
                    CLRrUnitsF = ln_bounded(building.residential_units)..0.0 sec
                    CLRrUnitsH = ln_bounded(building.residential_units)..0.0 sec
                    CLRsUnitsF = ln_bounded(building.residential_units)..0.0 sec
                    CLRsUnitsH = ln_bounded(building.residential_units)..0.0 sec
                    CNGsubwSP_HBRcar0 = (household.cars==0)*(building.disaggregate(zone.csubway9))....1.0 sec
                    CNGsubwSP_HBRcar1g = (household.cars>=1)*(building.disaggregate(zone.csubway9))....1.0 sec
                    CNGtrainSt_HBRcar0 = (household.cars==0)*(building.disaggregate(zone.ctrain9))....1.0 sec
                    CNGtrainSt_HBRcar1g = (household.cars>=1)*(building.disaggregate(zone.ctrain9))....1.0 sec
                    CNRsUnitsH = building.residential_units..............0.0 sec
                    CPBMedInc_HBRmedInc = (household.lincomepc<=10.3)*(household.lincomepc>9.9)*((building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.lincomepc<=9.9, intermediates = [building])- zone.aggregate(household.lincomepc>10.3, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum))))*100)
                        (zone.aggregate(building.number_of_agents(household),function=sum))
                            building.number_of_agents(household).........0.5 sec
                        (zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.5 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.lincomepc<=9.9,intermediates=[building])-zone.aggregate(household.lincomepc>10.3,intermediates=[building])
                            building.aggregate(household.autogenvar103)
                                household.lincomepc>10.3.................0.0 sec
                            building.aggregate(household.autogenvar103): completed...0.2 sec
                            building.aggregate(household.autogenvar109)
                                household.lincomepc<=9.9.................0.0 sec
                            building.aggregate(household.autogenvar109): completed...0.2 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.lincomepc<=9.9,intermediates=[building])-zone.aggregate(household.lincomepc>10.3,intermediates=[building]): completed...0.4 sec
                    CPBMedInc_HBRmedInc = (household.lincomepc<=10.3)*(household.lincomepc>9.9)*((building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.lincomepc<=9.9, intermediates = [building])- zone.aggregate(household.lincomepc>10.3, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum))))*100): completed...2.9 sec
                    CPBhghInc_HBRhghInc = (household.lincomepc>10.3)*(building.disaggregate(zone.aggregate(household.lincomepc>10.3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.lincomepc>10.3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPBhghInc_HBRhghInc = (household.lincomepc>10.3)*(building.disaggregate(zone.aggregate(household.lincomepc>10.3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.3 sec
                    CPBlowInc_HBRlowInc = (household.lincomepc<=9.9)*(building.disaggregate(zone.aggregate(household.lincomepc<=9.9, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.lincomepc<=9.9,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPBlowInc_HBRlowInc = (household.lincomepc<=9.9)*(building.disaggregate(zone.aggregate(household.lincomepc<=9.9, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.3 sec
                    CPRKfrgn_KBRfrgn = (household.race_id==1)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.race_id==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar55)
                                household.race_id==1.....................0.0 sec
                            building.aggregate(household.autogenvar55): completed...0.2 sec
                        zone.aggregate(household.race_id==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRKfrgn_KBRfrgn = (household.race_id==1)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRKfrgn_KBRnoFrgn = (household.race_id==0)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)....1.2 sec
                    CPRKmidAge_KBRmidAge = ((household.age_of_head>35) * (household.age_of_head<=55))*(building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.age_of_head>55, intermediates = [building])- zone.aggregate(household.age_of_head<=35, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.age_of_head>55,intermediates=[building])-zone.aggregate(household.age_of_head<=35,intermediates=[building])
                            building.aggregate(household.autogenvar60)
                                household.age_of_head>55.................0.0 sec
                            building.aggregate(household.autogenvar60): completed...0.2 sec
                            building.aggregate(household.autogenvar63)
                                household.age_of_head<=35................0.0 sec
                            building.aggregate(household.autogenvar63): completed...0.2 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.age_of_head>55,intermediates=[building])-zone.aggregate(household.age_of_head<=35,intermediates=[building]): completed...0.4 sec
                    CPRKmidAge_KBRmidAge = ((household.age_of_head>35) * (household.age_of_head<=55))*(building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.age_of_head>55, intermediates = [building])- zone.aggregate(household.age_of_head<=35, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...2.3 sec
                    CPRKold_KBRold = (household.age_of_head>55)*(building.disaggregate(zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.age_of_head>55,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPRKold_KBRold = (household.age_of_head>55)*(building.disaggregate(zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.2 sec
                    CPRKyng_KBRyng = (household.age_of_head<=35)*(building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPRKyng_KBRyng = (household.age_of_head<=35)*(building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.2 sec
                    CPRam0_HBRam0 = (household.workers==0)*(building.disaggregate(zone.aggregate(household.workers==0, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers==0,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar168)
                                household.workers==0.....................0.0 sec
                            building.aggregate(household.autogenvar168): completed...0.2 sec
                        zone.aggregate(household.workers==0,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam0_HBRam0 = (household.workers==0)*(building.disaggregate(zone.aggregate(household.workers==0, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRam1_HBRam1 = (household.workers==1)*(building.disaggregate(zone.aggregate(household.workers==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar67)
                                household.workers==1.....................0.0 sec
                            building.aggregate(household.autogenvar67): completed...0.2 sec
                        zone.aggregate(household.workers==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam1_HBRam1 = (household.workers==1)*(building.disaggregate(zone.aggregate(household.workers==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRam1g_HBRam1g = (household.workers>=1)*(building.disaggregate(zone.aggregate(household.workers>=1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers>=1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar385)
                                household.workers>=1.....................0.0 sec
                            building.aggregate(household.autogenvar385): completed...0.2 sec
                        zone.aggregate(household.workers>=1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam1g_HBRam1g = (household.workers>=1)*(building.disaggregate(zone.aggregate(household.workers>=1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.5 sec
                    CPRam2g_HBRam2g = (household.workers>=2)*(building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar71)
                                household.workers>=2.....................0.0 sec
                            building.aggregate(household.autogenvar71): completed...0.2 sec
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam2g_HBRam2g = (household.workers>=2)*(building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2))
                        zone.aggregate(establishment.employment,function=sum)....0.0 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2)): completed...0.0 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.2 sec
                    HBRsmeDept = (household.previous_dpt==75)*(building.disaggregate(zone.dept==75))+(household.previous_dpt==77)*(building.disaggregate(zone.dept==77))+(household.previous_dpt==78)*(building.disaggregate(zone.dept==78))+(household.previous_dpt==91)*(building.disaggregate(zone.dept==91))+(household.previous_dpt==92)*(building.disaggregate(zone.dept==92))+(household.previous_dpt==93)*(building.disaggregate(zone.dept==93))+(household.previous_dpt==94)*(building.disaggregate(zone.dept==94))+(household.previous_dpt==95)*(building.disaggregate(zone.dept==95))
                        zone.dept==77....................................0.0 sec
                        zone.dept==78....................................0.0 sec
                        zone.dept==95....................................0.0 sec
                        zone.dept==91....................................0.0 sec
                    HBRsmeDept = (household.previous_dpt==75)*(building.disaggregate(zone.dept==75))+(household.previous_dpt==77)*(building.disaggregate(zone.dept==77))+(household.previous_dpt==78)*(building.disaggregate(zone.dept==78))+(household.previous_dpt==91)*(building.disaggregate(zone.dept==91))+(household.previous_dpt==92)*(building.disaggregate(zone.dept==92))+(household.previous_dpt==93)*(building.disaggregate(zone.dept==93))+(household.previous_dpt==94)*(building.disaggregate(zone.dept==94))+(household.previous_dpt==95)*(building.disaggregate(zone.dept==95)): completed...3.1 sec
                    ctdtco_HBRcar0 = (household.cars==0)*(building.ctdtco)
                        building.disaggregate(zone.ctdtco)...............0.1 sec
                    ctdtco_HBRcar0 = (household.cars==0)*(building.ctdtco): completed...1.2 sec
                    ctdtco_HBRcar1g = (household.cars>=1)*(building.ctdtco)....1.1 sec
                    ctdvpo_HBRcar0 = (household.cars==0)*(building.ctdvpo)....1.1 sec
                    ctdvpo_HBRcar1g = (household.cars>=1)*(building.ctdvpo)....1.1 sec
                    Choice set size: 50
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 3 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 3 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                HLCM chunk 1 out of 1.: completed................3 min, 42.1 sec
            Running Household Location Choice Model (from urbansim.models.household_location_choice_model): completed...3 min, 42.4 sec
            Running Real Estate Price Model (from urbansim.models.real_estate_price_model): started on Tue Apr 10 05:31:33 2012
                ln_price=ln(building.price)..............................0.0 sec
                Total number of individuals: 6500
                REPM chunk 1 out of 1.: started on Tue Apr 10 05:31:33 2012
                    Number of agents in this chunk: 6500
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc)
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh))
                            zone.aggregate(building.number_of_agents(household),function=sum)
                                building.number_of_agents(household).....0.5 sec
                            zone.aggregate(building.number_of_agents(household),function=sum): completed...0.5 sec
                            zone_id = household.disaggregate(building.zone_id)....0.2 sec
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh)): completed...0.9 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc): completed...0.9 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum)))
                            building.aggregate(household.autogenvar60)...0.2 sec
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum))): completed...0.2 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100: completed...0.2 sec
                    CRItaxBati = building.disaggregate(zone.bati)........0.1 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.2 sec
                REPM chunk 1 out of 1.: completed........................1.4 sec
            Running Real Estate Price Model (from urbansim.models.real_estate_price_model): completed...1.4 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:31:36 2012
                household.disaggregate(zone.dept)........................0.2 sec
            Running opus_core.simple_model.SimpleModel: completed........0.2 sec
            Writing datasets to cache for year 2002: started on Tue Apr 10 05:31:36 2012
                Flushing building
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2002/buildings doesn't exist and is created
                Flushing sector
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2002/sectors doesn't exist and is created
                Flushing home_based_status
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2002/home_based_status doesn't exist and is created
                Flushing zone
                Flushing household
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2002/households doesn't exist and is created
                Flushing development_event_history
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2002/development_event_history doesn't exist and is created
                Flushing target_vacancy
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2002/target_vacancies doesn't exist and is created
                Flushing building_type
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2002/building_types doesn't exist and is created
                Flushing building_sqft_per_job
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2002/building_sqft_per_job doesn't exist and is created
                Flushing choice
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2002/choice_set doesn't exist and is created
                Flushing establishment
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2002/establishment doesn't exist and is created
                Flushing development_project
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2002/development_projects doesn't exist and is created
            Writing datasets to cache for year 2002: completed..........27.4 sec
        Simulate year 2002: completed.............................5 min, 7.9 sec
        Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/year_2002_log.txt
    Starting simulation for year 2002: completed..................5 min, 7.9 sec
Start simulation run: completed...................................5 min, 7.9 sec
Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
Running simulation for year 2002 in new process: completed........5 min, 8.4 sec
Triggering travelmodel
Leaving travelmodel
Running simulation for year 2003 in new process: started on Tue Apr 10 05:32:04 2012
    Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
    Invoking: /usr/bin/python /workspace/opus/src/opus_core/model_coordinators/model_system.py -r /tmp/tmpb31fu7/resources.pickle --log-file-name run_multiprocess.log
Cache Directory set to: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16
Start simulation run: started on Tue Apr 10 05:32:04 2012
    random seed = (491264,)
    Starting simulation for year 2003: started on Tue Apr 10 05:32:04 2012
        Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
        Logging to file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/year_2003_log.txt
        Simulate year 2003: started on Tue Apr 10 05:32:04 2012
            Running Swap Datasets (from opus_core.models.swap_datasets): started on Tue Apr 10 05:32:04 2012....0.0 sec
            Running Swap Datasets (from opus_core.models.swap_datasets): started on Tue Apr 10 05:32:04 2012
                Backed up /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2003/zones to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2003/zones_ORIGINAL
                Renamed /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2003/zones_baseline to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2003/zones
            Running Swap Datasets (from opus_core.models.swap_datasets): completed...0.0 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:32:04 2012
                numpy.clip(vpo, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:32:05 2012
                numpy.clip(tco, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:32:05 2012
                numpy.clip(tcd, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:32:05 2012
                numpy.clip(vpd, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running Development Project Transition Model (from urbansim.models.real_estate_transition_model): started on Tue Apr 10 05:32:05 2012
                is_residential = building.disaggregate(building_type.is_residential)....0.1 sec
                is_residential = development_event_history.disaggregate(building_type.is_residential)....0.0 sec
                
                +----------------+-----------+-----------+------------+----------+
                | is_residential |   actual  |   target  | difference |  action  |
                +----------------+-----------+-----------+------------+----------+
                |       1        |  5002171  |  5050212  |   48041    | +48061.0 |
                |       0        | 382249150 | 365764214 | -16484936  |    0     |
                +----------------+-----------+-----------+------------+----------+
            Running Development Project Transition Model (from urbansim.models.real_estate_transition_model): completed...2.0 sec
            Running Non-Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): started on Tue Apr 10 05:32:07 2012
                is_non_residential = numpy.logical_not(urbansim_zone.development_project.is_residential)....0.0 sec
                Nothing to be done.
            Running Non-Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): completed...0.0 sec
            Running Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): started on Tue Apr 10 05:32:07 2012
                Total number of individuals: 4304
                DPLCM chunk 1 out of 1.: started on Tue Apr 10 05:32:07 2012
                    Number of agents in this chunk: 4304
                    developable_residential_units_capacity = clip_to_zero(building.residential_units_capacity - building.residential_units)....0.0 sec
                    Available capacity: 31789982 units.
                    (building.building_type_id==1)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==2)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==3)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==4)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    CBAPC = (building.disaggregate(zone.dept==92))+(building.disaggregate(zone.dept==93))+(building.disaggregate(zone.dept==94))
                        zone.dept==94....................................0.1 sec
                        zone.dept==92....................................0.0 sec
                        zone.dept==93....................................0.0 sec
                    CBAPC = (building.disaggregate(zone.dept==92))+(building.disaggregate(zone.dept==93))+(building.disaggregate(zone.dept==94)): completed...0.1 sec
                    CBAnwCty = building.disaggregate(zone.cvilnouvel)....0.1 sec
                    CBAparis = building.disaggregate(zone.dept==75)
                        zone.dept==75....................................0.0 sec
                    CBAparis = building.disaggregate(zone.dept==75): completed...0.0 sec
                    CDGCBD = building.disaggregate(zone.cd_chatelet).....0.1 sec
                    CDGart = building.disaggregate(zone.cdistart)/1000...0.1 sec
                    CDGhighw = building.disaggregate(zone.cdisthwy)/1000....0.1 sec
                    CLCrPriceF = ln_bounded(building.price)..............0.0 sec
                    CLCrPriceH = ln_bounded(building.price)..............0.0 sec
                    CLCsPriceH = ln_bounded(building.price)..............0.0 sec
                    CLGarea = building.disaggregate(zone.ZLGarea)
                        ln_bounded(zone.careakm2)........................0.1 sec
                    CLGarea = building.disaggregate(zone.ZLGarea): completed...0.1 sec
                    CNGsubwSP = building.disaggregate(zone.csubway9).....0.1 sec
                    CNGtrainSt = building.disaggregate(zone.ctrain9).....0.1 sec
                    CPBhghInc = building.disaggregate(zone.ZPBhghInc)
                        100*(zone.aggregate(household.lincomepc>10.3)/(zone.CNRhh))
                            zone.aggregate(building.number_of_agents(household),function=sum)
                                building.number_of_agents(household).....0.6 sec
                            zone.aggregate(building.number_of_agents(household),function=sum): completed...0.6 sec
                            household.lincomepc>10.3.....................0.1 sec
                            zone_id = household.disaggregate(building.zone_id)....0.2 sec
                        100*(zone.aggregate(household.lincomepc>10.3)/(zone.CNRhh)): completed...1.1 sec
                    CPBhghInc = building.disaggregate(zone.ZPBhghInc): completed...1.1 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc)
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh))
                            household.lincomepc<=9.9.....................0.0 sec
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh)): completed...0.2 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc): completed...0.2 sec
                    CPInoise = building.disaggregate(zone.cnoise)........0.1 sec
                    CPOforest = building.disaggregate(zone.cpbois).......0.1 sec
                    CPOhlth = building.disaggregate(zone.cpequipem_sante)....0.1 sec
                    CPOpark = building.disaggregate(zone.cpparc_jardin)..0.1 sec
                    CPOsport = building.disaggregate(zone.cpsport).......0.1 sec
                    CPOwater = building.disaggregate(zone.cpeau).........0.1 sec
                    CPRKfrgn = building.disaggregate(zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))))*100
                        zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household)))
                            building.aggregate(household.race_id==1)
                                household.race_id==1.....................0.0 sec
                            building.aggregate(household.race_id==1): completed...0.3 sec
                        zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))): completed...0.3 sec
                    CPRKfrgn = building.disaggregate(zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))))*100: completed...0.3 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum)))
                            building.aggregate(household.autogenvar60)
                                household.age_of_head>55.................0.1 sec
                            building.aggregate(household.autogenvar60): completed...0.3 sec
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum))): completed...0.3 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100: completed...0.3 sec
                    CPRKyng = building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar63)
                                household.age_of_head<=35................0.0 sec
                            building.aggregate(household.autogenvar63): completed...0.3 sec
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRKyng = building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRaft90 = building.disaggregate(zone.cpraft90)......0.1 sec
                    CPRam1 = building.disaggregate(zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.workers==1)
                                household.workers==1.....................0.0 sec
                            building.aggregate(household.workers==1): completed...0.3 sec
                        zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRam1 = building.disaggregate(zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRam2g = building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar71)
                                household.workers>=2.....................0.0 sec
                            building.aggregate(household.autogenvar71): completed...0.3 sec
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRam2g = building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRam3g = building.disaggregate(zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.workers>=3)
                                household.workers>=3.....................0.0 sec
                            building.aggregate(household.workers>=3): completed...0.2 sec
                        zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam3g = building.disaggregate(zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.2 sec
                    CPRbef15 = building.disaggregate(zone.cprbef15)......0.1 sec
                    CPRmemb2 = building.disaggregate(zone.aggregate(household.size==2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.size==2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar75)
                                household.size==2........................0.1 sec
                            building.aggregate(household.autogenvar75): completed...0.3 sec
                        zone.aggregate(household.size==2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRmemb2 = building.disaggregate(zone.aggregate(household.size==2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRmemb3g = building.disaggregate(zone.aggregate(household.size>=3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.size>=3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar78)
                                household.size>=3........................0.0 sec
                            building.aggregate(household.autogenvar78): completed...0.3 sec
                        zone.aggregate(household.size>=3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRmemb3g = building.disaggregate(zone.aggregate(household.size>=3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2))
                        zone.aggregate(establishment.employment,function=sum)....0.1 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2)): completed...0.1 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.3 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.3 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.3 sec
                    ctdvpo = building.disaggregate(zone.ctdvpo)..........0.1 sec
                    Choice set size: 10
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                DPLCM chunk 1 out of 1.: completed.......................5.3 sec
            Running Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): completed...5.3 sec
            Running Add Development Projects Quantity to Buildings (from urbansim_zone.models.add_projects_to_buildings): started on Tue Apr 10 05:32:12 2012....0.2 sec
            emp_250 = (establishment.employment < 250).astype('i').......0.0 sec
            Running Establishment Disappearance Model (from paris.models.establishment_disappearance_model): started on Tue Apr 10 05:32:13 2012
                Total number of individuals: 333480
                EDM chunk 1 out of 1.: started on Tue Apr 10 05:32:13 2012
                    Number of agents in this chunk: 333480
                    EBADefense = establishment.disaggregate(building.CBADefense)
                        building.disaggregate(zone.insee==92062)+building.disaggregate(zone.insee==92026)+building.disaggregate(zone.insee==92050)
                            zone.insee==92050............................0.1 sec
                            zone.insee==92026............................0.0 sec
                            zone.insee==92062............................0.0 sec
                        building.disaggregate(zone.insee==92062)+building.disaggregate(zone.insee==92026)+building.disaggregate(zone.insee==92050): completed...0.1 sec
                    EBADefense = establishment.disaggregate(building.CBADefense): completed...0.1 sec
                    EBAnwCty = establishment.disaggregate(building.CBAnwCty)....0.0 sec
                    EBAparis = establishment.disaggregate(building.disaggregate(zone.dept==75))
                        building.disaggregate(zone.dept==75).............0.0 sec
                    EBAparis = establishment.disaggregate(building.disaggregate(zone.dept==75)): completed...0.0 sec
                    ECTDTcD = establishment.disaggregate(building.ctdtcd)
                        building.disaggregate(zone.ctdtcd)...............0.1 sec
                    ECTDTcD = establishment.disaggregate(building.ctdtcd): completed...0.1 sec
                    ECTDVpD = establishment.disaggregate(building.ctdvpd)
                        building.disaggregate(zone.ctdvpd)...............0.1 sec
                    ECTDVpD = establishment.disaggregate(building.ctdvpd): completed...0.1 sec
                    ELPB = establishment.disaggregate(building.CLPB)
                        building.disaggregate(zone.ZCLPB)
                            ln_bounded(zone.aggregate(building.price*(building.building_type_id==6), function=sum)/zone.aggregate((building.building_type_id==6), function=sum))
                                building.price*(building.building_type_id==6)....0.0 sec
                                (building.building_type_id==6)...........0.0 sec
                            ln_bounded(zone.aggregate(building.price*(building.building_type_id==6), function=sum)/zone.aggregate((building.building_type_id==6), function=sum)): completed...0.0 sec
                        building.disaggregate(zone.ZCLPB): completed.....0.0 sec
                    ELPB = establishment.disaggregate(building.CLPB): completed...0.0 sec
                    ENGsubwSP = establishment.disaggregate(building.CNGsubwSP)....0.0 sec
                    ENGtrainSt = establishment.disaggregate(building.CNGtrainSt)....0.0 sec
                    EPBhghInc = establishment.disaggregate(building.CPBhghInc)/100....0.0 sec
                    EPBlowInc = establishment.disaggregate(building.CPBlowInc)/100....0.0 sec
                    ERItaxPro = establishment.disaggregate(building.CRItaxPro)
                        building.disaggregate(zone.taxpro)...............0.1 sec
                    ERItaxPro = establishment.disaggregate(building.CRItaxPro): completed...0.1 sec
                    ERRdensPop = establishment.disaggregate(building.CRRdensPop)....0.0 sec
                    ERam0 = establishment.disaggregate(building.CPRam0)/100
                        building.disaggregate(zone.ZPRam0)
                            (zone.aggregate(building.aggregate(household.workers==0))/(zone.CNRhh))*100
                                building.aggregate(household.workers==0)
                                    household.workers==0.................0.0 sec
                                building.aggregate(household.workers==0): completed...0.2 sec
                            (zone.aggregate(building.aggregate(household.workers==0))/(zone.CNRhh))*100: completed...0.2 sec
                        building.disaggregate(zone.ZPRam0): completed....0.3 sec
                    ERam0 = establishment.disaggregate(building.CPRam0)/100: completed...0.3 sec
                    ETPNiv1 = establishment.disaggregate(building.CTPNiv1)
                        building.disaggregate(zone.ctpniv1)..............0.1 sec
                    ETPNiv1 = establishment.disaggregate(building.CTPNiv1): completed...0.1 sec
                    ETPNiv2 = establishment.disaggregate(building.CTPNiv2)
                        building.disaggregate(zone.ctpniv2)..............0.1 sec
                    ETPNiv2 = establishment.disaggregate(building.CTPNiv2): completed...0.1 sec
                    ETPNiv3 = establishment.disaggregate(building.CTPNiv3)
                        building.disaggregate(zone.ctpniv3)..............0.1 sec
                    ETPNiv3 = establishment.disaggregate(building.CTPNiv3): completed...0.1 sec
                    ETPNiv4 = establishment.disaggregate(building.CTPNiv4)
                        building.disaggregate(zone.ctpniv4)..............0.1 sec
                    ETPNiv4 = establishment.disaggregate(building.CTPNiv4): completed...0.1 sec
                    emp = establishment.employment.......................0.0 sec
                    w10=(establishment.employment_lag1 >= 10)*(establishment.employment_lag1 < 20)
                        opus_core.variables.VVV_lagLLL...................0.5 sec
                    w10=(establishment.employment_lag1 >= 10)*(establishment.employment_lag1 < 20): completed...0.5 sec
                    w100=(establishment.employment_lag1 >= 100)..........0.0 sec
                    w100slope=paris.establishment.w100*(establishment.employment_lag1 - 100)....0.0 sec
                    w10slope=paris.establishment.w10*(establishment.employment_lag1 - 10)....0.0 sec
                    w2=(establishment.employment_lag1 >= 2)*(establishment.employment_lag1 < 3)....0.0 sec
                    w20=(establishment.employment_lag1 >= 20)*(establishment.employment_lag1 < 50)....0.0 sec
                    w20slope=paris.establishment.w20*(establishment.employment_lag1 - 20)....0.0 sec
                    w3=(establishment.employment_lag1 >= 3)*(establishment.employment_lag1 < 6)....0.0 sec
                    w3slope=paris.establishment.w3*(establishment.employment_lag1 - 3)....0.0 sec
                    w50=(establishment.employment_lag1 >= 50)*(establishment.employment_lag1 < 100)....0.0 sec
                    w50slope=paris.establishment.w50*(establishment.employment_lag1 - 50)....0.0 sec
                    w6=(establishment.employment_lag1 >= 6)*(establishment.employment_lag1 < 10)....0.0 sec
                    w6slope=paris.establishment.w6*(establishment.employment_lag1 - 6)....0.0 sec
                    Choice set size: 2
                EDM chunk 1 out of 1.: completed.........................4.0 sec
            Running Establishment Disappearance Model (from paris.models.establishment_disappearance_model): completed...4.1 sec
            Running Establishment Evolution Model (from paris.models.establishment_evolution_model): started on Tue Apr 10 05:32:17 2012
                (paris.establishment.year_lag1 != paris.establishment.year)*(paris.establishment.emp_250_lag1)*(establishment.building_id>0)
                    opus_core.variables.VVV_lagLLL
                        paris.establishment.year.........................0.1 sec
                        paris.establishment.year.........................0.0 sec
                    opus_core.variables.VVV_lagLLL: completed............0.5 sec
                    opus_core.variables.VVV_lagLLL
                        emp_250 = (establishment.employment < 250).astype('i')....0.1 sec
                    opus_core.variables.VVV_lagLLL: completed............0.5 sec
                (paris.establishment.year_lag1 != paris.establishment.year)*(paris.establishment.emp_250_lag1)*(establishment.building_id>0): completed...1.0 sec
                paris.establishment.ln_emp_ratio
                    lnemp=ln_bounded(establishment.employment)...........0.0 sec
                    lnemp_pre=ln_bounded(establishment.employment_lag1)..0.0 sec
                paris.establishment.ln_emp_ratio: completed..............0.0 sec
                Total number of individuals: 333480
                EEM chunk 1 out of 1.: started on Tue Apr 10 05:32:18 2012
                    Number of agents in this chunk: 333480
                    EBAdefense_EBEwfb10_250 = establishment.EBADefense * establishment.EBEwfb10_250
                        (establishment.employment_lag1>9)*(establishment.employment_lag1<250)....0.0 sec
                    EBAdefense_EBEwfb10_250 = establishment.EBADefense * establishment.EBEwfb10_250: completed...0.0 sec
                    EBAdefense_EBEwfl10 = establishment.EBADefense * establishment.EBEwfl10
                        establishment.employment_lag1<10.................0.0 sec
                    EBAdefense_EBEwfl10 = establishment.EBADefense * establishment.EBEwfl10: completed...0.0 sec
                    EBAlimit_EBEwfb10_250 = establishment.ELimit * establishment.EBEwfb10_250
                        establishment.disaggregate(building.disaggregate(zone.limit))
                            building.disaggregate(zone.limit)............0.1 sec
                        establishment.disaggregate(building.disaggregate(zone.limit)): completed...0.1 sec
                    EBAlimit_EBEwfb10_250 = establishment.ELimit * establishment.EBEwfb10_250: completed...0.1 sec
                    EBAlimit_EBEwfl10 = establishment.ELimit * establishment.EBEwfl10....0.0 sec
                    EBAnwCty_EBEwfb10_250 = establishment.EBAnwCty * establishment.EBEwfb10_250....0.0 sec
                    EBAnwCty_EBEwfl10 = establishment.EBAnwCty * establishment.EBEwfl10....0.0 sec
                    EBAparis_EBEwfb10_250 = establishment.EBAparis * establishment.EBEwfb10_250....0.0 sec
                    EBAparis_EBEwfl10 = establishment.EBAparis * establishment.EBEwfl10....0.0 sec
                    EBLCprice_EBEwfb10_250 = establishment.ELPB * establishment.EBEwfb10_250....0.0 sec
                    EBLCprice_EBEwfl10 = establishment.ELPB * establishment.EBEwfl10....0.0 sec
                    ECNGsubw_EBEwfb10_250 = establishment.ENGsubwSP * establishment.EBEwfb10_250....0.0 sec
                    ECNGsubw_EBEwfl10 = establishment.ENGsubwSP * establishment.EBEwfl10....0.0 sec
                    ECNGtrain_EBEwfb10_250 = establishment.ENGtrainSt * establishment.EBEwfb10_250....0.0 sec
                    ECNGtrain_EBEwfl10 = establishment.ENGtrainSt * establishment.EBEwfl10....0.0 sec
                    ECPBhghInc_EBEwfb10_250 = establishment.EPBhghInc * establishment.EBEwfb10_250....0.0 sec
                    ECPBhghInc_EBEwfl10 = establishment.EPBhghInc * establishment.EBEwfl10....0.0 sec
                    ECPBlowInc_EBEwfl10 = establishment.EPBlowInc * establishment.EBEwfl10....0.0 sec
                    ECPR0Ac_EBEwfb10_250 = establishment.ERam0 * establishment.EBEwfb10_250....0.0 sec
                    ECPR0Ac_EBEwfl10 = establishment.ERam0 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE1_EBEwfb10_250 = establishment.ETPNiv1 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE1_EBEwfl10 = establishment.ETPNiv1 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE2_EBEwfb10_250 = establishment.ETPNiv2 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE2_EBEwfl10 = establishment.ETPNiv2 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE3_EBEwfb10_250 = establishment.ETPNiv3 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE3_EBEwfl10 = establishment.ETPNiv3 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE4_EBEwfb10_250 = establishment.ETPNiv4 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE4_EBEwfl10 = establishment.ETPNiv4 * establishment.EBEwfl10....0.0 sec
                    ECQRdstPop_EBEwfb10_250 = establishment.ERRdensPop * establishment.EBEwfb10_250....0.0 sec
                    ECQRdstPop_EBEwfl10 = establishment.ERRdensPop * establishment.EBEwfl10....0.0 sec
                    ECRFproTax_EBEwfb10_250 = establishment.ERItaxPro * establishment.EBEwfb10_250....0.0 sec
                    ECRFproTax_EBEwfl10 = establishment.ERItaxPro * establishment.EBEwfl10....0.0 sec
                    ECTDTcD_EBEwfb10_250 = establishment.ECTDTcD * establishment.EBEwfb10_250....0.0 sec
                    ECTDTcD_EBEwfl10 = establishment.ECTDTcD * establishment.EBEwfl10....0.0 sec
                    ECTDVpD_EBEwfb10_250 = establishment.ECTDVpD * establishment.EBEwfb10_250....0.0 sec
                    ECTDVpD_EBEwfl10 = establishment.ECTDVpD * establishment.EBEwfl10....0.0 sec
                EEM chunk 1 out of 1.: completed.........................1.0 sec
                rmse_ln_emp_ratio = numpy.sqrt(establishment.disaggregate(sector.aggregate(establishment._init_error_ln_emp_ratio**2, function=mean)))
                    sector.aggregate(establishment._init_error_ln_emp_ratio**2,function=mean)
                        establishment._init_error_ln_emp_ratio**2........0.0 sec
                    sector.aggregate(establishment._init_error_ln_emp_ratio**2,function=mean): completed...0.0 sec
                rmse_ln_emp_ratio = numpy.sqrt(establishment.disaggregate(sector.aggregate(establishment._init_error_ln_emp_ratio**2, function=mean))): completed...0.1 sec
            Running Establishment Evolution Model (from paris.models.establishment_evolution_model): completed...2.2 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:32:19 2012
                paris.establishment.emp_pred
                    emp_pre1=establishment.employment_lag1...............0.0 sec
                paris.establishment.emp_pred: completed..................0.0 sec
                (establishment.disappeared == 0)*(establishment.building_id>0)*(paris.establishment.year_lag1 != pari.establishment.year)*(paris.establishment.emp_250_lag1)....0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.0 sec
            Running Establishment Reappearance Model (from paris.models.establishment_reappearance_model): started on Tue Apr 10 05:32:19 2012
                _actual_ = control_total.aggregate(establishment.employment)....0.0 sec

                (establishment.disappeared == 1)*(paris.establishment.emp_250)
                    emp_250 = (establishment.employment < 250).astype('i')....0.0 sec
                (establishment.disappeared == 1)*(paris.establishment.emp_250): completed...0.0 sec
                
                +-----------+-------------+--------+---------+------------+---------+--------+------+
                | sector_id | disappeared | actual |  target | difference |  action |   N    | note |
                +-----------+-------------+--------+---------+------------+---------+--------+------+
                |     1     |      0      | 27756  |  24374  |   -3382    |    0    |   0    |      |
                |     2     |      0      | 527834 |  690460 |   162626   | +118181 | +13207 |      |
                |     3     |      0      | 146879 |  242478 |   95599    |  +79752 | +13398 |      |
                |     4     |      0      | 443516 |  683251 |   239735   | +180439 | +31665 |      |
                |     5     |      0      | 260536 |  302809 |   42273    |  +42273 |   +1   |      |
                |     6     |      0      | 223042 |  266882 |   43840    |  +30044 | +3039  |      |
                |     7     |      0      | 65742  |  106956 |   41214    |  +29937 | +5690  |      |
                |     8     |      0      | 832234 | 1002293 |   170059   | +170059 |   +1   |      |
                |     9     |      0      | 358158 |  489222 |   131064   |  +91343 | +20732 |      |
                |     10    |      0      | 734552 |  813620 |   79068    |  +36539 | +6016  |      |
                |     11    |      0      | 557986 |  629777 |   71791    |  +41367 | +4229  |      |
                +-----------+-------------+--------+---------+------------+---------+--------+------+
                
            Running Establishment Reappearance Model (from paris.models.establishment_reappearance_model): completed...0.7 sec
            Running Establishment Transition Model (from paris.models.transition_model): started on Tue Apr 10 05:32:20 2012
                _actual_ = control_total.aggregate(establishment.employment)....0.0 sec
                WARNING: The are 8 eligible elements, less than the sample_size 16. Sample 8. 
                
                +-----------+-------------+---------+---------+------------+--------+------+
                | sector_id | disappeared |  actual |  target | difference | action | note |
                +-----------+-------------+---------+---------+------------+--------+------+
                |     1     |      0      |  27756  |  24374  |   -3382    | -2193  |  1   |
                |     2     |      0      |  646015 |  690460 |   44445    | +44445 |      |
                |     3     |      0      |  226631 |  242478 |   15847    | +15847 |      |
                |     4     |      0      |  623955 |  683251 |   59296    | +59296 |      |
                |     5     |      0      |  302809 |  302809 |     0      |   0    |      |
                |     6     |      0      |  253086 |  266882 |   13796    | +13796 |      |
                |     7     |      0      |  95679  |  106956 |   11277    | +11277 |      |
                |     8     |      0      | 1002293 | 1002293 |     0      |   0    |      |
                |     9     |      0      |  449501 |  489222 |   39721    | +39721 |      |
                |     10    |      0      |  771091 |  813620 |   42529    | +42529 |      |
                |     11    |      0      |  599353 |  629777 |   30424    | +30424 |      |
                +-----------+-------------+---------+---------+------------+--------+------+
                
                ERROR: 
                1. We run out of eligible samples to match target 24374 exactly.
                
            Running Establishment Transition Model (from paris.models.transition_model): completed...0.7 sec
            Running Establishment Location Choice Model (from urbansim.models.agent_location_choice_model): started on Tue Apr 10 05:32:21 2012
                (establishment.disappeared==0)*(establishment.building_id <= 0)....0.0 sec
                (establishment.employment)*(establishment.disappeared==0)....0.0 sec
                Total number of individuals: 148542
                ELCM chunk 1 out of 1.: started on Tue Apr 10 05:32:21 2012
                    Number of agents in this chunk: 148542
                    vacant_non_home_based_job_spaces = clip_to_zero(urbansim_zone.building.total_non_home_based_job_spaces - paris.building.number_of_non_home_based_jobs)
                        total_non_home_based_job_spaces = numpy.round(safe_array_divide(building.non_residential_sqft, urbansim_zone.building.building_sqft_per_job))Warning: invalid value encountered in divide
....0.0 sec
                        number_of_non_home_based_jobs = building.aggregate((establishment.employment)*(establishment.disappeared==0))....0.0 sec
                        WARNING: Negative values detected in function/method ''
                        WARNING: Minimum: -5970.0. Negative values clipped to zero.
                    vacant_non_home_based_job_spaces = clip_to_zero(urbansim_zone.building.total_non_home_based_job_spaces - paris.building.number_of_non_home_based_jobs): completed...0.0 sec
                    Available capacity: 1343913.0 units.
                    CLEmpTot_lag1 = ln_bounded(building.disaggregate(zone.emptot_lag1))
                        zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0),intermediates=[building])
                            building.aggregate(establishment.autogenvar293)
                                establishment.employment_lag1*(establishment.disappeared_lag1==0)
                                    opus_core.variables.VVV_lagLLL.......0.5 sec
                                establishment.employment_lag1*(establishment.disappeared_lag1==0): completed...0.5 sec
                            building.aggregate(establishment.autogenvar293): completed...0.5 sec
                        zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0),intermediates=[building]): completed...0.5 sec
                    CLEmpTot_lag1 = ln_bounded(building.disaggregate(zone.emptot_lag1)): completed...0.5 sec
                    CLOActPotSt = building.disaggregate(zone.CLOActPotSt)
                        ln_bounded(zone.CNOActPotSt)
                            1.0*zone.project99st.........................0.1 sec
                        ln_bounded(zone.CNOActPotSt): completed..........0.1 sec
                    CLOActPotSt = building.disaggregate(zone.CLOActPotSt): completed...0.1 sec
                    CNRKold = building.disaggregate(zone.ZPRKold)
                        (zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.CNRhh))*100....0.0 sec
                    CNRKold = building.disaggregate(zone.ZPRKold): completed...0.0 sec
                    CNRKyng = building.disaggregate(zone.ZPRKyng)
                        (zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.CNRhh))*100....0.0 sec
                    CNRKyng = building.disaggregate(zone.ZPRKyng): completed...0.0 sec
                    CPGZFU = building.disaggregate(zone.czfu)............0.1 sec
                    CPRchld111g = building.disaggregate(zone.CPRchld111g)
                        100*((zone.aggregate(household.children11>=1, intermediates = [building]))/(zone.CNRhh))
                            building.aggregate(household.autogenvar300)
                                household.children11>=1..................0.0 sec
                            building.aggregate(household.autogenvar300): completed...0.3 sec
                        100*((zone.aggregate(household.children11>=1, intermediates = [building]))/(zone.CNRhh)): completed...0.3 sec
                    CPRchld111g = building.disaggregate(zone.CPRchld111g): completed...0.3 sec
                    CQEsec10dst_lag1 = building.disaggregate(zone.emp_s10_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s10_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 10),intermediates=[building])
                                building.aggregate(establishment.autogenvar303)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==10)
                                        opus_core.variables.VVV_lagLLL...0.5 sec
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==10): completed...0.5 sec
                                building.aggregate(establishment.autogenvar303): completed...0.5 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 10),intermediates=[building]): completed...0.5 sec
                        zone.emp_s10_lag1/(1000*zone.CNOActPotSt): completed...0.5 sec
                    CQEsec10dst_lag1 = building.disaggregate(zone.emp_s10_lag1/(1000*zone.CNOActPotSt)): completed...0.5 sec
                    CQEsec11dst_lag1 = building.disaggregate(zone.emp_s11_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s11_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 11),intermediates=[building])
                                building.aggregate(establishment.autogenvar306)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==11)....0.0 sec
                                building.aggregate(establishment.autogenvar306): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 11),intermediates=[building]): completed...0.0 sec
                        zone.emp_s11_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec11dst_lag1 = building.disaggregate(zone.emp_s11_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec2dst_lag1 = building.disaggregate(zone.emp_s2_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s2_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 2),intermediates=[building])
                                building.aggregate(establishment.autogenvar309)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==2)....0.0 sec
                                building.aggregate(establishment.autogenvar309): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 2),intermediates=[building]): completed...0.0 sec
                        zone.emp_s2_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec2dst_lag1 = building.disaggregate(zone.emp_s2_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec3dst_lag1 = building.disaggregate(zone.emp_s3_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s3_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 3),intermediates=[building])
                                building.aggregate(establishment.autogenvar312)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==3)....0.0 sec
                                building.aggregate(establishment.autogenvar312): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 3),intermediates=[building]): completed...0.0 sec
                        zone.emp_s3_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec3dst_lag1 = building.disaggregate(zone.emp_s3_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec4dst_lag1 = building.disaggregate(zone.emp_s4_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s4_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 4),intermediates=[building])
                                building.aggregate(establishment.autogenvar315)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==4)....0.0 sec
                                building.aggregate(establishment.autogenvar315): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 4),intermediates=[building]): completed...0.0 sec
                        zone.emp_s4_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec4dst_lag1 = building.disaggregate(zone.emp_s4_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec5dst_lag1 = building.disaggregate(zone.emp_s5_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s5_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 5),intermediates=[building])
                                building.aggregate(establishment.autogenvar318)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==5)....0.0 sec
                                building.aggregate(establishment.autogenvar318): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 5),intermediates=[building]): completed...0.0 sec
                        zone.emp_s5_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec5dst_lag1 = building.disaggregate(zone.emp_s5_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec6dst_lag1 = building.disaggregate(zone.emp_s6_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s6_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 6),intermediates=[building])
                                building.aggregate(establishment.autogenvar321)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==6)....0.0 sec
                                building.aggregate(establishment.autogenvar321): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 6),intermediates=[building]): completed...0.0 sec
                        zone.emp_s6_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec6dst_lag1 = building.disaggregate(zone.emp_s6_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec7dst_lag1 = building.disaggregate(zone.emp_s7_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s7_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 7),intermediates=[building])
                                building.aggregate(establishment.autogenvar324)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==7)....0.0 sec
                                building.aggregate(establishment.autogenvar324): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 7),intermediates=[building]): completed...0.0 sec
                        zone.emp_s7_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec7dst_lag1 = building.disaggregate(zone.emp_s7_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec8dst_lag1 = building.disaggregate(zone.emp_s8_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s8_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 8),intermediates=[building])
                                building.aggregate(establishment.autogenvar327)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==8)....0.0 sec
                                building.aggregate(establishment.autogenvar327): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 8),intermediates=[building]): completed...0.0 sec
                        zone.emp_s8_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec8dst_lag1 = building.disaggregate(zone.emp_s8_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec9dst_lag1 = building.disaggregate(zone.emp_s9_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s9_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 9),intermediates=[building])
                                building.aggregate(establishment.autogenvar330)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==9)....0.0 sec
                                building.aggregate(establishment.autogenvar330): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 9),intermediates=[building]): completed...0.0 sec
                        zone.emp_s9_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec9dst_lag1 = building.disaggregate(zone.emp_s9_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    biotech = paris.building.zgp_id==22
                        zgp_id = building.disaggregate(zone.zgp_id)......0.1 sec
                    biotech = paris.building.zgp_id==22: completed.......0.1 sec
                    clichy_montfermeil = paris.building.zgp_id==21.......0.0 sec
                    confluence = paris.building.zgp_id==23...............0.0 sec
                    descates = paris.building.zgp_id==24.................0.0 sec
                    la_defense = paris.building.zgp_id==25...............0.0 sec
                    le_bourget = paris.building.zgp_id==26...............0.0 sec
                    paris_pole = (paris.building.zgp_id>=27)*(paris.building.zgp_id<=46) ....0.0 sec
                    pleyel = paris.building.zgp_id==47...................0.0 sec
                    roissy = paris.building.zgp_id==48...................0.0 sec
                    saclay = paris.building.zgp_id==49...................0.0 sec
                    val_de_france_gonesse = paris.building.zgp_id==50....0.0 sec
                    Choice set size: 50
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 3 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                ELCM chunk 1 out of 1.: completed.......................33.1 sec
            Running Establishment Location Choice Model (from urbansim.models.agent_location_choice_model): completed...33.1 sec
            Running Household Transition Model (from urbansim.models.transition_model): started on Tue Apr 10 05:32:54 2012
                _actual_ = control_total.aggregate(household._one_)......0.2 sec
                
                +---------+--------+--------+------------+--------+------+
                | hh_type | actual | target | difference | action | note |
                +---------+--------+--------+------------+--------+------+
                |    1    | 178340 | 180653 |    2313    | +2313  |      |
                |    2    | 431910 | 437512 |    5602    | +5602  |      |
                |    3    | 33177  | 33607  |    430     |  +430  |      |
                |    4    | 979880 | 992589 |   12709    | +12709 |      |
                |    5    | 368136 | 373184 |    5048    | +5048  |      |
                |    6    | 319663 | 324046 |    4383    | +4383  |      |
                |    7    | 37425  | 37938  |    513     |  +513  |      |
                |    8    | 585878 | 593911 |    8033    | +8033  |      |
                |    9    | 217253 | 217698 |    445     |  +445  |      |
                |    10   | 142010 | 142301 |    291     |  +291  |      |
                |    11   | 30441  | 30503  |     62     |  +62   |      |
                |    12   | 322615 | 323277 |    662     |  +662  |      |
                |    13   | 250283 | 251176 |    893     |  +893  |      |
                |    14   | 106403 | 106783 |    380     |  +380  |      |
                |    15   | 29432  | 29537  |    105     |  +105  |      |
                |    16   | 232252 | 233080 |    828     |  +828  |      |
                |    17   | 96923  | 97761  |    838     |  +838  |      |
                |    18   | 32751  | 33035  |    284     |  +284  |      |
                |    19   | 13450  | 13567  |    117     |  +117  |      |
                |    20   | 105610 | 106524 |    914     |  +914  |      |
                |    21   | 37476  | 37421  |    -55     |  -55   |      |
                |    22   | 12131  | 12113  |    -18     |  -18   |      |
                |    23   |  7520  |  7509  |    -11     |  -11   |      |
                |    24   | 70186  | 70083  |    -103    |  -103  |      |
                +---------+--------+--------+------------+--------+------+
                
            Running Household Transition Model (from urbansim.models.transition_model): completed...9.3 sec
            Running Household Relocation Model (from urbansim.models.agent_relocation_model): started on Tue Apr 10 05:33:03 2012
                Number of agents sampled based on rates: 573622
                Number of total movers: 612657
            Running Household Relocation Model (from urbansim.models.agent_relocation_model): completed...4.4 sec
            Running Household Location Choice Model (from urbansim.models.household_location_choice_model): started on Tue Apr 10 05:33:08 2012
                Total number of individuals: 612657
                HLCM chunk 1 out of 1.: started on Tue Apr 10 05:33:08 2012
                    Number of agents in this chunk: 612657
                    vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households)
                        number_of_households = building.number_of_agents(household)....0.5 sec
                        WARNING: Negative values detected in function/method ''
                        WARNING: Minimum: -203.0. Negative values clipped to zero.
                    vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households): completed...0.5 sec
                    Available capacity: 982183.0 units.
                    (urbansim_zone.building.vacant_residential_units>0)*(household.building_type_id==building.building_type_id)....0.0 sec
                    paris.building.M_DDDjt
                        M_1j0 = paris.building.number_of_households_of_type_1_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs1=building.aggregate(household.hh_type==1)
                                        household.hh_type==1.............0.5 sec
                                    _hhs1=building.aggregate(household.hh_type==1): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs1=building.aggregate(household.hh_type==1)
                                        household.hh_type==1.............0.0 sec
                                    _hhs1=building.aggregate(household.hh_type==1): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_1j0 = paris.building.number_of_households_of_type_1_lag4: completed...0.9 sec
                        TM_1t = alldata.aggregate_all(numpy.logical_and(household.hh_type==1, household.building_id<=0))
                            numpy.logical_and(household.hh_type==1,household.building_id<=0)....0.0 sec
                        TM_1t = alldata.aggregate_all(numpy.logical_and(household.hh_type==1, household.building_id<=0)): completed...0.1 sec
                        TM_10 = paris.alldata.number_of_households_of_type_1_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs1=alldata.aggregate_all(household.hh_type==1)
                                        household.hh_type==1.............0.5 sec
                                    _hhs1=alldata.aggregate_all(household.hh_type==1): completed...0.5 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.5 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs1=alldata.aggregate_all(household.hh_type==1)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_10 = paris.alldata.number_of_households_of_type_1_lag4: completed...0.6 sec
                        V_ijt = urbansim_zone.building.vacant_residential_units....0.0 sec
                        V_ij0 = urbansim_zone.building.vacant_residential_units_lag4
                            opus_core.variables.VVV_lagLLL
                                vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households)
                                    number_of_households = building.number_of_agents(household)....1.0 sec
                                    WARNING: Negative values detected in function/method ''
                                    WARNING: Minimum: -22.0. Negative values clipped to zero.
                                vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households): completed...1.0 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        V_ij0 = urbansim_zone.building.vacant_residential_units_lag4: completed...1.0 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................2.7 sec
                    paris.building.M_DDDjt
                        M_2j0 = paris.building.number_of_households_of_type_2_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs2=building.aggregate(household.hh_type==2)
                                        household.hh_type==2.............0.5 sec
                                    _hhs2=building.aggregate(household.hh_type==2): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs2=building.aggregate(household.hh_type==2)
                                        household.hh_type==2.............0.0 sec
                                    _hhs2=building.aggregate(household.hh_type==2): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_2j0 = paris.building.number_of_households_of_type_2_lag4: completed...1.0 sec
                        TM_2t = alldata.aggregate_all(numpy.logical_and(household.hh_type==2, household.building_id<=0))
                            numpy.logical_and(household.hh_type==2,household.building_id<=0)....0.0 sec
                        TM_2t = alldata.aggregate_all(numpy.logical_and(household.hh_type==2, household.building_id<=0)): completed...0.1 sec
                        TM_20 = paris.alldata.number_of_households_of_type_2_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs2=alldata.aggregate_all(household.hh_type==2)
                                        household.hh_type==2.............0.5 sec
                                    _hhs2=alldata.aggregate_all(household.hh_type==2): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs2=alldata.aggregate_all(household.hh_type==2)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_20 = paris.alldata.number_of_households_of_type_2_lag4: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_3j0 = paris.building.number_of_households_of_type_3_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs3=building.aggregate(household.hh_type==3)
                                        household.hh_type==3.............0.5 sec
                                    _hhs3=building.aggregate(household.hh_type==3): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs3=building.aggregate(household.hh_type==3)
                                        household.hh_type==3.............0.0 sec
                                    _hhs3=building.aggregate(household.hh_type==3): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_3j0 = paris.building.number_of_households_of_type_3_lag4: completed...0.9 sec
                        TM_3t = alldata.aggregate_all(numpy.logical_and(household.hh_type==3, household.building_id<=0))
                            numpy.logical_and(household.hh_type==3,household.building_id<=0)....0.0 sec
                        TM_3t = alldata.aggregate_all(numpy.logical_and(household.hh_type==3, household.building_id<=0)): completed...0.1 sec
                        TM_30 = paris.alldata.number_of_households_of_type_3_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs3=alldata.aggregate_all(household.hh_type==3)
                                        household.hh_type==3.............0.5 sec
                                    _hhs3=alldata.aggregate_all(household.hh_type==3): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs3=alldata.aggregate_all(household.hh_type==3)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_30 = paris.alldata.number_of_households_of_type_3_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_4j0 = paris.building.number_of_households_of_type_4_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs4=building.aggregate(household.hh_type==4)
                                        household.hh_type==4.............0.5 sec
                                    _hhs4=building.aggregate(household.hh_type==4): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs4=building.aggregate(household.hh_type==4)
                                        household.hh_type==4.............0.0 sec
                                    _hhs4=building.aggregate(household.hh_type==4): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_4j0 = paris.building.number_of_households_of_type_4_lag4: completed...1.0 sec
                        TM_4t = alldata.aggregate_all(numpy.logical_and(household.hh_type==4, household.building_id<=0))
                            numpy.logical_and(household.hh_type==4,household.building_id<=0)....0.0 sec
                        TM_4t = alldata.aggregate_all(numpy.logical_and(household.hh_type==4, household.building_id<=0)): completed...0.2 sec
                        TM_40 = paris.alldata.number_of_households_of_type_4_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs4=alldata.aggregate_all(household.hh_type==4)
                                        household.hh_type==4.............0.5 sec
                                    _hhs4=alldata.aggregate_all(household.hh_type==4): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs4=alldata.aggregate_all(household.hh_type==4)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_40 = paris.alldata.number_of_households_of_type_4_lag4: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................2.0 sec
                    paris.building.M_DDDjt
                        M_5j0 = paris.building.number_of_households_of_type_5_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs5=building.aggregate(household.hh_type==5)
                                        household.hh_type==5.............0.5 sec
                                    _hhs5=building.aggregate(household.hh_type==5): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs5=building.aggregate(household.hh_type==5)
                                        household.hh_type==5.............0.0 sec
                                    _hhs5=building.aggregate(household.hh_type==5): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_5j0 = paris.building.number_of_households_of_type_5_lag4: completed...1.0 sec
                        TM_5t = alldata.aggregate_all(numpy.logical_and(household.hh_type==5, household.building_id<=0))
                            numpy.logical_and(household.hh_type==5,household.building_id<=0)....0.0 sec
                        TM_5t = alldata.aggregate_all(numpy.logical_and(household.hh_type==5, household.building_id<=0)): completed...0.1 sec
                        TM_50 = paris.alldata.number_of_households_of_type_5_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs5=alldata.aggregate_all(household.hh_type==5)
                                        household.hh_type==5.............0.5 sec
                                    _hhs5=alldata.aggregate_all(household.hh_type==5): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs5=alldata.aggregate_all(household.hh_type==5)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_50 = paris.alldata.number_of_households_of_type_5_lag4: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_6j0 = paris.building.number_of_households_of_type_6_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs6=building.aggregate(household.hh_type==6)
                                        household.hh_type==6.............0.5 sec
                                    _hhs6=building.aggregate(household.hh_type==6): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs6=building.aggregate(household.hh_type==6)
                                        household.hh_type==6.............0.0 sec
                                    _hhs6=building.aggregate(household.hh_type==6): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_6j0 = paris.building.number_of_households_of_type_6_lag4: completed...1.0 sec
                        TM_6t = alldata.aggregate_all(numpy.logical_and(household.hh_type==6, household.building_id<=0))
                            numpy.logical_and(household.hh_type==6,household.building_id<=0)....0.0 sec
                        TM_6t = alldata.aggregate_all(numpy.logical_and(household.hh_type==6, household.building_id<=0)): completed...0.1 sec
                        TM_60 = paris.alldata.number_of_households_of_type_6_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs6=alldata.aggregate_all(household.hh_type==6)
                                        household.hh_type==6.............0.5 sec
                                    _hhs6=alldata.aggregate_all(household.hh_type==6): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs6=alldata.aggregate_all(household.hh_type==6)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_60 = paris.alldata.number_of_households_of_type_6_lag4: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_7j0 = paris.building.number_of_households_of_type_7_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs7=building.aggregate(household.hh_type==7)
                                        household.hh_type==7.............0.6 sec
                                    _hhs7=building.aggregate(household.hh_type==7): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs7=building.aggregate(household.hh_type==7)
                                        household.hh_type==7.............0.0 sec
                                    _hhs7=building.aggregate(household.hh_type==7): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.1 sec
                        M_7j0 = paris.building.number_of_households_of_type_7_lag4: completed...1.1 sec
                        TM_7t = alldata.aggregate_all(numpy.logical_and(household.hh_type==7, household.building_id<=0))
                            numpy.logical_and(household.hh_type==7,household.building_id<=0)....0.0 sec
                        TM_7t = alldata.aggregate_all(numpy.logical_and(household.hh_type==7, household.building_id<=0)): completed...0.1 sec
                        TM_70 = paris.alldata.number_of_households_of_type_7_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs7=alldata.aggregate_all(household.hh_type==7)
                                        household.hh_type==7.............0.5 sec
                                    _hhs7=alldata.aggregate_all(household.hh_type==7): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs7=alldata.aggregate_all(household.hh_type==7)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_70 = paris.alldata.number_of_households_of_type_7_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................2.0 sec
                    paris.building.M_DDDjt
                        M_8j0 = paris.building.number_of_households_of_type_8_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs8=building.aggregate(household.hh_type==8)
                                        household.hh_type==8.............0.5 sec
                                    _hhs8=building.aggregate(household.hh_type==8): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs8=building.aggregate(household.hh_type==8)
                                        household.hh_type==8.............0.0 sec
                                    _hhs8=building.aggregate(household.hh_type==8): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.1 sec
                        M_8j0 = paris.building.number_of_households_of_type_8_lag4: completed...1.1 sec
                        TM_8t = alldata.aggregate_all(numpy.logical_and(household.hh_type==8, household.building_id<=0))
                            numpy.logical_and(household.hh_type==8,household.building_id<=0)....0.0 sec
                        TM_8t = alldata.aggregate_all(numpy.logical_and(household.hh_type==8, household.building_id<=0)): completed...0.1 sec
                        TM_80 = paris.alldata.number_of_households_of_type_8_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs8=alldata.aggregate_all(household.hh_type==8)
                                        household.hh_type==8.............0.5 sec
                                    _hhs8=alldata.aggregate_all(household.hh_type==8): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs8=alldata.aggregate_all(household.hh_type==8)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_80 = paris.alldata.number_of_households_of_type_8_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_9j0 = paris.building.number_of_households_of_type_9_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs9=building.aggregate(household.hh_type==9)
                                        household.hh_type==9.............0.5 sec
                                    _hhs9=building.aggregate(household.hh_type==9): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs9=building.aggregate(household.hh_type==9)
                                        household.hh_type==9.............0.0 sec
                                    _hhs9=building.aggregate(household.hh_type==9): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_9j0 = paris.building.number_of_households_of_type_9_lag4: completed...0.9 sec
                        TM_9t = alldata.aggregate_all(numpy.logical_and(household.hh_type==9, household.building_id<=0))
                            numpy.logical_and(household.hh_type==9,household.building_id<=0)....0.0 sec
                        TM_9t = alldata.aggregate_all(numpy.logical_and(household.hh_type==9, household.building_id<=0)): completed...0.1 sec
                        TM_90 = paris.alldata.number_of_households_of_type_9_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs9=alldata.aggregate_all(household.hh_type==9)
                                        household.hh_type==9.............0.5 sec
                                    _hhs9=alldata.aggregate_all(household.hh_type==9): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs9=alldata.aggregate_all(household.hh_type==9)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_90 = paris.alldata.number_of_households_of_type_9_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_10j0 = paris.building.number_of_households_of_type_10_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs10=building.aggregate(household.hh_type==10)
                                        household.hh_type==10............0.5 sec
                                    _hhs10=building.aggregate(household.hh_type==10): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs10=building.aggregate(household.hh_type==10)
                                        household.hh_type==10............0.0 sec
                                    _hhs10=building.aggregate(household.hh_type==10): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_10j0 = paris.building.number_of_households_of_type_10_lag4: completed...0.9 sec
                        TM_10t = alldata.aggregate_all(numpy.logical_and(household.hh_type==10, household.building_id<=0))
                            numpy.logical_and(household.hh_type==10,household.building_id<=0)....0.0 sec
                        TM_10t = alldata.aggregate_all(numpy.logical_and(household.hh_type==10, household.building_id<=0)): completed...0.1 sec
                        TM_100 = paris.alldata.number_of_households_of_type_10_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs10=alldata.aggregate_all(household.hh_type==10)
                                        household.hh_type==10............0.5 sec
                                    _hhs10=alldata.aggregate_all(household.hh_type==10): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs10=alldata.aggregate_all(household.hh_type==10)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_100 = paris.alldata.number_of_households_of_type_10_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_11j0 = paris.building.number_of_households_of_type_11_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs11=building.aggregate(household.hh_type==11)
                                        household.hh_type==11............0.5 sec
                                    _hhs11=building.aggregate(household.hh_type==11): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs11=building.aggregate(household.hh_type==11)
                                        household.hh_type==11............0.0 sec
                                    _hhs11=building.aggregate(household.hh_type==11): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_11j0 = paris.building.number_of_households_of_type_11_lag4: completed...1.0 sec
                        TM_11t = alldata.aggregate_all(numpy.logical_and(household.hh_type==11, household.building_id<=0))
                            numpy.logical_and(household.hh_type==11,household.building_id<=0)....0.0 sec
                        TM_11t = alldata.aggregate_all(numpy.logical_and(household.hh_type==11, household.building_id<=0)): completed...0.1 sec
                        TM_110 = paris.alldata.number_of_households_of_type_11_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs11=alldata.aggregate_all(household.hh_type==11)
                                        household.hh_type==11............0.5 sec
                                    _hhs11=alldata.aggregate_all(household.hh_type==11): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs11=alldata.aggregate_all(household.hh_type==11)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_110 = paris.alldata.number_of_households_of_type_11_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_12j0 = paris.building.number_of_households_of_type_12_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs12=building.aggregate(household.hh_type==12)
                                        household.hh_type==12............0.5 sec
                                    _hhs12=building.aggregate(household.hh_type==12): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs12=building.aggregate(household.hh_type==12)
                                        household.hh_type==12............0.0 sec
                                    _hhs12=building.aggregate(household.hh_type==12): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_12j0 = paris.building.number_of_households_of_type_12_lag4: completed...0.9 sec
                        TM_12t = alldata.aggregate_all(numpy.logical_and(household.hh_type==12, household.building_id<=0))
                            numpy.logical_and(household.hh_type==12,household.building_id<=0)....0.0 sec
                        TM_12t = alldata.aggregate_all(numpy.logical_and(household.hh_type==12, household.building_id<=0)): completed...0.1 sec
                        TM_120 = paris.alldata.number_of_households_of_type_12_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs12=alldata.aggregate_all(household.hh_type==12)
                                        household.hh_type==12............0.5 sec
                                    _hhs12=alldata.aggregate_all(household.hh_type==12): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs12=alldata.aggregate_all(household.hh_type==12)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_120 = paris.alldata.number_of_households_of_type_12_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_13j0 = paris.building.number_of_households_of_type_13_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs13=building.aggregate(household.hh_type==13)
                                        household.hh_type==13............0.5 sec
                                    _hhs13=building.aggregate(household.hh_type==13): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs13=building.aggregate(household.hh_type==13)
                                        household.hh_type==13............0.0 sec
                                    _hhs13=building.aggregate(household.hh_type==13): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_13j0 = paris.building.number_of_households_of_type_13_lag4: completed...1.0 sec
                        TM_13t = alldata.aggregate_all(numpy.logical_and(household.hh_type==13, household.building_id<=0))
                            numpy.logical_and(household.hh_type==13,household.building_id<=0)....0.0 sec
                        TM_13t = alldata.aggregate_all(numpy.logical_and(household.hh_type==13, household.building_id<=0)): completed...0.1 sec
                        TM_130 = paris.alldata.number_of_households_of_type_13_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs13=alldata.aggregate_all(household.hh_type==13)
                                        household.hh_type==13............0.5 sec
                                    _hhs13=alldata.aggregate_all(household.hh_type==13): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs13=alldata.aggregate_all(household.hh_type==13)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_130 = paris.alldata.number_of_households_of_type_13_lag4: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................2.0 sec
                    paris.building.M_DDDjt
                        M_14j0 = paris.building.number_of_households_of_type_14_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs14=building.aggregate(household.hh_type==14)
                                        household.hh_type==14............0.5 sec
                                    _hhs14=building.aggregate(household.hh_type==14): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs14=building.aggregate(household.hh_type==14)
                                        household.hh_type==14............0.0 sec
                                    _hhs14=building.aggregate(household.hh_type==14): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_14j0 = paris.building.number_of_households_of_type_14_lag4: completed...1.0 sec
                        TM_14t = alldata.aggregate_all(numpy.logical_and(household.hh_type==14, household.building_id<=0))
                            numpy.logical_and(household.hh_type==14,household.building_id<=0)....0.0 sec
                        TM_14t = alldata.aggregate_all(numpy.logical_and(household.hh_type==14, household.building_id<=0)): completed...0.1 sec
                        TM_140 = paris.alldata.number_of_households_of_type_14_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs14=alldata.aggregate_all(household.hh_type==14)
                                        household.hh_type==14............0.5 sec
                                    _hhs14=alldata.aggregate_all(household.hh_type==14): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs14=alldata.aggregate_all(household.hh_type==14)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_140 = paris.alldata.number_of_households_of_type_14_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_15j0 = paris.building.number_of_households_of_type_15_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs15=building.aggregate(household.hh_type==15)
                                        household.hh_type==15............0.5 sec
                                    _hhs15=building.aggregate(household.hh_type==15): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs15=building.aggregate(household.hh_type==15)
                                        household.hh_type==15............0.0 sec
                                    _hhs15=building.aggregate(household.hh_type==15): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_15j0 = paris.building.number_of_households_of_type_15_lag4: completed...0.9 sec
                        TM_15t = alldata.aggregate_all(numpy.logical_and(household.hh_type==15, household.building_id<=0))
                            numpy.logical_and(household.hh_type==15,household.building_id<=0)....0.0 sec
                        TM_15t = alldata.aggregate_all(numpy.logical_and(household.hh_type==15, household.building_id<=0)): completed...0.1 sec
                        TM_150 = paris.alldata.number_of_households_of_type_15_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs15=alldata.aggregate_all(household.hh_type==15)
                                        household.hh_type==15............0.5 sec
                                    _hhs15=alldata.aggregate_all(household.hh_type==15): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs15=alldata.aggregate_all(household.hh_type==15)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_150 = paris.alldata.number_of_households_of_type_15_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_16j0 = paris.building.number_of_households_of_type_16_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs16=building.aggregate(household.hh_type==16)
                                        household.hh_type==16............0.5 sec
                                    _hhs16=building.aggregate(household.hh_type==16): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs16=building.aggregate(household.hh_type==16)
                                        household.hh_type==16............0.0 sec
                                    _hhs16=building.aggregate(household.hh_type==16): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_16j0 = paris.building.number_of_households_of_type_16_lag4: completed...0.9 sec
                        TM_16t = alldata.aggregate_all(numpy.logical_and(household.hh_type==16, household.building_id<=0))
                            numpy.logical_and(household.hh_type==16,household.building_id<=0)....0.0 sec
                        TM_16t = alldata.aggregate_all(numpy.logical_and(household.hh_type==16, household.building_id<=0)): completed...0.1 sec
                        TM_160 = paris.alldata.number_of_households_of_type_16_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs16=alldata.aggregate_all(household.hh_type==16)
                                        household.hh_type==16............0.5 sec
                                    _hhs16=alldata.aggregate_all(household.hh_type==16): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs16=alldata.aggregate_all(household.hh_type==16)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_160 = paris.alldata.number_of_households_of_type_16_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_17j0 = paris.building.number_of_households_of_type_17_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs17=building.aggregate(household.hh_type==17)
                                        household.hh_type==17............0.5 sec
                                    _hhs17=building.aggregate(household.hh_type==17): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs17=building.aggregate(household.hh_type==17)
                                        household.hh_type==17............0.0 sec
                                    _hhs17=building.aggregate(household.hh_type==17): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_17j0 = paris.building.number_of_households_of_type_17_lag4: completed...0.9 sec
                        TM_17t = alldata.aggregate_all(numpy.logical_and(household.hh_type==17, household.building_id<=0))
                            numpy.logical_and(household.hh_type==17,household.building_id<=0)....0.0 sec
                        TM_17t = alldata.aggregate_all(numpy.logical_and(household.hh_type==17, household.building_id<=0)): completed...0.1 sec
                        TM_170 = paris.alldata.number_of_households_of_type_17_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs17=alldata.aggregate_all(household.hh_type==17)
                                        household.hh_type==17............0.5 sec
                                    _hhs17=alldata.aggregate_all(household.hh_type==17): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs17=alldata.aggregate_all(household.hh_type==17)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_170 = paris.alldata.number_of_households_of_type_17_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_18j0 = paris.building.number_of_households_of_type_18_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs18=building.aggregate(household.hh_type==18)
                                        household.hh_type==18............0.5 sec
                                    _hhs18=building.aggregate(household.hh_type==18): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs18=building.aggregate(household.hh_type==18)
                                        household.hh_type==18............0.0 sec
                                    _hhs18=building.aggregate(household.hh_type==18): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_18j0 = paris.building.number_of_households_of_type_18_lag4: completed...0.9 sec
                        TM_18t = alldata.aggregate_all(numpy.logical_and(household.hh_type==18, household.building_id<=0))
                            numpy.logical_and(household.hh_type==18,household.building_id<=0)....0.0 sec
                        TM_18t = alldata.aggregate_all(numpy.logical_and(household.hh_type==18, household.building_id<=0)): completed...0.1 sec
                        TM_180 = paris.alldata.number_of_households_of_type_18_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs18=alldata.aggregate_all(household.hh_type==18)
                                        household.hh_type==18............0.5 sec
                                    _hhs18=alldata.aggregate_all(household.hh_type==18): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs18=alldata.aggregate_all(household.hh_type==18)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_180 = paris.alldata.number_of_households_of_type_18_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_19j0 = paris.building.number_of_households_of_type_19_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs19=building.aggregate(household.hh_type==19)
                                        household.hh_type==19............0.5 sec
                                    _hhs19=building.aggregate(household.hh_type==19): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs19=building.aggregate(household.hh_type==19)
                                        household.hh_type==19............0.0 sec
                                    _hhs19=building.aggregate(household.hh_type==19): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_19j0 = paris.building.number_of_households_of_type_19_lag4: completed...1.0 sec
                        TM_19t = alldata.aggregate_all(numpy.logical_and(household.hh_type==19, household.building_id<=0))
                            numpy.logical_and(household.hh_type==19,household.building_id<=0)....0.0 sec
                        TM_19t = alldata.aggregate_all(numpy.logical_and(household.hh_type==19, household.building_id<=0)): completed...0.1 sec
                        TM_190 = paris.alldata.number_of_households_of_type_19_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs19=alldata.aggregate_all(household.hh_type==19)
                                        household.hh_type==19............0.5 sec
                                    _hhs19=alldata.aggregate_all(household.hh_type==19): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs19=alldata.aggregate_all(household.hh_type==19)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_190 = paris.alldata.number_of_households_of_type_19_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_20j0 = paris.building.number_of_households_of_type_20_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs20=building.aggregate(household.hh_type==20)
                                        household.hh_type==20............0.5 sec
                                    _hhs20=building.aggregate(household.hh_type==20): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs20=building.aggregate(household.hh_type==20)
                                        household.hh_type==20............0.0 sec
                                    _hhs20=building.aggregate(household.hh_type==20): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_20j0 = paris.building.number_of_households_of_type_20_lag4: completed...1.0 sec
                        TM_20t = alldata.aggregate_all(numpy.logical_and(household.hh_type==20, household.building_id<=0))
                            numpy.logical_and(household.hh_type==20,household.building_id<=0)....0.0 sec
                        TM_20t = alldata.aggregate_all(numpy.logical_and(household.hh_type==20, household.building_id<=0)): completed...0.1 sec
                        TM_200 = paris.alldata.number_of_households_of_type_20_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs20=alldata.aggregate_all(household.hh_type==20)
                                        household.hh_type==20............0.5 sec
                                    _hhs20=alldata.aggregate_all(household.hh_type==20): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs20=alldata.aggregate_all(household.hh_type==20)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_200 = paris.alldata.number_of_households_of_type_20_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_21j0 = paris.building.number_of_households_of_type_21_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs21=building.aggregate(household.hh_type==21)
                                        household.hh_type==21............0.5 sec
                                    _hhs21=building.aggregate(household.hh_type==21): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs21=building.aggregate(household.hh_type==21)
                                        household.hh_type==21............0.0 sec
                                    _hhs21=building.aggregate(household.hh_type==21): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_21j0 = paris.building.number_of_households_of_type_21_lag4: completed...0.9 sec
                        TM_21t = alldata.aggregate_all(numpy.logical_and(household.hh_type==21, household.building_id<=0))
                            numpy.logical_and(household.hh_type==21,household.building_id<=0)....0.0 sec
                        TM_21t = alldata.aggregate_all(numpy.logical_and(household.hh_type==21, household.building_id<=0)): completed...0.1 sec
                        TM_210 = paris.alldata.number_of_households_of_type_21_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs21=alldata.aggregate_all(household.hh_type==21)
                                        household.hh_type==21............0.5 sec
                                    _hhs21=alldata.aggregate_all(household.hh_type==21): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs21=alldata.aggregate_all(household.hh_type==21)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_210 = paris.alldata.number_of_households_of_type_21_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_22j0 = paris.building.number_of_households_of_type_22_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs22=building.aggregate(household.hh_type==22)
                                        household.hh_type==22............0.5 sec
                                    _hhs22=building.aggregate(household.hh_type==22): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs22=building.aggregate(household.hh_type==22)
                                        household.hh_type==22............0.0 sec
                                    _hhs22=building.aggregate(household.hh_type==22): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_22j0 = paris.building.number_of_households_of_type_22_lag4: completed...0.9 sec
                        TM_22t = alldata.aggregate_all(numpy.logical_and(household.hh_type==22, household.building_id<=0))
                            numpy.logical_and(household.hh_type==22,household.building_id<=0)....0.0 sec
                        TM_22t = alldata.aggregate_all(numpy.logical_and(household.hh_type==22, household.building_id<=0)): completed...0.1 sec
                        TM_220 = paris.alldata.number_of_households_of_type_22_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs22=alldata.aggregate_all(household.hh_type==22)
                                        household.hh_type==22............0.5 sec
                                    _hhs22=alldata.aggregate_all(household.hh_type==22): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs22=alldata.aggregate_all(household.hh_type==22)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_220 = paris.alldata.number_of_households_of_type_22_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_23j0 = paris.building.number_of_households_of_type_23_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs23=building.aggregate(household.hh_type==23)
                                        household.hh_type==23............0.5 sec
                                    _hhs23=building.aggregate(household.hh_type==23): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs23=building.aggregate(household.hh_type==23)
                                        household.hh_type==23............0.0 sec
                                    _hhs23=building.aggregate(household.hh_type==23): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_23j0 = paris.building.number_of_households_of_type_23_lag4: completed...0.9 sec
                        TM_23t = alldata.aggregate_all(numpy.logical_and(household.hh_type==23, household.building_id<=0))
                            numpy.logical_and(household.hh_type==23,household.building_id<=0)....0.0 sec
                        TM_23t = alldata.aggregate_all(numpy.logical_and(household.hh_type==23, household.building_id<=0)): completed...0.1 sec
                        TM_230 = paris.alldata.number_of_households_of_type_23_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs23=alldata.aggregate_all(household.hh_type==23)
                                        household.hh_type==23............0.5 sec
                                    _hhs23=alldata.aggregate_all(household.hh_type==23): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs23=alldata.aggregate_all(household.hh_type==23)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_230 = paris.alldata.number_of_households_of_type_23_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_24j0 = paris.building.number_of_households_of_type_24_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs24=building.aggregate(household.hh_type==24)
                                        household.hh_type==24............0.5 sec
                                    _hhs24=building.aggregate(household.hh_type==24): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs24=building.aggregate(household.hh_type==24)
                                        household.hh_type==24............0.0 sec
                                    _hhs24=building.aggregate(household.hh_type==24): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_24j0 = paris.building.number_of_households_of_type_24_lag4: completed...1.0 sec
                        TM_24t = alldata.aggregate_all(numpy.logical_and(household.hh_type==24, household.building_id<=0))
                            numpy.logical_and(household.hh_type==24,household.building_id<=0)....0.0 sec
                        TM_24t = alldata.aggregate_all(numpy.logical_and(household.hh_type==24, household.building_id<=0)): completed...0.1 sec
                        TM_240 = paris.alldata.number_of_households_of_type_24_lag4
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs24=alldata.aggregate_all(household.hh_type==24)
                                        household.hh_type==24............0.5 sec
                                    _hhs24=alldata.aggregate_all(household.hh_type==24): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs24=alldata.aggregate_all(household.hh_type==24)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_240 = paris.alldata.number_of_households_of_type_24_lag4: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    CDGartClse = building.disaggregate(zone.cdgartclse)..0.1 sec
                    CDGartFar = building.disaggregate(zone.cdgartfar)....0.1 sec
                    CDGhighwClse = building.disaggregate(zone.cdghighwclse)....0.1 sec
                    CDGhighwFar = building.disaggregate(zone.cdghighwfar)....0.1 sec
                    CLCrPriceF_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.7 sec
                    CLCrPriceH_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.7 sec
                    CLCsPriceF = ln_bounded(building.price)..............0.0 sec
                    CLCsPriceF_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.7 sec
                    CLCsPriceH_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.7 sec
                    CLRrUnitsF = ln_bounded(building.residential_units)..0.0 sec
                    CLRrUnitsH = ln_bounded(building.residential_units)..0.0 sec
                    CLRsUnitsF = ln_bounded(building.residential_units)..0.0 sec
                    CLRsUnitsH = ln_bounded(building.residential_units)..0.0 sec
                    CNGsubwSP_HBRcar0 = (household.cars==0)*(building.disaggregate(zone.csubway9))....1.0 sec
                    CNGsubwSP_HBRcar1g = (household.cars>=1)*(building.disaggregate(zone.csubway9))....1.0 sec
                    CNGtrainSt_HBRcar0 = (household.cars==0)*(building.disaggregate(zone.ctrain9))....1.0 sec
                    CNGtrainSt_HBRcar1g = (household.cars>=1)*(building.disaggregate(zone.ctrain9))....1.0 sec
                    CNRsUnitsH = building.residential_units..............0.0 sec
                    CPBMedInc_HBRmedInc = (household.lincomepc<=10.3)*(household.lincomepc>9.9)*((building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.lincomepc<=9.9, intermediates = [building])- zone.aggregate(household.lincomepc>10.3, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum))))*100)
                        (zone.aggregate(building.number_of_agents(household),function=sum))
                            building.number_of_agents(household).........0.5 sec
                        (zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.5 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.lincomepc<=9.9,intermediates=[building])-zone.aggregate(household.lincomepc>10.3,intermediates=[building])
                            building.aggregate(household.autogenvar103)
                                household.lincomepc>10.3.................0.0 sec
                            building.aggregate(household.autogenvar103): completed...0.2 sec
                            building.aggregate(household.autogenvar109)
                                household.lincomepc<=9.9.................0.0 sec
                            building.aggregate(household.autogenvar109): completed...0.2 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.lincomepc<=9.9,intermediates=[building])-zone.aggregate(household.lincomepc>10.3,intermediates=[building]): completed...0.4 sec
                    CPBMedInc_HBRmedInc = (household.lincomepc<=10.3)*(household.lincomepc>9.9)*((building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.lincomepc<=9.9, intermediates = [building])- zone.aggregate(household.lincomepc>10.3, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum))))*100): completed...2.8 sec
                    CPBhghInc_HBRhghInc = (household.lincomepc>10.3)*(building.disaggregate(zone.aggregate(household.lincomepc>10.3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.lincomepc>10.3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPBhghInc_HBRhghInc = (household.lincomepc>10.3)*(building.disaggregate(zone.aggregate(household.lincomepc>10.3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.2 sec
                    CPBlowInc_HBRlowInc = (household.lincomepc<=9.9)*(building.disaggregate(zone.aggregate(household.lincomepc<=9.9, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.lincomepc<=9.9,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPBlowInc_HBRlowInc = (household.lincomepc<=9.9)*(building.disaggregate(zone.aggregate(household.lincomepc<=9.9, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.2 sec
                    CPRKfrgn_KBRfrgn = (household.race_id==1)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.race_id==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar55)
                                household.race_id==1.....................0.0 sec
                            building.aggregate(household.autogenvar55): completed...0.2 sec
                        zone.aggregate(household.race_id==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRKfrgn_KBRfrgn = (household.race_id==1)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRKfrgn_KBRnoFrgn = (household.race_id==0)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)....1.2 sec
                    CPRKmidAge_KBRmidAge = ((household.age_of_head>35) * (household.age_of_head<=55))*(building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.age_of_head>55, intermediates = [building])- zone.aggregate(household.age_of_head<=35, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.age_of_head>55,intermediates=[building])-zone.aggregate(household.age_of_head<=35,intermediates=[building])
                            building.aggregate(household.autogenvar60)
                                household.age_of_head>55.................0.0 sec
                            building.aggregate(household.autogenvar60): completed...0.2 sec
                            building.aggregate(household.autogenvar63)
                                household.age_of_head<=35................0.0 sec
                            building.aggregate(household.autogenvar63): completed...0.2 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.age_of_head>55,intermediates=[building])-zone.aggregate(household.age_of_head<=35,intermediates=[building]): completed...0.4 sec
                    CPRKmidAge_KBRmidAge = ((household.age_of_head>35) * (household.age_of_head<=55))*(building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.age_of_head>55, intermediates = [building])- zone.aggregate(household.age_of_head<=35, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...2.3 sec
                    CPRKold_KBRold = (household.age_of_head>55)*(building.disaggregate(zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.age_of_head>55,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPRKold_KBRold = (household.age_of_head>55)*(building.disaggregate(zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.2 sec
                    CPRKyng_KBRyng = (household.age_of_head<=35)*(building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPRKyng_KBRyng = (household.age_of_head<=35)*(building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.2 sec
                    CPRam0_HBRam0 = (household.workers==0)*(building.disaggregate(zone.aggregate(household.workers==0, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers==0,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar168)
                                household.workers==0.....................0.0 sec
                            building.aggregate(household.autogenvar168): completed...0.2 sec
                        zone.aggregate(household.workers==0,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam0_HBRam0 = (household.workers==0)*(building.disaggregate(zone.aggregate(household.workers==0, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRam1_HBRam1 = (household.workers==1)*(building.disaggregate(zone.aggregate(household.workers==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar67)
                                household.workers==1.....................0.0 sec
                            building.aggregate(household.autogenvar67): completed...0.2 sec
                        zone.aggregate(household.workers==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam1_HBRam1 = (household.workers==1)*(building.disaggregate(zone.aggregate(household.workers==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRam1g_HBRam1g = (household.workers>=1)*(building.disaggregate(zone.aggregate(household.workers>=1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers>=1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar385)
                                household.workers>=1.....................0.0 sec
                            building.aggregate(household.autogenvar385): completed...0.2 sec
                        zone.aggregate(household.workers>=1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam1g_HBRam1g = (household.workers>=1)*(building.disaggregate(zone.aggregate(household.workers>=1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRam2g_HBRam2g = (household.workers>=2)*(building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar71)
                                household.workers>=2.....................0.0 sec
                            building.aggregate(household.autogenvar71): completed...0.2 sec
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam2g_HBRam2g = (household.workers>=2)*(building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2))
                        zone.aggregate(establishment.employment,function=sum)....0.0 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2)): completed...0.0 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.2 sec
                    HBRsmeDept = (household.previous_dpt==75)*(building.disaggregate(zone.dept==75))+(household.previous_dpt==77)*(building.disaggregate(zone.dept==77))+(household.previous_dpt==78)*(building.disaggregate(zone.dept==78))+(household.previous_dpt==91)*(building.disaggregate(zone.dept==91))+(household.previous_dpt==92)*(building.disaggregate(zone.dept==92))+(household.previous_dpt==93)*(building.disaggregate(zone.dept==93))+(household.previous_dpt==94)*(building.disaggregate(zone.dept==94))+(household.previous_dpt==95)*(building.disaggregate(zone.dept==95))
                        zone.dept==77....................................0.0 sec
                        zone.dept==78....................................0.0 sec
                        zone.dept==95....................................0.0 sec
                        zone.dept==91....................................0.0 sec
                    HBRsmeDept = (household.previous_dpt==75)*(building.disaggregate(zone.dept==75))+(household.previous_dpt==77)*(building.disaggregate(zone.dept==77))+(household.previous_dpt==78)*(building.disaggregate(zone.dept==78))+(household.previous_dpt==91)*(building.disaggregate(zone.dept==91))+(household.previous_dpt==92)*(building.disaggregate(zone.dept==92))+(household.previous_dpt==93)*(building.disaggregate(zone.dept==93))+(household.previous_dpt==94)*(building.disaggregate(zone.dept==94))+(household.previous_dpt==95)*(building.disaggregate(zone.dept==95)): completed...3.1 sec
                    ctdtco_HBRcar0 = (household.cars==0)*(building.ctdtco)
                        building.disaggregate(zone.ctdtco)...............0.1 sec
                    ctdtco_HBRcar0 = (household.cars==0)*(building.ctdtco): completed...1.1 sec
                    ctdtco_HBRcar1g = (household.cars>=1)*(building.ctdtco)....1.1 sec
                    ctdvpo_HBRcar0 = (household.cars==0)*(building.ctdvpo)....1.1 sec
                    ctdvpo_HBRcar1g = (household.cars>=1)*(building.ctdvpo)....1.1 sec
                    Choice set size: 50
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 3 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 3 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                HLCM chunk 1 out of 1.: completed................3 min, 45.2 sec
            Running Household Location Choice Model (from urbansim.models.household_location_choice_model): completed...3 min, 45.5 sec
            Running Real Estate Price Model (from urbansim.models.real_estate_price_model): started on Tue Apr 10 05:36:53 2012
                ln_price=ln(building.price)..............................0.0 sec
                Total number of individuals: 6500
                REPM chunk 1 out of 1.: started on Tue Apr 10 05:36:53 2012
                    Number of agents in this chunk: 6500
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc)
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh))
                            zone.aggregate(building.number_of_agents(household),function=sum)
                                building.number_of_agents(household).....0.5 sec
                            zone.aggregate(building.number_of_agents(household),function=sum): completed...0.5 sec
                            zone_id = household.disaggregate(building.zone_id)....0.2 sec
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh)): completed...0.9 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc): completed...0.9 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum)))
                            building.aggregate(household.autogenvar60)...0.2 sec
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum))): completed...0.2 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100: completed...0.2 sec
                    CRItaxBati = building.disaggregate(zone.bati)........0.1 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.2 sec
                REPM chunk 1 out of 1.: completed........................1.4 sec
            Running Real Estate Price Model (from urbansim.models.real_estate_price_model): completed...1.4 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:36:56 2012
                household.disaggregate(zone.dept)........................0.2 sec
            Running opus_core.simple_model.SimpleModel: completed........0.2 sec
            Writing datasets to cache for year 2003: started on Tue Apr 10 05:36:56 2012
                Flushing building
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2003/buildings doesn't exist and is created
                Flushing sector
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2003/sectors doesn't exist and is created
                Flushing home_based_status
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2003/home_based_status doesn't exist and is created
                Flushing zone
                Flushing household
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2003/households doesn't exist and is created
                Flushing development_event_history
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2003/development_event_history doesn't exist and is created
                Flushing target_vacancy
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2003/target_vacancies doesn't exist and is created
                Flushing building_type
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2003/building_types doesn't exist and is created
                Flushing building_sqft_per_job
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2003/building_sqft_per_job doesn't exist and is created
                Flushing choice
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2003/choice_set doesn't exist and is created
                Flushing establishment
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2003/establishment doesn't exist and is created
                Flushing development_project
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2003/development_projects doesn't exist and is created
            Writing datasets to cache for year 2003: completed..........33.3 sec
        Simulate year 2003: completed............................5 min, 24.9 sec
        Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/year_2003_log.txt
    Starting simulation for year 2003: completed.................5 min, 25.0 sec
Start simulation run: completed..................................5 min, 25.0 sec
Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
Running simulation for year 2003 in new process: completed.......5 min, 25.6 sec
Triggering travelmodel
Leaving travelmodel
Running simulation for year 2004 in new process: started on Tue Apr 10 05:37:29 2012
    Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
    Invoking: /usr/bin/python /workspace/opus/src/opus_core/model_coordinators/model_system.py -r /tmp/tmpQo66DL/resources.pickle --log-file-name run_multiprocess.log
Cache Directory set to: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16
Start simulation run: started on Tue Apr 10 05:37:29 2012
    random seed = (550290314,)
    Starting simulation for year 2004: started on Tue Apr 10 05:37:29 2012
        Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
        Logging to file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/year_2004_log.txt
        Simulate year 2004: started on Tue Apr 10 05:37:29 2012
            Running Swap Datasets (from opus_core.models.swap_datasets): started on Tue Apr 10 05:37:30 2012....0.0 sec
            Running Swap Datasets (from opus_core.models.swap_datasets): started on Tue Apr 10 05:37:30 2012
                Backed up /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2004/zones to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2004/zones_ORIGINAL
                Renamed /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2004/zones_baseline to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2004/zones
            Running Swap Datasets (from opus_core.models.swap_datasets): completed...0.0 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:37:30 2012
                numpy.clip(vpo, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:37:30 2012
                numpy.clip(tco, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:37:30 2012
                numpy.clip(tcd, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:37:30 2012
                numpy.clip(vpd, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running Development Project Transition Model (from urbansim.models.real_estate_transition_model): started on Tue Apr 10 05:37:30 2012
                is_residential = building.disaggregate(building_type.is_residential)....0.1 sec
                is_residential = development_event_history.disaggregate(building_type.is_residential)....0.0 sec
                
                +----------------+-----------+-----------+------------+----------+
                | is_residential |   actual  |   target  | difference |  action  |
                +----------------+-----------+-----------+------------+----------+
                |       1        |  5050232  |  5098812  |   48580    | +48589.0 |
                |       0        | 382249150 | 360112221 | -22136929  |    0     |
                +----------------+-----------+-----------+------------+----------+
            Running Development Project Transition Model (from urbansim.models.real_estate_transition_model): completed...2.1 sec
            Running Non-Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): started on Tue Apr 10 05:37:32 2012
                is_non_residential = numpy.logical_not(urbansim_zone.development_project.is_residential)....0.0 sec
                Nothing to be done.
            Running Non-Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): completed...0.0 sec
            Running Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): started on Tue Apr 10 05:37:32 2012
                Total number of individuals: 4391
                DPLCM chunk 1 out of 1.: started on Tue Apr 10 05:37:32 2012
                    Number of agents in this chunk: 4391
                    developable_residential_units_capacity = clip_to_zero(building.residential_units_capacity - building.residential_units)....0.0 sec
                    Available capacity: 31741921 units.
                    (building.building_type_id==1)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==2)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==3)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==4)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    CBAPC = (building.disaggregate(zone.dept==92))+(building.disaggregate(zone.dept==93))+(building.disaggregate(zone.dept==94))
                        zone.dept==94....................................0.1 sec
                        zone.dept==92....................................0.0 sec
                        zone.dept==93....................................0.0 sec
                    CBAPC = (building.disaggregate(zone.dept==92))+(building.disaggregate(zone.dept==93))+(building.disaggregate(zone.dept==94)): completed...0.1 sec
                    CBAnwCty = building.disaggregate(zone.cvilnouvel)....0.1 sec
                    CBAparis = building.disaggregate(zone.dept==75)
                        zone.dept==75....................................0.0 sec
                    CBAparis = building.disaggregate(zone.dept==75): completed...0.0 sec
                    CDGCBD = building.disaggregate(zone.cd_chatelet).....0.1 sec
                    CDGart = building.disaggregate(zone.cdistart)/1000...0.1 sec
                    CDGhighw = building.disaggregate(zone.cdisthwy)/1000....0.1 sec
                    CLCrPriceF = ln_bounded(building.price)..............0.0 sec
                    CLCrPriceH = ln_bounded(building.price)..............0.0 sec
                    CLCsPriceH = ln_bounded(building.price)..............0.0 sec
                    CLGarea = building.disaggregate(zone.ZLGarea)
                        ln_bounded(zone.careakm2)........................0.1 sec
                    CLGarea = building.disaggregate(zone.ZLGarea): completed...0.1 sec
                    CNGsubwSP = building.disaggregate(zone.csubway9).....0.1 sec
                    CNGtrainSt = building.disaggregate(zone.ctrain9).....0.1 sec
                    CPBhghInc = building.disaggregate(zone.ZPBhghInc)
                        100*(zone.aggregate(household.lincomepc>10.3)/(zone.CNRhh))
                            zone.aggregate(building.number_of_agents(household),function=sum)
                                building.number_of_agents(household).....0.6 sec
                            zone.aggregate(building.number_of_agents(household),function=sum): completed...0.6 sec
                            household.lincomepc>10.3.....................0.1 sec
                            zone_id = household.disaggregate(building.zone_id)....0.2 sec
                        100*(zone.aggregate(household.lincomepc>10.3)/(zone.CNRhh)): completed...1.2 sec
                    CPBhghInc = building.disaggregate(zone.ZPBhghInc): completed...1.2 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc)
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh))
                            household.lincomepc<=9.9.....................0.0 sec
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh)): completed...0.2 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc): completed...0.2 sec
                    CPInoise = building.disaggregate(zone.cnoise)........0.1 sec
                    CPOforest = building.disaggregate(zone.cpbois).......0.1 sec
                    CPOhlth = building.disaggregate(zone.cpequipem_sante)....0.1 sec
                    CPOpark = building.disaggregate(zone.cpparc_jardin)..0.1 sec
                    CPOsport = building.disaggregate(zone.cpsport).......0.1 sec
                    CPOwater = building.disaggregate(zone.cpeau).........0.1 sec
                    CPRKfrgn = building.disaggregate(zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))))*100
                        zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household)))
                            building.aggregate(household.race_id==1)
                                household.race_id==1.....................0.0 sec
                            building.aggregate(household.race_id==1): completed...0.3 sec
                        zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))): completed...0.3 sec
                    CPRKfrgn = building.disaggregate(zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))))*100: completed...0.3 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum)))
                            building.aggregate(household.autogenvar60)
                                household.age_of_head>55.................0.1 sec
                            building.aggregate(household.autogenvar60): completed...0.3 sec
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum))): completed...0.3 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100: completed...0.3 sec
                    CPRKyng = building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar63)
                                household.age_of_head<=35................0.0 sec
                            building.aggregate(household.autogenvar63): completed...0.2 sec
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRKyng = building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.2 sec
                    CPRaft90 = building.disaggregate(zone.cpraft90)......0.1 sec
                    CPRam1 = building.disaggregate(zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.workers==1)
                                household.workers==1.....................0.1 sec
                            building.aggregate(household.workers==1): completed...0.3 sec
                        zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRam1 = building.disaggregate(zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRam2g = building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar71)
                                household.workers>=2.....................0.0 sec
                            building.aggregate(household.autogenvar71): completed...0.3 sec
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRam2g = building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRam3g = building.disaggregate(zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.workers>=3)
                                household.workers>=3.....................0.0 sec
                            building.aggregate(household.workers>=3): completed...0.2 sec
                        zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam3g = building.disaggregate(zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.2 sec
                    CPRbef15 = building.disaggregate(zone.cprbef15)......0.1 sec
                    CPRmemb2 = building.disaggregate(zone.aggregate(household.size==2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.size==2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar75)
                                household.size==2........................0.1 sec
                            building.aggregate(household.autogenvar75): completed...0.3 sec
                        zone.aggregate(household.size==2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRmemb2 = building.disaggregate(zone.aggregate(household.size==2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRmemb3g = building.disaggregate(zone.aggregate(household.size>=3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.size>=3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar78)
                                household.size>=3........................0.0 sec
                            building.aggregate(household.autogenvar78): completed...0.3 sec
                        zone.aggregate(household.size>=3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRmemb3g = building.disaggregate(zone.aggregate(household.size>=3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2))
                        zone.aggregate(establishment.employment,function=sum)....0.1 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2)): completed...0.1 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.2 sec
                    ctdvpo = building.disaggregate(zone.ctdvpo)..........0.1 sec
                    Choice set size: 10
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                DPLCM chunk 1 out of 1.: completed.......................5.5 sec
            Running Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): completed...5.5 sec
            Running Add Development Projects Quantity to Buildings (from urbansim_zone.models.add_projects_to_buildings): started on Tue Apr 10 05:37:38 2012....0.2 sec
            emp_250 = (establishment.employment < 250).astype('i').......0.0 sec
            Running Establishment Disappearance Model (from paris.models.establishment_disappearance_model): started on Tue Apr 10 05:37:38 2012
                Total number of individuals: 365111
                EDM chunk 1 out of 1.: started on Tue Apr 10 05:37:38 2012
                    Number of agents in this chunk: 365111
                    EBADefense = establishment.disaggregate(building.CBADefense)
                        building.disaggregate(zone.insee==92062)+building.disaggregate(zone.insee==92026)+building.disaggregate(zone.insee==92050)
                            zone.insee==92050............................0.1 sec
                            zone.insee==92026............................0.0 sec
                            zone.insee==92062............................0.0 sec
                        building.disaggregate(zone.insee==92062)+building.disaggregate(zone.insee==92026)+building.disaggregate(zone.insee==92050): completed...0.1 sec
                    EBADefense = establishment.disaggregate(building.CBADefense): completed...0.1 sec
                    EBAnwCty = establishment.disaggregate(building.CBAnwCty)....0.0 sec
                    EBAparis = establishment.disaggregate(building.disaggregate(zone.dept==75))
                        building.disaggregate(zone.dept==75).............0.0 sec
                    EBAparis = establishment.disaggregate(building.disaggregate(zone.dept==75)): completed...0.0 sec
                    ECTDTcD = establishment.disaggregate(building.ctdtcd)
                        building.disaggregate(zone.ctdtcd)...............0.1 sec
                    ECTDTcD = establishment.disaggregate(building.ctdtcd): completed...0.1 sec
                    ECTDVpD = establishment.disaggregate(building.ctdvpd)
                        building.disaggregate(zone.ctdvpd)...............0.1 sec
                    ECTDVpD = establishment.disaggregate(building.ctdvpd): completed...0.1 sec
                    ELPB = establishment.disaggregate(building.CLPB)
                        building.disaggregate(zone.ZCLPB)
                            ln_bounded(zone.aggregate(building.price*(building.building_type_id==6), function=sum)/zone.aggregate((building.building_type_id==6), function=sum))
                                building.price*(building.building_type_id==6)....0.0 sec
                                (building.building_type_id==6)...........0.0 sec
                            ln_bounded(zone.aggregate(building.price*(building.building_type_id==6), function=sum)/zone.aggregate((building.building_type_id==6), function=sum)): completed...0.0 sec
                        building.disaggregate(zone.ZCLPB): completed.....0.0 sec
                    ELPB = establishment.disaggregate(building.CLPB): completed...0.0 sec
                    ENGsubwSP = establishment.disaggregate(building.CNGsubwSP)....0.0 sec
                    ENGtrainSt = establishment.disaggregate(building.CNGtrainSt)....0.0 sec
                    EPBhghInc = establishment.disaggregate(building.CPBhghInc)/100....0.0 sec
                    EPBlowInc = establishment.disaggregate(building.CPBlowInc)/100....0.0 sec
                    ERItaxPro = establishment.disaggregate(building.CRItaxPro)
                        building.disaggregate(zone.taxpro)...............0.1 sec
                    ERItaxPro = establishment.disaggregate(building.CRItaxPro): completed...0.1 sec
                    ERRdensPop = establishment.disaggregate(building.CRRdensPop)....0.0 sec
                    ERam0 = establishment.disaggregate(building.CPRam0)/100
                        building.disaggregate(zone.ZPRam0)
                            (zone.aggregate(building.aggregate(household.workers==0))/(zone.CNRhh))*100
                                building.aggregate(household.workers==0)
                                    household.workers==0.................0.0 sec
                                building.aggregate(household.workers==0): completed...0.2 sec
                            (zone.aggregate(building.aggregate(household.workers==0))/(zone.CNRhh))*100: completed...0.2 sec
                        building.disaggregate(zone.ZPRam0): completed....0.3 sec
                    ERam0 = establishment.disaggregate(building.CPRam0)/100: completed...0.3 sec
                    ETPNiv1 = establishment.disaggregate(building.CTPNiv1)
                        building.disaggregate(zone.ctpniv1)..............0.1 sec
                    ETPNiv1 = establishment.disaggregate(building.CTPNiv1): completed...0.1 sec
                    ETPNiv2 = establishment.disaggregate(building.CTPNiv2)
                        building.disaggregate(zone.ctpniv2)..............0.1 sec
                    ETPNiv2 = establishment.disaggregate(building.CTPNiv2): completed...0.1 sec
                    ETPNiv3 = establishment.disaggregate(building.CTPNiv3)
                        building.disaggregate(zone.ctpniv3)..............0.1 sec
                    ETPNiv3 = establishment.disaggregate(building.CTPNiv3): completed...0.1 sec
                    ETPNiv4 = establishment.disaggregate(building.CTPNiv4)
                        building.disaggregate(zone.ctpniv4)..............0.1 sec
                    ETPNiv4 = establishment.disaggregate(building.CTPNiv4): completed...0.1 sec
                    emp = establishment.employment.......................0.0 sec
                    w10=(establishment.employment_lag1 >= 10)*(establishment.employment_lag1 < 20)
                        opus_core.variables.VVV_lagLLL...................0.5 sec
                    w10=(establishment.employment_lag1 >= 10)*(establishment.employment_lag1 < 20): completed...0.5 sec
                    w100=(establishment.employment_lag1 >= 100)..........0.0 sec
                    w100slope=paris.establishment.w100*(establishment.employment_lag1 - 100)....0.0 sec
                    w10slope=paris.establishment.w10*(establishment.employment_lag1 - 10)....0.0 sec
                    w2=(establishment.employment_lag1 >= 2)*(establishment.employment_lag1 < 3)....0.0 sec
                    w20=(establishment.employment_lag1 >= 20)*(establishment.employment_lag1 < 50)....0.0 sec
                    w20slope=paris.establishment.w20*(establishment.employment_lag1 - 20)....0.0 sec
                    w3=(establishment.employment_lag1 >= 3)*(establishment.employment_lag1 < 6)....0.0 sec
                    w3slope=paris.establishment.w3*(establishment.employment_lag1 - 3)....0.0 sec
                    w50=(establishment.employment_lag1 >= 50)*(establishment.employment_lag1 < 100)....0.0 sec
                    w50slope=paris.establishment.w50*(establishment.employment_lag1 - 50)....0.0 sec
                    w6=(establishment.employment_lag1 >= 6)*(establishment.employment_lag1 < 10)....0.0 sec
                    w6slope=paris.establishment.w6*(establishment.employment_lag1 - 6)....0.0 sec
                    Choice set size: 2
                EDM chunk 1 out of 1.: completed.........................4.4 sec
            Running Establishment Disappearance Model (from paris.models.establishment_disappearance_model): completed...4.5 sec
            Running Establishment Evolution Model (from paris.models.establishment_evolution_model): started on Tue Apr 10 05:37:43 2012
                (paris.establishment.year_lag1 != paris.establishment.year)*(paris.establishment.emp_250_lag1)*(establishment.building_id>0)
                    opus_core.variables.VVV_lagLLL
                        paris.establishment.year.........................0.1 sec
                        paris.establishment.year.........................0.0 sec
                    opus_core.variables.VVV_lagLLL: completed............0.5 sec
                    opus_core.variables.VVV_lagLLL
                        emp_250 = (establishment.employment < 250).astype('i')....0.1 sec
                    opus_core.variables.VVV_lagLLL: completed............0.5 sec
                (paris.establishment.year_lag1 != paris.establishment.year)*(paris.establishment.emp_250_lag1)*(establishment.building_id>0): completed...1.1 sec
                paris.establishment.ln_emp_ratio
                    lnemp=ln_bounded(establishment.employment)...........0.0 sec
                    lnemp_pre=ln_bounded(establishment.employment_lag1)..0.0 sec
                paris.establishment.ln_emp_ratio: completed..............0.0 sec
                Total number of individuals: 365111
                EEM chunk 1 out of 1.: started on Tue Apr 10 05:37:44 2012
                    Number of agents in this chunk: 365111
                    EBAdefense_EBEwfb10_250 = establishment.EBADefense * establishment.EBEwfb10_250
                        (establishment.employment_lag1>9)*(establishment.employment_lag1<250)....0.0 sec
                    EBAdefense_EBEwfb10_250 = establishment.EBADefense * establishment.EBEwfb10_250: completed...0.0 sec
                    EBAdefense_EBEwfl10 = establishment.EBADefense * establishment.EBEwfl10
                        establishment.employment_lag1<10.................0.0 sec
                    EBAdefense_EBEwfl10 = establishment.EBADefense * establishment.EBEwfl10: completed...0.0 sec
                    EBAlimit_EBEwfb10_250 = establishment.ELimit * establishment.EBEwfb10_250
                        establishment.disaggregate(building.disaggregate(zone.limit))
                            building.disaggregate(zone.limit)............0.2 sec
                        establishment.disaggregate(building.disaggregate(zone.limit)): completed...0.2 sec
                    EBAlimit_EBEwfb10_250 = establishment.ELimit * establishment.EBEwfb10_250: completed...0.2 sec
                    EBAlimit_EBEwfl10 = establishment.ELimit * establishment.EBEwfl10....0.0 sec
                    EBAnwCty_EBEwfb10_250 = establishment.EBAnwCty * establishment.EBEwfb10_250....0.0 sec
                    EBAnwCty_EBEwfl10 = establishment.EBAnwCty * establishment.EBEwfl10....0.0 sec
                    EBAparis_EBEwfb10_250 = establishment.EBAparis * establishment.EBEwfb10_250....0.0 sec
                    EBAparis_EBEwfl10 = establishment.EBAparis * establishment.EBEwfl10....0.0 sec
                    EBLCprice_EBEwfb10_250 = establishment.ELPB * establishment.EBEwfb10_250....0.0 sec
                    EBLCprice_EBEwfl10 = establishment.ELPB * establishment.EBEwfl10....0.0 sec
                    ECNGsubw_EBEwfb10_250 = establishment.ENGsubwSP * establishment.EBEwfb10_250....0.0 sec
                    ECNGsubw_EBEwfl10 = establishment.ENGsubwSP * establishment.EBEwfl10....0.0 sec
                    ECNGtrain_EBEwfb10_250 = establishment.ENGtrainSt * establishment.EBEwfb10_250....0.0 sec
                    ECNGtrain_EBEwfl10 = establishment.ENGtrainSt * establishment.EBEwfl10....0.0 sec
                    ECPBhghInc_EBEwfb10_250 = establishment.EPBhghInc * establishment.EBEwfb10_250....0.0 sec
                    ECPBhghInc_EBEwfl10 = establishment.EPBhghInc * establishment.EBEwfl10....0.0 sec
                    ECPBlowInc_EBEwfl10 = establishment.EPBlowInc * establishment.EBEwfl10....0.0 sec
                    ECPR0Ac_EBEwfb10_250 = establishment.ERam0 * establishment.EBEwfb10_250....0.0 sec
                    ECPR0Ac_EBEwfl10 = establishment.ERam0 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE1_EBEwfb10_250 = establishment.ETPNiv1 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE1_EBEwfl10 = establishment.ETPNiv1 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE2_EBEwfb10_250 = establishment.ETPNiv2 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE2_EBEwfl10 = establishment.ETPNiv2 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE3_EBEwfb10_250 = establishment.ETPNiv3 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE3_EBEwfl10 = establishment.ETPNiv3 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE4_EBEwfb10_250 = establishment.ETPNiv4 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE4_EBEwfl10 = establishment.ETPNiv4 * establishment.EBEwfl10....0.0 sec
                    ECQRdstPop_EBEwfb10_250 = establishment.ERRdensPop * establishment.EBEwfb10_250....0.0 sec
                    ECQRdstPop_EBEwfl10 = establishment.ERRdensPop * establishment.EBEwfl10....0.0 sec
                    ECRFproTax_EBEwfb10_250 = establishment.ERItaxPro * establishment.EBEwfb10_250....0.0 sec
                    ECRFproTax_EBEwfl10 = establishment.ERItaxPro * establishment.EBEwfl10....0.0 sec
                    ECTDTcD_EBEwfb10_250 = establishment.ECTDTcD * establishment.EBEwfb10_250....0.0 sec
                    ECTDTcD_EBEwfl10 = establishment.ECTDTcD * establishment.EBEwfl10....0.0 sec
                    ECTDVpD_EBEwfb10_250 = establishment.ECTDVpD * establishment.EBEwfb10_250....0.0 sec
                    ECTDVpD_EBEwfl10 = establishment.ECTDVpD * establishment.EBEwfl10....0.0 sec
                EEM chunk 1 out of 1.: completed.........................1.2 sec
                rmse_ln_emp_ratio = numpy.sqrt(establishment.disaggregate(sector.aggregate(establishment._init_error_ln_emp_ratio**2, function=mean)))
                    sector.aggregate(establishment._init_error_ln_emp_ratio**2,function=mean)
                        establishment._init_error_ln_emp_ratio**2........0.0 sec
                    sector.aggregate(establishment._init_error_ln_emp_ratio**2,function=mean): completed...0.0 sec
                rmse_ln_emp_ratio = numpy.sqrt(establishment.disaggregate(sector.aggregate(establishment._init_error_ln_emp_ratio**2, function=mean))): completed...0.1 sec
            Running Establishment Evolution Model (from paris.models.establishment_evolution_model): completed...2.6 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:37:45 2012
                paris.establishment.emp_pred
                    emp_pre1=establishment.employment_lag1...............0.0 sec
                paris.establishment.emp_pred: completed..................0.0 sec
                (establishment.disappeared == 0)*(establishment.building_id>0)*(paris.establishment.year_lag1 != pari.establishment.year)*(paris.establishment.emp_250_lag1)....0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.0 sec
            Running Establishment Reappearance Model (from paris.models.establishment_reappearance_model): started on Tue Apr 10 05:37:45 2012
                _actual_ = control_total.aggregate(establishment.employment)....0.0 sec

                (establishment.disappeared == 1)*(paris.establishment.emp_250)
                    emp_250 = (establishment.employment < 250).astype('i')....0.0 sec
                (establishment.disappeared == 1)*(paris.establishment.emp_250): completed...0.0 sec
                
                +-----------+-------------+--------+---------+------------+---------+--------+------+
                | sector_id | disappeared | actual |  target | difference |  action |   N    | note |
                +-----------+-------------+--------+---------+------------+---------+--------+------+
                |     1     |      0      | 28913  |  24624  |   -4289    |    0    |   0    |      |
                |     2     |      0      | 518458 |  697544 |   179086   | +122187 | +15316 |      |
                |     3     |      0      | 140805 |  244966 |   104161   |  +84993 | +14927 |      |
                |     4     |      0      | 425025 |  690261 |   265236   | +190178 | +36890 |      |
                |     5     |      0      | 254749 |  305916 |   51167    |  +40725 | +3824  |      |
                |     6     |      0      | 220643 |  269621 |   48978    |  +31389 | +3656  |      |
                |     7     |      0      | 62035  |  108053 |   46018    |  +32252 | +6714  |      |
                |     8     |      0      | 792645 | 1012576 |   219931   | +219931 |   +1   |      |
                |     9     |      0      | 347881 |  494241 |   146360   |  +95161 | +24704 |      |
                |     10    |      0      | 728900 |  821968 |   93068    |  +36174 | +7096  |      |
                |     11    |      0      | 554303 |  636239 |   81936    |  +45243 | +5320  |      |
                +-----------+-------------+--------+---------+------------+---------+--------+------+
                
            Running Establishment Reappearance Model (from paris.models.establishment_reappearance_model): completed...0.6 sec
            Running Establishment Transition Model (from paris.models.transition_model): started on Tue Apr 10 05:37:46 2012
                _actual_ = control_total.aggregate(establishment.employment)....0.0 sec
                WARNING: The are 9 eligible elements, less than the sample_size 26. Sample 9. 
                
                +-----------+-------------+---------+---------+------------+--------+------+
                | sector_id | disappeared |  actual |  target | difference | action | note |
                +-----------+-------------+---------+---------+------------+--------+------+
                |     1     |      0      |  28913  |  24624  |   -4289    | -2288  |  1   |
                |     2     |      0      |  640645 |  697544 |   56899    | +56899 |      |
                |     3     |      0      |  225798 |  244966 |   19168    | +19168 |      |
                |     4     |      0      |  615203 |  690261 |   75058    | +75058 |      |
                |     5     |      0      |  295474 |  305916 |   10442    | +10442 |      |
                |     6     |      0      |  252032 |  269621 |   17589    | +17589 |      |
                |     7     |      0      |  94287  |  108053 |   13766    | +13766 |      |
                |     8     |      0      | 1012576 | 1012576 |     0      |   0    |      |
                |     9     |      0      |  443042 |  494241 |   51199    | +51199 |      |
                |     10    |      0      |  765074 |  821968 |   56894    | +56894 |      |
                |     11    |      0      |  599546 |  636239 |   36693    | +36693 |      |
                +-----------+-------------+---------+---------+------------+--------+------+
                
                ERROR: 
                1. We run out of eligible samples to match target 24624 exactly.
                
            Running Establishment Transition Model (from paris.models.transition_model): completed...0.8 sec
            Running Establishment Location Choice Model (from urbansim.models.agent_location_choice_model): started on Tue Apr 10 05:37:47 2012
                (establishment.disappeared==0)*(establishment.building_id <= 0)....0.0 sec
                (establishment.employment)*(establishment.disappeared==0)....0.0 sec
                Total number of individuals: 186242
                ELCM chunk 1 out of 1.: started on Tue Apr 10 05:37:47 2012
                    Number of agents in this chunk: 186242
                    vacant_non_home_based_job_spaces = clip_to_zero(urbansim_zone.building.total_non_home_based_job_spaces - paris.building.number_of_non_home_based_jobs)
                        total_non_home_based_job_spaces = numpy.round(safe_array_divide(building.non_residential_sqft, urbansim_zone.building.building_sqft_per_job))Warning: invalid value encountered in divide
....0.0 sec
                        number_of_non_home_based_jobs = building.aggregate((establishment.employment)*(establishment.disappeared==0))....0.0 sec
                        WARNING: Negative values detected in function/method ''
                        WARNING: Minimum: -9187.0. Negative values clipped to zero.
                    vacant_non_home_based_job_spaces = clip_to_zero(urbansim_zone.building.total_non_home_based_job_spaces - paris.building.number_of_non_home_based_jobs): completed...0.0 sec
                    Available capacity: 1450259.0 units.
                    CLEmpTot_lag1 = ln_bounded(building.disaggregate(zone.emptot_lag1))
                        zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0),intermediates=[building])
                            building.aggregate(establishment.autogenvar293)
                                establishment.employment_lag1*(establishment.disappeared_lag1==0)
                                    opus_core.variables.VVV_lagLLL.......0.6 sec
                                establishment.employment_lag1*(establishment.disappeared_lag1==0): completed...0.6 sec
                            building.aggregate(establishment.autogenvar293): completed...0.6 sec
                        zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0),intermediates=[building]): completed...0.6 sec
                    CLEmpTot_lag1 = ln_bounded(building.disaggregate(zone.emptot_lag1)): completed...0.6 sec
                    CLOActPotSt = building.disaggregate(zone.CLOActPotSt)
                        ln_bounded(zone.CNOActPotSt)
                            1.0*zone.project99st.........................0.1 sec
                        ln_bounded(zone.CNOActPotSt): completed..........0.1 sec
                    CLOActPotSt = building.disaggregate(zone.CLOActPotSt): completed...0.1 sec
                    CNRKold = building.disaggregate(zone.ZPRKold)
                        (zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.CNRhh))*100....0.0 sec
                    CNRKold = building.disaggregate(zone.ZPRKold): completed...0.0 sec
                    CNRKyng = building.disaggregate(zone.ZPRKyng)
                        (zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.CNRhh))*100....0.0 sec
                    CNRKyng = building.disaggregate(zone.ZPRKyng): completed...0.0 sec
                    CPGZFU = building.disaggregate(zone.czfu)............0.1 sec
                    CPRchld111g = building.disaggregate(zone.CPRchld111g)
                        100*((zone.aggregate(household.children11>=1, intermediates = [building]))/(zone.CNRhh))
                            building.aggregate(household.autogenvar300)
                                household.children11>=1..................0.1 sec
                            building.aggregate(household.autogenvar300): completed...0.3 sec
                        100*((zone.aggregate(household.children11>=1, intermediates = [building]))/(zone.CNRhh)): completed...0.3 sec
                    CPRchld111g = building.disaggregate(zone.CPRchld111g): completed...0.3 sec
                    CQEsec10dst_lag1 = building.disaggregate(zone.emp_s10_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s10_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 10),intermediates=[building])
                                building.aggregate(establishment.autogenvar303)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==10)
                                        opus_core.variables.VVV_lagLLL...0.6 sec
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==10): completed...0.6 sec
                                building.aggregate(establishment.autogenvar303): completed...0.6 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 10),intermediates=[building]): completed...0.6 sec
                        zone.emp_s10_lag1/(1000*zone.CNOActPotSt): completed...0.6 sec
                    CQEsec10dst_lag1 = building.disaggregate(zone.emp_s10_lag1/(1000*zone.CNOActPotSt)): completed...0.6 sec
                    CQEsec11dst_lag1 = building.disaggregate(zone.emp_s11_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s11_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 11),intermediates=[building])
                                building.aggregate(establishment.autogenvar306)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==11)....0.0 sec
                                building.aggregate(establishment.autogenvar306): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 11),intermediates=[building]): completed...0.0 sec
                        zone.emp_s11_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec11dst_lag1 = building.disaggregate(zone.emp_s11_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec2dst_lag1 = building.disaggregate(zone.emp_s2_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s2_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 2),intermediates=[building])
                                building.aggregate(establishment.autogenvar309)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==2)....0.0 sec
                                building.aggregate(establishment.autogenvar309): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 2),intermediates=[building]): completed...0.0 sec
                        zone.emp_s2_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec2dst_lag1 = building.disaggregate(zone.emp_s2_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec3dst_lag1 = building.disaggregate(zone.emp_s3_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s3_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 3),intermediates=[building])
                                building.aggregate(establishment.autogenvar312)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==3)....0.0 sec
                                building.aggregate(establishment.autogenvar312): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 3),intermediates=[building]): completed...0.0 sec
                        zone.emp_s3_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec3dst_lag1 = building.disaggregate(zone.emp_s3_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec4dst_lag1 = building.disaggregate(zone.emp_s4_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s4_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 4),intermediates=[building])
                                building.aggregate(establishment.autogenvar315)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==4)....0.0 sec
                                building.aggregate(establishment.autogenvar315): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 4),intermediates=[building]): completed...0.0 sec
                        zone.emp_s4_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec4dst_lag1 = building.disaggregate(zone.emp_s4_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec5dst_lag1 = building.disaggregate(zone.emp_s5_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s5_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 5),intermediates=[building])
                                building.aggregate(establishment.autogenvar318)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==5)....0.0 sec
                                building.aggregate(establishment.autogenvar318): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 5),intermediates=[building]): completed...0.0 sec
                        zone.emp_s5_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec5dst_lag1 = building.disaggregate(zone.emp_s5_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec6dst_lag1 = building.disaggregate(zone.emp_s6_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s6_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 6),intermediates=[building])
                                building.aggregate(establishment.autogenvar321)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==6)....0.0 sec
                                building.aggregate(establishment.autogenvar321): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 6),intermediates=[building]): completed...0.0 sec
                        zone.emp_s6_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec6dst_lag1 = building.disaggregate(zone.emp_s6_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec7dst_lag1 = building.disaggregate(zone.emp_s7_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s7_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 7),intermediates=[building])
                                building.aggregate(establishment.autogenvar324)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==7)....0.0 sec
                                building.aggregate(establishment.autogenvar324): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 7),intermediates=[building]): completed...0.0 sec
                        zone.emp_s7_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec7dst_lag1 = building.disaggregate(zone.emp_s7_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec8dst_lag1 = building.disaggregate(zone.emp_s8_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s8_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 8),intermediates=[building])
                                building.aggregate(establishment.autogenvar327)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==8)....0.0 sec
                                building.aggregate(establishment.autogenvar327): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 8),intermediates=[building]): completed...0.0 sec
                        zone.emp_s8_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec8dst_lag1 = building.disaggregate(zone.emp_s8_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec9dst_lag1 = building.disaggregate(zone.emp_s9_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s9_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 9),intermediates=[building])
                                building.aggregate(establishment.autogenvar330)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==9)....0.0 sec
                                building.aggregate(establishment.autogenvar330): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 9),intermediates=[building]): completed...0.0 sec
                        zone.emp_s9_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec9dst_lag1 = building.disaggregate(zone.emp_s9_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    biotech = paris.building.zgp_id==22
                        zgp_id = building.disaggregate(zone.zgp_id)......0.1 sec
                    biotech = paris.building.zgp_id==22: completed.......0.1 sec
                    clichy_montfermeil = paris.building.zgp_id==21.......0.0 sec
                    confluence = paris.building.zgp_id==23...............0.0 sec
                    descates = paris.building.zgp_id==24.................0.0 sec
                    la_defense = paris.building.zgp_id==25...............0.0 sec
                    le_bourget = paris.building.zgp_id==26...............0.0 sec
                    paris_pole = (paris.building.zgp_id>=27)*(paris.building.zgp_id<=46) ....0.0 sec
                    pleyel = paris.building.zgp_id==47...................0.0 sec
                    roissy = paris.building.zgp_id==48...................0.0 sec
                    saclay = paris.building.zgp_id==49...................0.0 sec
                    val_de_france_gonesse = paris.building.zgp_id==50....0.0 sec
                    Choice set size: 50
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 3 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                ELCM chunk 1 out of 1.: completed.......................41.6 sec
            Running Establishment Location Choice Model (from urbansim.models.agent_location_choice_model): completed...41.7 sec
            Running Household Transition Model (from urbansim.models.transition_model): started on Tue Apr 10 05:38:29 2012
                _actual_ = control_total.aggregate(household._one_)......0.2 sec
                
                +---------+--------+---------+------------+--------+------+
                | hh_type | actual |  target | difference | action | note |
                +---------+--------+---------+------------+--------+------+
                |    1    | 180653 |  182991 |    2338    | +2338  |      |
                |    2    | 437512 |  443174 |    5662    | +5662  |      |
                |    3    | 33607  |  34042  |    435     |  +435  |      |
                |    4    | 992589 | 1005434 |   12845    | +12845 |      |
                |    5    | 373184 |  378290 |    5106    | +5106  |      |
                |    6    | 324046 |  328480 |    4434    | +4434  |      |
                |    7    | 37938  |  38457  |    519     |  +519  |      |
                |    8    | 593911 |  602037 |    8126    | +8126  |      |
                |    9    | 217698 |  218138 |    440     |  +440  |      |
                |    10   | 142301 |  142589 |    288     |  +288  |      |
                |    11   | 30503  |  30565  |     62     |  +62   |      |
                |    12   | 323277 |  323930 |    653     |  +653  |      |
                |    13   | 251176 |  252064 |    888     |  +888  |      |
                |    14   | 106783 |  107160 |    377     |  +377  |      |
                |    15   | 29537  |  29641  |    104     |  +104  |      |
                |    16   | 233080 |  233904 |    824     |  +824  |      |
                |    17   | 97761  |  98605  |    844     |  +844  |      |
                |    18   | 33035  |  33320  |    285     |  +285  |      |
                |    19   | 13567  |  13684  |    117     |  +117  |      |
                |    20   | 106524 |  107442 |    918     |  +918  |      |
                |    21   | 37421  |  37365  |    -56     |  -56   |      |
                |    22   | 12113  |  12095  |    -18     |  -18   |      |
                |    23   |  7509  |   7498  |    -11     |  -11   |      |
                |    24   | 70083  |  69979  |    -104    |  -104  |      |
                +---------+--------+---------+------------+--------+------+
                
            Running Household Transition Model (from urbansim.models.transition_model): completed...9.6 sec
            Running Household Relocation Model (from urbansim.models.agent_relocation_model): started on Tue Apr 10 05:38:38 2012
                Number of agents sampled based on rates: 579301
                Number of total movers: 618624
            Running Household Relocation Model (from urbansim.models.agent_relocation_model): completed...4.4 sec
            Running Household Location Choice Model (from urbansim.models.household_location_choice_model): started on Tue Apr 10 05:38:43 2012
                Total number of individuals: 618624
                HLCM chunk 1 out of 1.: started on Tue Apr 10 05:38:43 2012
                    Number of agents in this chunk: 618624
                    vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households)
                        number_of_households = building.number_of_agents(household)....0.5 sec
                        WARNING: Negative values detected in function/method ''
                        WARNING: Minimum: -301.0. Negative values clipped to zero.
                    vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households): completed...0.5 sec
                    Available capacity: 993135.0 units.
                    (urbansim_zone.building.vacant_residential_units>0)*(household.building_type_id==building.building_type_id)....0.0 sec
                    paris.building.M_DDDjt
                        M_1j0 = paris.building.number_of_households_of_type_1_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs1=building.aggregate(household.hh_type==1)
                                        household.hh_type==1.............0.5 sec
                                    _hhs1=building.aggregate(household.hh_type==1): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs1=building.aggregate(household.hh_type==1)
                                        household.hh_type==1.............0.0 sec
                                    _hhs1=building.aggregate(household.hh_type==1): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_1j0 = paris.building.number_of_households_of_type_1_lag5: completed...0.9 sec
                        TM_1t = alldata.aggregate_all(numpy.logical_and(household.hh_type==1, household.building_id<=0))
                            numpy.logical_and(household.hh_type==1,household.building_id<=0)....0.0 sec
                        TM_1t = alldata.aggregate_all(numpy.logical_and(household.hh_type==1, household.building_id<=0)): completed...0.1 sec
                        TM_10 = paris.alldata.number_of_households_of_type_1_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs1=alldata.aggregate_all(household.hh_type==1)
                                        household.hh_type==1.............0.5 sec
                                    _hhs1=alldata.aggregate_all(household.hh_type==1): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs1=alldata.aggregate_all(household.hh_type==1)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_10 = paris.alldata.number_of_households_of_type_1_lag5: completed...0.7 sec
                        V_ijt = urbansim_zone.building.vacant_residential_units....0.0 sec
                        V_ij0 = urbansim_zone.building.vacant_residential_units_lag5
                            opus_core.variables.VVV_lagLLL
                                vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households)
                                    number_of_households = building.number_of_agents(household)....1.1 sec
                                    WARNING: Negative values detected in function/method ''
                                    WARNING: Minimum: -22.0. Negative values clipped to zero.
                                vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households): completed...1.1 sec
                            opus_core.variables.VVV_lagLLL: completed....1.1 sec
                        V_ij0 = urbansim_zone.building.vacant_residential_units_lag5: completed...1.1 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................2.8 sec
                    paris.building.M_DDDjt
                        M_2j0 = paris.building.number_of_households_of_type_2_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs2=building.aggregate(household.hh_type==2)
                                        household.hh_type==2.............0.6 sec
                                    _hhs2=building.aggregate(household.hh_type==2): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs2=building.aggregate(household.hh_type==2)
                                        household.hh_type==2.............0.0 sec
                                    _hhs2=building.aggregate(household.hh_type==2): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.1 sec
                        M_2j0 = paris.building.number_of_households_of_type_2_lag5: completed...1.1 sec
                        TM_2t = alldata.aggregate_all(numpy.logical_and(household.hh_type==2, household.building_id<=0))
                            numpy.logical_and(household.hh_type==2,household.building_id<=0)....0.0 sec
                        TM_2t = alldata.aggregate_all(numpy.logical_and(household.hh_type==2, household.building_id<=0)): completed...0.1 sec
                        TM_20 = paris.alldata.number_of_households_of_type_2_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs2=alldata.aggregate_all(household.hh_type==2)
                                        household.hh_type==2.............0.5 sec
                                    _hhs2=alldata.aggregate_all(household.hh_type==2): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs2=alldata.aggregate_all(household.hh_type==2)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_20 = paris.alldata.number_of_households_of_type_2_lag5: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_3j0 = paris.building.number_of_households_of_type_3_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs3=building.aggregate(household.hh_type==3)
                                        household.hh_type==3.............0.5 sec
                                    _hhs3=building.aggregate(household.hh_type==3): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs3=building.aggregate(household.hh_type==3)
                                        household.hh_type==3.............0.0 sec
                                    _hhs3=building.aggregate(household.hh_type==3): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_3j0 = paris.building.number_of_households_of_type_3_lag5: completed...1.0 sec
                        TM_3t = alldata.aggregate_all(numpy.logical_and(household.hh_type==3, household.building_id<=0))
                            numpy.logical_and(household.hh_type==3,household.building_id<=0)....0.0 sec
                        TM_3t = alldata.aggregate_all(numpy.logical_and(household.hh_type==3, household.building_id<=0)): completed...0.1 sec
                        TM_30 = paris.alldata.number_of_households_of_type_3_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs3=alldata.aggregate_all(household.hh_type==3)
                                        household.hh_type==3.............0.5 sec
                                    _hhs3=alldata.aggregate_all(household.hh_type==3): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs3=alldata.aggregate_all(household.hh_type==3)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_30 = paris.alldata.number_of_households_of_type_3_lag5: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_4j0 = paris.building.number_of_households_of_type_4_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs4=building.aggregate(household.hh_type==4)
                                        household.hh_type==4.............0.5 sec
                                    _hhs4=building.aggregate(household.hh_type==4): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs4=building.aggregate(household.hh_type==4)
                                        household.hh_type==4.............0.0 sec
                                    _hhs4=building.aggregate(household.hh_type==4): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_4j0 = paris.building.number_of_households_of_type_4_lag5: completed...1.0 sec
                        TM_4t = alldata.aggregate_all(numpy.logical_and(household.hh_type==4, household.building_id<=0))
                            numpy.logical_and(household.hh_type==4,household.building_id<=0)....0.0 sec
                        TM_4t = alldata.aggregate_all(numpy.logical_and(household.hh_type==4, household.building_id<=0)): completed...0.1 sec
                        TM_40 = paris.alldata.number_of_households_of_type_4_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs4=alldata.aggregate_all(household.hh_type==4)
                                        household.hh_type==4.............0.5 sec
                                    _hhs4=alldata.aggregate_all(household.hh_type==4): completed...0.7 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs4=alldata.aggregate_all(household.hh_type==4)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_40 = paris.alldata.number_of_households_of_type_4_lag5: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_5j0 = paris.building.number_of_households_of_type_5_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs5=building.aggregate(household.hh_type==5)
                                        household.hh_type==5.............0.5 sec
                                    _hhs5=building.aggregate(household.hh_type==5): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs5=building.aggregate(household.hh_type==5)
                                        household.hh_type==5.............0.0 sec
                                    _hhs5=building.aggregate(household.hh_type==5): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_5j0 = paris.building.number_of_households_of_type_5_lag5: completed...1.0 sec
                        TM_5t = alldata.aggregate_all(numpy.logical_and(household.hh_type==5, household.building_id<=0))
                            numpy.logical_and(household.hh_type==5,household.building_id<=0)....0.0 sec
                        TM_5t = alldata.aggregate_all(numpy.logical_and(household.hh_type==5, household.building_id<=0)): completed...0.1 sec
                        TM_50 = paris.alldata.number_of_households_of_type_5_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs5=alldata.aggregate_all(household.hh_type==5)
                                        household.hh_type==5.............0.6 sec
                                    _hhs5=alldata.aggregate_all(household.hh_type==5): completed...0.7 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs5=alldata.aggregate_all(household.hh_type==5)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_50 = paris.alldata.number_of_households_of_type_5_lag5: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................2.0 sec
                    paris.building.M_DDDjt
                        M_6j0 = paris.building.number_of_households_of_type_6_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs6=building.aggregate(household.hh_type==6)
                                        household.hh_type==6.............0.5 sec
                                    _hhs6=building.aggregate(household.hh_type==6): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs6=building.aggregate(household.hh_type==6)
                                        household.hh_type==6.............0.0 sec
                                    _hhs6=building.aggregate(household.hh_type==6): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_6j0 = paris.building.number_of_households_of_type_6_lag5: completed...1.0 sec
                        TM_6t = alldata.aggregate_all(numpy.logical_and(household.hh_type==6, household.building_id<=0))
                            numpy.logical_and(household.hh_type==6,household.building_id<=0)....0.0 sec
                        TM_6t = alldata.aggregate_all(numpy.logical_and(household.hh_type==6, household.building_id<=0)): completed...0.1 sec
                        TM_60 = paris.alldata.number_of_households_of_type_6_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs6=alldata.aggregate_all(household.hh_type==6)
                                        household.hh_type==6.............0.6 sec
                                    _hhs6=alldata.aggregate_all(household.hh_type==6): completed...0.7 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs6=alldata.aggregate_all(household.hh_type==6)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_60 = paris.alldata.number_of_households_of_type_6_lag5: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................2.0 sec
                    paris.building.M_DDDjt
                        M_7j0 = paris.building.number_of_households_of_type_7_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs7=building.aggregate(household.hh_type==7)
                                        household.hh_type==7.............0.6 sec
                                    _hhs7=building.aggregate(household.hh_type==7): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs7=building.aggregate(household.hh_type==7)
                                        household.hh_type==7.............0.0 sec
                                    _hhs7=building.aggregate(household.hh_type==7): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_7j0 = paris.building.number_of_households_of_type_7_lag5: completed...1.0 sec
                        TM_7t = alldata.aggregate_all(numpy.logical_and(household.hh_type==7, household.building_id<=0))
                            numpy.logical_and(household.hh_type==7,household.building_id<=0)....0.0 sec
                        TM_7t = alldata.aggregate_all(numpy.logical_and(household.hh_type==7, household.building_id<=0)): completed...0.1 sec
                        TM_70 = paris.alldata.number_of_households_of_type_7_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs7=alldata.aggregate_all(household.hh_type==7)
                                        household.hh_type==7.............0.6 sec
                                    _hhs7=alldata.aggregate_all(household.hh_type==7): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs7=alldata.aggregate_all(household.hh_type==7)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_70 = paris.alldata.number_of_households_of_type_7_lag5: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................2.0 sec
                    paris.building.M_DDDjt
                        M_8j0 = paris.building.number_of_households_of_type_8_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs8=building.aggregate(household.hh_type==8)
                                        household.hh_type==8.............0.6 sec
                                    _hhs8=building.aggregate(household.hh_type==8): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs8=building.aggregate(household.hh_type==8)
                                        household.hh_type==8.............0.0 sec
                                    _hhs8=building.aggregate(household.hh_type==8): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.1 sec
                        M_8j0 = paris.building.number_of_households_of_type_8_lag5: completed...1.1 sec
                        TM_8t = alldata.aggregate_all(numpy.logical_and(household.hh_type==8, household.building_id<=0))
                            numpy.logical_and(household.hh_type==8,household.building_id<=0)....0.0 sec
                        TM_8t = alldata.aggregate_all(numpy.logical_and(household.hh_type==8, household.building_id<=0)): completed...0.1 sec
                        TM_80 = paris.alldata.number_of_households_of_type_8_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs8=alldata.aggregate_all(household.hh_type==8)
                                        household.hh_type==8.............0.5 sec
                                    _hhs8=alldata.aggregate_all(household.hh_type==8): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs8=alldata.aggregate_all(household.hh_type==8)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_80 = paris.alldata.number_of_households_of_type_8_lag5: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_9j0 = paris.building.number_of_households_of_type_9_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs9=building.aggregate(household.hh_type==9)
                                        household.hh_type==9.............0.5 sec
                                    _hhs9=building.aggregate(household.hh_type==9): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs9=building.aggregate(household.hh_type==9)
                                        household.hh_type==9.............0.0 sec
                                    _hhs9=building.aggregate(household.hh_type==9): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_9j0 = paris.building.number_of_households_of_type_9_lag5: completed...0.9 sec
                        TM_9t = alldata.aggregate_all(numpy.logical_and(household.hh_type==9, household.building_id<=0))
                            numpy.logical_and(household.hh_type==9,household.building_id<=0)....0.0 sec
                        TM_9t = alldata.aggregate_all(numpy.logical_and(household.hh_type==9, household.building_id<=0)): completed...0.1 sec
                        TM_90 = paris.alldata.number_of_households_of_type_9_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs9=alldata.aggregate_all(household.hh_type==9)
                                        household.hh_type==9.............0.5 sec
                                    _hhs9=alldata.aggregate_all(household.hh_type==9): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs9=alldata.aggregate_all(household.hh_type==9)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_90 = paris.alldata.number_of_households_of_type_9_lag5: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_10j0 = paris.building.number_of_households_of_type_10_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs10=building.aggregate(household.hh_type==10)
                                        household.hh_type==10............0.5 sec
                                    _hhs10=building.aggregate(household.hh_type==10): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs10=building.aggregate(household.hh_type==10)
                                        household.hh_type==10............0.0 sec
                                    _hhs10=building.aggregate(household.hh_type==10): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_10j0 = paris.building.number_of_households_of_type_10_lag5: completed...0.9 sec
                        TM_10t = alldata.aggregate_all(numpy.logical_and(household.hh_type==10, household.building_id<=0))
                            numpy.logical_and(household.hh_type==10,household.building_id<=0)....0.0 sec
                        TM_10t = alldata.aggregate_all(numpy.logical_and(household.hh_type==10, household.building_id<=0)): completed...0.1 sec
                        TM_100 = paris.alldata.number_of_households_of_type_10_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs10=alldata.aggregate_all(household.hh_type==10)
                                        household.hh_type==10............0.5 sec
                                    _hhs10=alldata.aggregate_all(household.hh_type==10): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs10=alldata.aggregate_all(household.hh_type==10)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_100 = paris.alldata.number_of_households_of_type_10_lag5: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_11j0 = paris.building.number_of_households_of_type_11_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs11=building.aggregate(household.hh_type==11)
                                        household.hh_type==11............0.5 sec
                                    _hhs11=building.aggregate(household.hh_type==11): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs11=building.aggregate(household.hh_type==11)
                                        household.hh_type==11............0.0 sec
                                    _hhs11=building.aggregate(household.hh_type==11): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_11j0 = paris.building.number_of_households_of_type_11_lag5: completed...0.9 sec
                        TM_11t = alldata.aggregate_all(numpy.logical_and(household.hh_type==11, household.building_id<=0))
                            numpy.logical_and(household.hh_type==11,household.building_id<=0)....0.0 sec
                        TM_11t = alldata.aggregate_all(numpy.logical_and(household.hh_type==11, household.building_id<=0)): completed...0.1 sec
                        TM_110 = paris.alldata.number_of_households_of_type_11_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs11=alldata.aggregate_all(household.hh_type==11)
                                        household.hh_type==11............0.5 sec
                                    _hhs11=alldata.aggregate_all(household.hh_type==11): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs11=alldata.aggregate_all(household.hh_type==11)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_110 = paris.alldata.number_of_households_of_type_11_lag5: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_12j0 = paris.building.number_of_households_of_type_12_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs12=building.aggregate(household.hh_type==12)
                                        household.hh_type==12............0.5 sec
                                    _hhs12=building.aggregate(household.hh_type==12): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs12=building.aggregate(household.hh_type==12)
                                        household.hh_type==12............0.0 sec
                                    _hhs12=building.aggregate(household.hh_type==12): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_12j0 = paris.building.number_of_households_of_type_12_lag5: completed...1.0 sec
                        TM_12t = alldata.aggregate_all(numpy.logical_and(household.hh_type==12, household.building_id<=0))
                            numpy.logical_and(household.hh_type==12,household.building_id<=0)....0.0 sec
                        TM_12t = alldata.aggregate_all(numpy.logical_and(household.hh_type==12, household.building_id<=0)): completed...0.1 sec
                        TM_120 = paris.alldata.number_of_households_of_type_12_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs12=alldata.aggregate_all(household.hh_type==12)
                                        household.hh_type==12............0.5 sec
                                    _hhs12=alldata.aggregate_all(household.hh_type==12): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs12=alldata.aggregate_all(household.hh_type==12)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_120 = paris.alldata.number_of_households_of_type_12_lag5: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_13j0 = paris.building.number_of_households_of_type_13_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs13=building.aggregate(household.hh_type==13)
                                        household.hh_type==13............0.5 sec
                                    _hhs13=building.aggregate(household.hh_type==13): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs13=building.aggregate(household.hh_type==13)
                                        household.hh_type==13............0.0 sec
                                    _hhs13=building.aggregate(household.hh_type==13): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_13j0 = paris.building.number_of_households_of_type_13_lag5: completed...1.0 sec
                        TM_13t = alldata.aggregate_all(numpy.logical_and(household.hh_type==13, household.building_id<=0))
                            numpy.logical_and(household.hh_type==13,household.building_id<=0)....0.0 sec
                        TM_13t = alldata.aggregate_all(numpy.logical_and(household.hh_type==13, household.building_id<=0)): completed...0.1 sec
                        TM_130 = paris.alldata.number_of_households_of_type_13_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs13=alldata.aggregate_all(household.hh_type==13)
                                        household.hh_type==13............0.5 sec
                                    _hhs13=alldata.aggregate_all(household.hh_type==13): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs13=alldata.aggregate_all(household.hh_type==13)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_130 = paris.alldata.number_of_households_of_type_13_lag5: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_14j0 = paris.building.number_of_households_of_type_14_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs14=building.aggregate(household.hh_type==14)
                                        household.hh_type==14............0.5 sec
                                    _hhs14=building.aggregate(household.hh_type==14): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs14=building.aggregate(household.hh_type==14)
                                        household.hh_type==14............0.0 sec
                                    _hhs14=building.aggregate(household.hh_type==14): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_14j0 = paris.building.number_of_households_of_type_14_lag5: completed...1.0 sec
                        TM_14t = alldata.aggregate_all(numpy.logical_and(household.hh_type==14, household.building_id<=0))
                            numpy.logical_and(household.hh_type==14,household.building_id<=0)....0.0 sec
                        TM_14t = alldata.aggregate_all(numpy.logical_and(household.hh_type==14, household.building_id<=0)): completed...0.1 sec
                        TM_140 = paris.alldata.number_of_households_of_type_14_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs14=alldata.aggregate_all(household.hh_type==14)
                                        household.hh_type==14............0.5 sec
                                    _hhs14=alldata.aggregate_all(household.hh_type==14): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs14=alldata.aggregate_all(household.hh_type==14)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_140 = paris.alldata.number_of_households_of_type_14_lag5: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_15j0 = paris.building.number_of_households_of_type_15_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs15=building.aggregate(household.hh_type==15)
                                        household.hh_type==15............0.5 sec
                                    _hhs15=building.aggregate(household.hh_type==15): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs15=building.aggregate(household.hh_type==15)
                                        household.hh_type==15............0.0 sec
                                    _hhs15=building.aggregate(household.hh_type==15): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_15j0 = paris.building.number_of_households_of_type_15_lag5: completed...0.9 sec
                        TM_15t = alldata.aggregate_all(numpy.logical_and(household.hh_type==15, household.building_id<=0))
                            numpy.logical_and(household.hh_type==15,household.building_id<=0)....0.0 sec
                        TM_15t = alldata.aggregate_all(numpy.logical_and(household.hh_type==15, household.building_id<=0)): completed...0.1 sec
                        TM_150 = paris.alldata.number_of_households_of_type_15_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs15=alldata.aggregate_all(household.hh_type==15)
                                        household.hh_type==15............0.5 sec
                                    _hhs15=alldata.aggregate_all(household.hh_type==15): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs15=alldata.aggregate_all(household.hh_type==15)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_150 = paris.alldata.number_of_households_of_type_15_lag5: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_16j0 = paris.building.number_of_households_of_type_16_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs16=building.aggregate(household.hh_type==16)
                                        household.hh_type==16............0.5 sec
                                    _hhs16=building.aggregate(household.hh_type==16): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs16=building.aggregate(household.hh_type==16)
                                        household.hh_type==16............0.0 sec
                                    _hhs16=building.aggregate(household.hh_type==16): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_16j0 = paris.building.number_of_households_of_type_16_lag5: completed...0.9 sec
                        TM_16t = alldata.aggregate_all(numpy.logical_and(household.hh_type==16, household.building_id<=0))
                            numpy.logical_and(household.hh_type==16,household.building_id<=0)....0.0 sec
                        TM_16t = alldata.aggregate_all(numpy.logical_and(household.hh_type==16, household.building_id<=0)): completed...0.1 sec
                        TM_160 = paris.alldata.number_of_households_of_type_16_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs16=alldata.aggregate_all(household.hh_type==16)
                                        household.hh_type==16............0.5 sec
                                    _hhs16=alldata.aggregate_all(household.hh_type==16): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs16=alldata.aggregate_all(household.hh_type==16)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_160 = paris.alldata.number_of_households_of_type_16_lag5: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_17j0 = paris.building.number_of_households_of_type_17_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs17=building.aggregate(household.hh_type==17)
                                        household.hh_type==17............0.5 sec
                                    _hhs17=building.aggregate(household.hh_type==17): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs17=building.aggregate(household.hh_type==17)
                                        household.hh_type==17............0.0 sec
                                    _hhs17=building.aggregate(household.hh_type==17): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_17j0 = paris.building.number_of_households_of_type_17_lag5: completed...1.0 sec
                        TM_17t = alldata.aggregate_all(numpy.logical_and(household.hh_type==17, household.building_id<=0))
                            numpy.logical_and(household.hh_type==17,household.building_id<=0)....0.0 sec
                        TM_17t = alldata.aggregate_all(numpy.logical_and(household.hh_type==17, household.building_id<=0)): completed...0.1 sec
                        TM_170 = paris.alldata.number_of_households_of_type_17_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs17=alldata.aggregate_all(household.hh_type==17)
                                        household.hh_type==17............0.5 sec
                                    _hhs17=alldata.aggregate_all(household.hh_type==17): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs17=alldata.aggregate_all(household.hh_type==17)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_170 = paris.alldata.number_of_households_of_type_17_lag5: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_18j0 = paris.building.number_of_households_of_type_18_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs18=building.aggregate(household.hh_type==18)
                                        household.hh_type==18............0.5 sec
                                    _hhs18=building.aggregate(household.hh_type==18): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs18=building.aggregate(household.hh_type==18)
                                        household.hh_type==18............0.0 sec
                                    _hhs18=building.aggregate(household.hh_type==18): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_18j0 = paris.building.number_of_households_of_type_18_lag5: completed...1.0 sec
                        TM_18t = alldata.aggregate_all(numpy.logical_and(household.hh_type==18, household.building_id<=0))
                            numpy.logical_and(household.hh_type==18,household.building_id<=0)....0.0 sec
                        TM_18t = alldata.aggregate_all(numpy.logical_and(household.hh_type==18, household.building_id<=0)): completed...0.1 sec
                        TM_180 = paris.alldata.number_of_households_of_type_18_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs18=alldata.aggregate_all(household.hh_type==18)
                                        household.hh_type==18............0.6 sec
                                    _hhs18=alldata.aggregate_all(household.hh_type==18): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs18=alldata.aggregate_all(household.hh_type==18)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_180 = paris.alldata.number_of_households_of_type_18_lag5: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_19j0 = paris.building.number_of_households_of_type_19_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs19=building.aggregate(household.hh_type==19)
                                        household.hh_type==19............0.5 sec
                                    _hhs19=building.aggregate(household.hh_type==19): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs19=building.aggregate(household.hh_type==19)
                                        household.hh_type==19............0.0 sec
                                    _hhs19=building.aggregate(household.hh_type==19): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_19j0 = paris.building.number_of_households_of_type_19_lag5: completed...1.0 sec
                        TM_19t = alldata.aggregate_all(numpy.logical_and(household.hh_type==19, household.building_id<=0))
                            numpy.logical_and(household.hh_type==19,household.building_id<=0)....0.0 sec
                        TM_19t = alldata.aggregate_all(numpy.logical_and(household.hh_type==19, household.building_id<=0)): completed...0.1 sec
                        TM_190 = paris.alldata.number_of_households_of_type_19_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs19=alldata.aggregate_all(household.hh_type==19)
                                        household.hh_type==19............0.5 sec
                                    _hhs19=alldata.aggregate_all(household.hh_type==19): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs19=alldata.aggregate_all(household.hh_type==19)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_190 = paris.alldata.number_of_households_of_type_19_lag5: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_20j0 = paris.building.number_of_households_of_type_20_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs20=building.aggregate(household.hh_type==20)
                                        household.hh_type==20............0.5 sec
                                    _hhs20=building.aggregate(household.hh_type==20): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs20=building.aggregate(household.hh_type==20)
                                        household.hh_type==20............0.0 sec
                                    _hhs20=building.aggregate(household.hh_type==20): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_20j0 = paris.building.number_of_households_of_type_20_lag5: completed...1.0 sec
                        TM_20t = alldata.aggregate_all(numpy.logical_and(household.hh_type==20, household.building_id<=0))
                            numpy.logical_and(household.hh_type==20,household.building_id<=0)....0.0 sec
                        TM_20t = alldata.aggregate_all(numpy.logical_and(household.hh_type==20, household.building_id<=0)): completed...0.1 sec
                        TM_200 = paris.alldata.number_of_households_of_type_20_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs20=alldata.aggregate_all(household.hh_type==20)
                                        household.hh_type==20............0.5 sec
                                    _hhs20=alldata.aggregate_all(household.hh_type==20): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs20=alldata.aggregate_all(household.hh_type==20)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_200 = paris.alldata.number_of_households_of_type_20_lag5: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_21j0 = paris.building.number_of_households_of_type_21_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs21=building.aggregate(household.hh_type==21)
                                        household.hh_type==21............0.5 sec
                                    _hhs21=building.aggregate(household.hh_type==21): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs21=building.aggregate(household.hh_type==21)
                                        household.hh_type==21............0.0 sec
                                    _hhs21=building.aggregate(household.hh_type==21): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_21j0 = paris.building.number_of_households_of_type_21_lag5: completed...0.9 sec
                        TM_21t = alldata.aggregate_all(numpy.logical_and(household.hh_type==21, household.building_id<=0))
                            numpy.logical_and(household.hh_type==21,household.building_id<=0)....0.0 sec
                        TM_21t = alldata.aggregate_all(numpy.logical_and(household.hh_type==21, household.building_id<=0)): completed...0.1 sec
                        TM_210 = paris.alldata.number_of_households_of_type_21_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs21=alldata.aggregate_all(household.hh_type==21)
                                        household.hh_type==21............0.5 sec
                                    _hhs21=alldata.aggregate_all(household.hh_type==21): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs21=alldata.aggregate_all(household.hh_type==21)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_210 = paris.alldata.number_of_households_of_type_21_lag5: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_22j0 = paris.building.number_of_households_of_type_22_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs22=building.aggregate(household.hh_type==22)
                                        household.hh_type==22............0.5 sec
                                    _hhs22=building.aggregate(household.hh_type==22): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs22=building.aggregate(household.hh_type==22)
                                        household.hh_type==22............0.0 sec
                                    _hhs22=building.aggregate(household.hh_type==22): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_22j0 = paris.building.number_of_households_of_type_22_lag5: completed...0.9 sec
                        TM_22t = alldata.aggregate_all(numpy.logical_and(household.hh_type==22, household.building_id<=0))
                            numpy.logical_and(household.hh_type==22,household.building_id<=0)....0.0 sec
                        TM_22t = alldata.aggregate_all(numpy.logical_and(household.hh_type==22, household.building_id<=0)): completed...0.1 sec
                        TM_220 = paris.alldata.number_of_households_of_type_22_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs22=alldata.aggregate_all(household.hh_type==22)
                                        household.hh_type==22............0.5 sec
                                    _hhs22=alldata.aggregate_all(household.hh_type==22): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs22=alldata.aggregate_all(household.hh_type==22)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_220 = paris.alldata.number_of_households_of_type_22_lag5: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_23j0 = paris.building.number_of_households_of_type_23_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs23=building.aggregate(household.hh_type==23)
                                        household.hh_type==23............0.5 sec
                                    _hhs23=building.aggregate(household.hh_type==23): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs23=building.aggregate(household.hh_type==23)
                                        household.hh_type==23............0.0 sec
                                    _hhs23=building.aggregate(household.hh_type==23): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_23j0 = paris.building.number_of_households_of_type_23_lag5: completed...1.0 sec
                        TM_23t = alldata.aggregate_all(numpy.logical_and(household.hh_type==23, household.building_id<=0))
                            numpy.logical_and(household.hh_type==23,household.building_id<=0)....0.0 sec
                        TM_23t = alldata.aggregate_all(numpy.logical_and(household.hh_type==23, household.building_id<=0)): completed...0.1 sec
                        TM_230 = paris.alldata.number_of_households_of_type_23_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs23=alldata.aggregate_all(household.hh_type==23)
                                        household.hh_type==23............0.5 sec
                                    _hhs23=alldata.aggregate_all(household.hh_type==23): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs23=alldata.aggregate_all(household.hh_type==23)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_230 = paris.alldata.number_of_households_of_type_23_lag5: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_24j0 = paris.building.number_of_households_of_type_24_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs24=building.aggregate(household.hh_type==24)
                                        household.hh_type==24............0.5 sec
                                    _hhs24=building.aggregate(household.hh_type==24): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs24=building.aggregate(household.hh_type==24)
                                        household.hh_type==24............0.0 sec
                                    _hhs24=building.aggregate(household.hh_type==24): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_24j0 = paris.building.number_of_households_of_type_24_lag5: completed...1.0 sec
                        TM_24t = alldata.aggregate_all(numpy.logical_and(household.hh_type==24, household.building_id<=0))
                            numpy.logical_and(household.hh_type==24,household.building_id<=0)....0.0 sec
                        TM_24t = alldata.aggregate_all(numpy.logical_and(household.hh_type==24, household.building_id<=0)): completed...0.1 sec
                        TM_240 = paris.alldata.number_of_households_of_type_24_lag5
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs24=alldata.aggregate_all(household.hh_type==24)
                                        household.hh_type==24............0.6 sec
                                    _hhs24=alldata.aggregate_all(household.hh_type==24): completed...0.7 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs24=alldata.aggregate_all(household.hh_type==24)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_240 = paris.alldata.number_of_households_of_type_24_lag5: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    CDGartClse = building.disaggregate(zone.cdgartclse)..0.1 sec
                    CDGartFar = building.disaggregate(zone.cdgartfar)....0.1 sec
                    CDGhighwClse = building.disaggregate(zone.cdghighwclse)....0.1 sec
                    CDGhighwFar = building.disaggregate(zone.cdghighwfar)....0.1 sec
                    CLCrPriceF_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.9 sec
                    CLCrPriceH_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.8 sec
                    CLCsPriceF = ln_bounded(building.price)..............0.0 sec
                    CLCsPriceF_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.8 sec
                    CLCsPriceH_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.7 sec
                    CLRrUnitsF = ln_bounded(building.residential_units)..0.0 sec
                    CLRrUnitsH = ln_bounded(building.residential_units)..0.0 sec
                    CLRsUnitsF = ln_bounded(building.residential_units)..0.0 sec
                    CLRsUnitsH = ln_bounded(building.residential_units)..0.0 sec
                    CNGsubwSP_HBRcar0 = (household.cars==0)*(building.disaggregate(zone.csubway9))....1.0 sec
                    CNGsubwSP_HBRcar1g = (household.cars>=1)*(building.disaggregate(zone.csubway9))....1.0 sec
                    CNGtrainSt_HBRcar0 = (household.cars==0)*(building.disaggregate(zone.ctrain9))....1.0 sec
                    CNGtrainSt_HBRcar1g = (household.cars>=1)*(building.disaggregate(zone.ctrain9))....1.0 sec
                    CNRsUnitsH = building.residential_units..............0.0 sec
                    CPBMedInc_HBRmedInc = (household.lincomepc<=10.3)*(household.lincomepc>9.9)*((building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.lincomepc<=9.9, intermediates = [building])- zone.aggregate(household.lincomepc>10.3, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum))))*100)
                        (zone.aggregate(building.number_of_agents(household),function=sum))
                            building.number_of_agents(household).........0.5 sec
                        (zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.5 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.lincomepc<=9.9,intermediates=[building])-zone.aggregate(household.lincomepc>10.3,intermediates=[building])
                            building.aggregate(household.autogenvar103)
                                household.lincomepc>10.3.................0.0 sec
                            building.aggregate(household.autogenvar103): completed...0.2 sec
                            building.aggregate(household.autogenvar109)
                                household.lincomepc<=9.9.................0.0 sec
                            building.aggregate(household.autogenvar109): completed...0.2 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.lincomepc<=9.9,intermediates=[building])-zone.aggregate(household.lincomepc>10.3,intermediates=[building]): completed...0.5 sec
                    CPBMedInc_HBRmedInc = (household.lincomepc<=10.3)*(household.lincomepc>9.9)*((building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.lincomepc<=9.9, intermediates = [building])- zone.aggregate(household.lincomepc>10.3, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum))))*100): completed...2.9 sec
                    CPBhghInc_HBRhghInc = (household.lincomepc>10.3)*(building.disaggregate(zone.aggregate(household.lincomepc>10.3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.lincomepc>10.3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPBhghInc_HBRhghInc = (household.lincomepc>10.3)*(building.disaggregate(zone.aggregate(household.lincomepc>10.3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.3 sec
                    CPBlowInc_HBRlowInc = (household.lincomepc<=9.9)*(building.disaggregate(zone.aggregate(household.lincomepc<=9.9, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.lincomepc<=9.9,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPBlowInc_HBRlowInc = (household.lincomepc<=9.9)*(building.disaggregate(zone.aggregate(household.lincomepc<=9.9, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.3 sec
                    CPRKfrgn_KBRfrgn = (household.race_id==1)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.race_id==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar55)
                                household.race_id==1.....................0.0 sec
                            building.aggregate(household.autogenvar55): completed...0.2 sec
                        zone.aggregate(household.race_id==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRKfrgn_KBRfrgn = (household.race_id==1)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.5 sec
                    CPRKfrgn_KBRnoFrgn = (household.race_id==0)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)....1.2 sec
                    CPRKmidAge_KBRmidAge = ((household.age_of_head>35) * (household.age_of_head<=55))*(building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.age_of_head>55, intermediates = [building])- zone.aggregate(household.age_of_head<=35, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.age_of_head>55,intermediates=[building])-zone.aggregate(household.age_of_head<=35,intermediates=[building])
                            building.aggregate(household.autogenvar60)
                                household.age_of_head>55.................0.0 sec
                            building.aggregate(household.autogenvar60): completed...0.2 sec
                            building.aggregate(household.autogenvar63)
                                household.age_of_head<=35................0.0 sec
                            building.aggregate(household.autogenvar63): completed...0.2 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.age_of_head>55,intermediates=[building])-zone.aggregate(household.age_of_head<=35,intermediates=[building]): completed...0.4 sec
                    CPRKmidAge_KBRmidAge = ((household.age_of_head>35) * (household.age_of_head<=55))*(building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.age_of_head>55, intermediates = [building])- zone.aggregate(household.age_of_head<=35, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...2.3 sec
                    CPRKold_KBRold = (household.age_of_head>55)*(building.disaggregate(zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.age_of_head>55,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPRKold_KBRold = (household.age_of_head>55)*(building.disaggregate(zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.2 sec
                    CPRKyng_KBRyng = (household.age_of_head<=35)*(building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPRKyng_KBRyng = (household.age_of_head<=35)*(building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.2 sec
                    CPRam0_HBRam0 = (household.workers==0)*(building.disaggregate(zone.aggregate(household.workers==0, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers==0,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar168)
                                household.workers==0.....................0.0 sec
                            building.aggregate(household.autogenvar168): completed...0.2 sec
                        zone.aggregate(household.workers==0,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam0_HBRam0 = (household.workers==0)*(building.disaggregate(zone.aggregate(household.workers==0, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRam1_HBRam1 = (household.workers==1)*(building.disaggregate(zone.aggregate(household.workers==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar67)
                                household.workers==1.....................0.0 sec
                            building.aggregate(household.autogenvar67): completed...0.2 sec
                        zone.aggregate(household.workers==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam1_HBRam1 = (household.workers==1)*(building.disaggregate(zone.aggregate(household.workers==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.5 sec
                    CPRam1g_HBRam1g = (household.workers>=1)*(building.disaggregate(zone.aggregate(household.workers>=1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers>=1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar385)
                                household.workers>=1.....................0.0 sec
                            building.aggregate(household.autogenvar385): completed...0.2 sec
                        zone.aggregate(household.workers>=1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam1g_HBRam1g = (household.workers>=1)*(building.disaggregate(zone.aggregate(household.workers>=1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRam2g_HBRam2g = (household.workers>=2)*(building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar71)
                                household.workers>=2.....................0.0 sec
                            building.aggregate(household.autogenvar71): completed...0.2 sec
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam2g_HBRam2g = (household.workers>=2)*(building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2))
                        zone.aggregate(establishment.employment,function=sum)....0.0 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2)): completed...0.0 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.2 sec
                    HBRsmeDept = (household.previous_dpt==75)*(building.disaggregate(zone.dept==75))+(household.previous_dpt==77)*(building.disaggregate(zone.dept==77))+(household.previous_dpt==78)*(building.disaggregate(zone.dept==78))+(household.previous_dpt==91)*(building.disaggregate(zone.dept==91))+(household.previous_dpt==92)*(building.disaggregate(zone.dept==92))+(household.previous_dpt==93)*(building.disaggregate(zone.dept==93))+(household.previous_dpt==94)*(building.disaggregate(zone.dept==94))+(household.previous_dpt==95)*(building.disaggregate(zone.dept==95))
                        zone.dept==77....................................0.0 sec
                        zone.dept==78....................................0.0 sec
                        zone.dept==95....................................0.0 sec
                        zone.dept==91....................................0.0 sec
                    HBRsmeDept = (household.previous_dpt==75)*(building.disaggregate(zone.dept==75))+(household.previous_dpt==77)*(building.disaggregate(zone.dept==77))+(household.previous_dpt==78)*(building.disaggregate(zone.dept==78))+(household.previous_dpt==91)*(building.disaggregate(zone.dept==91))+(household.previous_dpt==92)*(building.disaggregate(zone.dept==92))+(household.previous_dpt==93)*(building.disaggregate(zone.dept==93))+(household.previous_dpt==94)*(building.disaggregate(zone.dept==94))+(household.previous_dpt==95)*(building.disaggregate(zone.dept==95)): completed...3.2 sec
                    ctdtco_HBRcar0 = (household.cars==0)*(building.ctdtco)
                        building.disaggregate(zone.ctdtco)...............0.1 sec
                    ctdtco_HBRcar0 = (household.cars==0)*(building.ctdtco): completed...1.2 sec
                    ctdtco_HBRcar1g = (household.cars>=1)*(building.ctdtco)....1.1 sec
                    ctdvpo_HBRcar0 = (household.cars==0)*(building.ctdvpo)....1.1 sec
                    ctdvpo_HBRcar1g = (household.cars>=1)*(building.ctdvpo)....1.1 sec
                    Choice set size: 50
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 3 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 3 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                HLCM chunk 1 out of 1.: completed................3 min, 45.9 sec
            Running Household Location Choice Model (from urbansim.models.household_location_choice_model): completed...3 min, 46.3 sec
            Running Real Estate Price Model (from urbansim.models.real_estate_price_model): started on Tue Apr 10 05:42:29 2012
                ln_price=ln(building.price)..............................0.0 sec
                Total number of individuals: 6500
                REPM chunk 1 out of 1.: started on Tue Apr 10 05:42:29 2012
                    Number of agents in this chunk: 6500
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc)
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh))
                            zone.aggregate(building.number_of_agents(household),function=sum)
                                building.number_of_agents(household).....0.6 sec
                            zone.aggregate(building.number_of_agents(household),function=sum): completed...0.6 sec
                            zone_id = household.disaggregate(building.zone_id)....0.2 sec
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh)): completed...1.0 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc): completed...1.0 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum)))
                            building.aggregate(household.autogenvar60)...0.2 sec
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum))): completed...0.2 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100: completed...0.2 sec
                    CRItaxBati = building.disaggregate(zone.bati)........0.3 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.2 sec
                REPM chunk 1 out of 1.: completed........................1.7 sec
            Running Real Estate Price Model (from urbansim.models.real_estate_price_model): completed...1.8 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:42:32 2012
                household.disaggregate(zone.dept)........................0.2 sec
            Running opus_core.simple_model.SimpleModel: completed........0.2 sec
            Writing datasets to cache for year 2004: started on Tue Apr 10 05:42:32 2012
                Flushing building
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2004/buildings doesn't exist and is created
                Flushing sector
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2004/sectors doesn't exist and is created
                Flushing home_based_status
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2004/home_based_status doesn't exist and is created
                Flushing zone
                Flushing household
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2004/households doesn't exist and is created
                Flushing development_event_history
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2004/development_event_history doesn't exist and is created
                Flushing target_vacancy
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2004/target_vacancies doesn't exist and is created
                Flushing building_type
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2004/building_types doesn't exist and is created
                Flushing building_sqft_per_job
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2004/building_sqft_per_job doesn't exist and is created
                Flushing choice
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2004/choice_set doesn't exist and is created
                Flushing establishment
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2004/establishment doesn't exist and is created
                Flushing development_project
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2004/development_projects doesn't exist and is created
            Writing datasets to cache for year 2004: completed..........39.6 sec
        Simulate year 2004: completed............................5 min, 42.6 sec
        Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/year_2004_log.txt
    Starting simulation for year 2004: completed.................5 min, 42.7 sec
Start simulation run: completed..................................5 min, 42.7 sec
Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
Running simulation for year 2004 in new process: completed.......5 min, 43.0 sec
Triggering travelmodel
Leaving travelmodel
Running simulation for year 2005 in new process: started on Tue Apr 10 05:43:12 2012
    Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
    Invoking: /usr/bin/python /workspace/opus/src/opus_core/model_coordinators/model_system.py -r /tmp/tmpZzPXtq/resources.pickle --log-file-name run_multiprocess.log
Cache Directory set to: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16
Start simulation run: started on Tue Apr 10 05:43:12 2012
    random seed = (224766668,)
    Starting simulation for year 2005: started on Tue Apr 10 05:43:12 2012
        Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
        Logging to file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/year_2005_log.txt
        Simulate year 2005: started on Tue Apr 10 05:43:12 2012
            Running Swap Datasets (from opus_core.models.swap_datasets): started on Tue Apr 10 05:43:13 2012....0.0 sec
            Running Swap Datasets (from opus_core.models.swap_datasets): started on Tue Apr 10 05:43:13 2012
                Backed up /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2005/zones to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2005/zones_ORIGINAL
                Renamed /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2005/zones_baseline to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2005/zones
            Running Swap Datasets (from opus_core.models.swap_datasets): completed...0.0 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:43:13 2012
                numpy.clip(vpo, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:43:13 2012
                numpy.clip(tco, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:43:13 2012
                numpy.clip(tcd, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:43:13 2012
                numpy.clip(vpd, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running Development Project Transition Model (from urbansim.models.real_estate_transition_model): started on Tue Apr 10 05:43:13 2012
                is_residential = building.disaggregate(building_type.is_residential)....0.1 sec
                is_residential = development_event_history.disaggregate(building_type.is_residential)....0.0 sec
                
                +----------------+-----------+-----------+------------+----------+
                | is_residential |   actual  |   target  | difference |  action  |
                +----------------+-----------+-----------+------------+----------+
                |       1        |  5098821  |  5147861  |   49040    | +49200.0 |
                |       0        | 382249150 | 362489977 | -19759173  |    0     |
                +----------------+-----------+-----------+------------+----------+
            Running Development Project Transition Model (from urbansim.models.real_estate_transition_model): completed...2.1 sec
            Running Non-Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): started on Tue Apr 10 05:43:15 2012
                is_non_residential = numpy.logical_not(urbansim_zone.development_project.is_residential)....0.0 sec
                Nothing to be done.
            Running Non-Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): completed...0.0 sec
            Running Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): started on Tue Apr 10 05:43:15 2012
                Total number of individuals: 4440
                DPLCM chunk 1 out of 1.: started on Tue Apr 10 05:43:15 2012
                    Number of agents in this chunk: 4440
                    developable_residential_units_capacity = clip_to_zero(building.residential_units_capacity - building.residential_units)....0.0 sec
                    Available capacity: 31693332 units.
                    (building.building_type_id==1)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==2)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==3)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==4)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    CBAPC = (building.disaggregate(zone.dept==92))+(building.disaggregate(zone.dept==93))+(building.disaggregate(zone.dept==94))
                        zone.dept==94....................................0.1 sec
                        zone.dept==92....................................0.0 sec
                        zone.dept==93....................................0.0 sec
                    CBAPC = (building.disaggregate(zone.dept==92))+(building.disaggregate(zone.dept==93))+(building.disaggregate(zone.dept==94)): completed...0.1 sec
                    CBAnwCty = building.disaggregate(zone.cvilnouvel)....0.1 sec
                    CBAparis = building.disaggregate(zone.dept==75)
                        zone.dept==75....................................0.0 sec
                    CBAparis = building.disaggregate(zone.dept==75): completed...0.0 sec
                    CDGCBD = building.disaggregate(zone.cd_chatelet).....0.1 sec
                    CDGart = building.disaggregate(zone.cdistart)/1000...0.1 sec
                    CDGhighw = building.disaggregate(zone.cdisthwy)/1000....0.1 sec
                    CLCrPriceF = ln_bounded(building.price)..............0.0 sec
                    CLCrPriceH = ln_bounded(building.price)..............0.0 sec
                    CLCsPriceH = ln_bounded(building.price)..............0.0 sec
                    CLGarea = building.disaggregate(zone.ZLGarea)
                        ln_bounded(zone.careakm2)........................0.1 sec
                    CLGarea = building.disaggregate(zone.ZLGarea): completed...0.1 sec
                    CNGsubwSP = building.disaggregate(zone.csubway9).....0.1 sec
                    CNGtrainSt = building.disaggregate(zone.ctrain9).....0.1 sec
                    CPBhghInc = building.disaggregate(zone.ZPBhghInc)
                        100*(zone.aggregate(household.lincomepc>10.3)/(zone.CNRhh))
                            zone.aggregate(building.number_of_agents(household),function=sum)
                                building.number_of_agents(household).....0.6 sec
                            zone.aggregate(building.number_of_agents(household),function=sum): completed...0.6 sec
                            household.lincomepc>10.3.....................0.1 sec
                            zone_id = household.disaggregate(building.zone_id)....0.2 sec
                        100*(zone.aggregate(household.lincomepc>10.3)/(zone.CNRhh)): completed...1.1 sec
                    CPBhghInc = building.disaggregate(zone.ZPBhghInc): completed...1.1 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc)
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh))
                            household.lincomepc<=9.9.....................0.0 sec
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh)): completed...0.2 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc): completed...0.2 sec
                    CPInoise = building.disaggregate(zone.cnoise)........0.1 sec
                    CPOforest = building.disaggregate(zone.cpbois).......0.1 sec
                    CPOhlth = building.disaggregate(zone.cpequipem_sante)....0.1 sec
                    CPOpark = building.disaggregate(zone.cpparc_jardin)..0.1 sec
                    CPOsport = building.disaggregate(zone.cpsport).......0.1 sec
                    CPOwater = building.disaggregate(zone.cpeau).........0.1 sec
                    CPRKfrgn = building.disaggregate(zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))))*100
                        zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household)))
                            building.aggregate(household.race_id==1)
                                household.race_id==1.....................0.1 sec
                            building.aggregate(household.race_id==1): completed...0.3 sec
                        zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))): completed...0.3 sec
                    CPRKfrgn = building.disaggregate(zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))))*100: completed...0.3 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum)))
                            building.aggregate(household.autogenvar60)
                                household.age_of_head>55.................0.1 sec
                            building.aggregate(household.autogenvar60): completed...0.3 sec
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum))): completed...0.3 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100: completed...0.3 sec
                    CPRKyng = building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar63)
                                household.age_of_head<=35................0.0 sec
                            building.aggregate(household.autogenvar63): completed...0.2 sec
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRKyng = building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.2 sec
                    CPRaft90 = building.disaggregate(zone.cpraft90)......0.1 sec
                    CPRam1 = building.disaggregate(zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.workers==1)
                                household.workers==1.....................0.1 sec
                            building.aggregate(household.workers==1): completed...0.3 sec
                        zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRam1 = building.disaggregate(zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRam2g = building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar71)
                                household.workers>=2.....................0.0 sec
                            building.aggregate(household.autogenvar71): completed...0.2 sec
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam2g = building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.2 sec
                    CPRam3g = building.disaggregate(zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.workers>=3)
                                household.workers>=3.....................0.0 sec
                            building.aggregate(household.workers>=3): completed...0.2 sec
                        zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam3g = building.disaggregate(zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.2 sec
                    CPRbef15 = building.disaggregate(zone.cprbef15)......0.1 sec
                    CPRmemb2 = building.disaggregate(zone.aggregate(household.size==2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.size==2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar75)
                                household.size==2........................0.1 sec
                            building.aggregate(household.autogenvar75): completed...0.3 sec
                        zone.aggregate(household.size==2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRmemb2 = building.disaggregate(zone.aggregate(household.size==2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRmemb3g = building.disaggregate(zone.aggregate(household.size>=3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.size>=3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar78)
                                household.size>=3........................0.0 sec
                            building.aggregate(household.autogenvar78): completed...0.2 sec
                        zone.aggregate(household.size>=3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRmemb3g = building.disaggregate(zone.aggregate(household.size>=3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.2 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2))
                        zone.aggregate(establishment.employment,function=sum)....0.1 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2)): completed...0.1 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.2 sec
                    ctdvpo = building.disaggregate(zone.ctdvpo)..........0.1 sec
                    Choice set size: 10
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                DPLCM chunk 1 out of 1.: completed.......................5.6 sec
            Running Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): completed...5.6 sec
            Running Add Development Projects Quantity to Buildings (from urbansim_zone.models.add_projects_to_buildings): started on Tue Apr 10 05:43:21 2012....0.2 sec
            emp_250 = (establishment.employment < 250).astype('i').......0.0 sec
            Running Establishment Disappearance Model (from paris.models.establishment_disappearance_model): started on Tue Apr 10 05:43:21 2012
                Total number of individuals: 411748
                EDM chunk 1 out of 1.: started on Tue Apr 10 05:43:21 2012
                    Number of agents in this chunk: 411748
                    EBADefense = establishment.disaggregate(building.CBADefense)
                        building.disaggregate(zone.insee==92062)+building.disaggregate(zone.insee==92026)+building.disaggregate(zone.insee==92050)
                            zone.insee==92050............................0.1 sec
                            zone.insee==92026............................0.0 sec
                            zone.insee==92062............................0.0 sec
                        building.disaggregate(zone.insee==92062)+building.disaggregate(zone.insee==92026)+building.disaggregate(zone.insee==92050): completed...0.1 sec
                    EBADefense = establishment.disaggregate(building.CBADefense): completed...0.1 sec
                    EBAnwCty = establishment.disaggregate(building.CBAnwCty)....0.0 sec
                    EBAparis = establishment.disaggregate(building.disaggregate(zone.dept==75))
                        building.disaggregate(zone.dept==75).............0.0 sec
                    EBAparis = establishment.disaggregate(building.disaggregate(zone.dept==75)): completed...0.0 sec
                    ECTDTcD = establishment.disaggregate(building.ctdtcd)
                        building.disaggregate(zone.ctdtcd)...............0.1 sec
                    ECTDTcD = establishment.disaggregate(building.ctdtcd): completed...0.1 sec
                    ECTDVpD = establishment.disaggregate(building.ctdvpd)
                        building.disaggregate(zone.ctdvpd)...............0.1 sec
                    ECTDVpD = establishment.disaggregate(building.ctdvpd): completed...0.1 sec
                    ELPB = establishment.disaggregate(building.CLPB)
                        building.disaggregate(zone.ZCLPB)
                            ln_bounded(zone.aggregate(building.price*(building.building_type_id==6), function=sum)/zone.aggregate((building.building_type_id==6), function=sum))
                                building.price*(building.building_type_id==6)....0.0 sec
                                (building.building_type_id==6)...........0.0 sec
                            ln_bounded(zone.aggregate(building.price*(building.building_type_id==6), function=sum)/zone.aggregate((building.building_type_id==6), function=sum)): completed...0.0 sec
                        building.disaggregate(zone.ZCLPB): completed.....0.0 sec
                    ELPB = establishment.disaggregate(building.CLPB): completed...0.0 sec
                    ENGsubwSP = establishment.disaggregate(building.CNGsubwSP)....0.0 sec
                    ENGtrainSt = establishment.disaggregate(building.CNGtrainSt)....0.0 sec
                    EPBhghInc = establishment.disaggregate(building.CPBhghInc)/100....0.0 sec
                    EPBlowInc = establishment.disaggregate(building.CPBlowInc)/100....0.0 sec
                    ERItaxPro = establishment.disaggregate(building.CRItaxPro)
                        building.disaggregate(zone.taxpro)...............0.1 sec
                    ERItaxPro = establishment.disaggregate(building.CRItaxPro): completed...0.1 sec
                    ERRdensPop = establishment.disaggregate(building.CRRdensPop)....0.0 sec
                    ERam0 = establishment.disaggregate(building.CPRam0)/100
                        building.disaggregate(zone.ZPRam0)
                            (zone.aggregate(building.aggregate(household.workers==0))/(zone.CNRhh))*100
                                building.aggregate(household.workers==0)
                                    household.workers==0.................0.0 sec
                                building.aggregate(household.workers==0): completed...0.2 sec
                            (zone.aggregate(building.aggregate(household.workers==0))/(zone.CNRhh))*100: completed...0.2 sec
                        building.disaggregate(zone.ZPRam0): completed....0.2 sec
                    ERam0 = establishment.disaggregate(building.CPRam0)/100: completed...0.3 sec
                    ETPNiv1 = establishment.disaggregate(building.CTPNiv1)
                        building.disaggregate(zone.ctpniv1)..............0.1 sec
                    ETPNiv1 = establishment.disaggregate(building.CTPNiv1): completed...0.1 sec
                    ETPNiv2 = establishment.disaggregate(building.CTPNiv2)
                        building.disaggregate(zone.ctpniv2)..............0.1 sec
                    ETPNiv2 = establishment.disaggregate(building.CTPNiv2): completed...0.1 sec
                    ETPNiv3 = establishment.disaggregate(building.CTPNiv3)
                        building.disaggregate(zone.ctpniv3)..............0.1 sec
                    ETPNiv3 = establishment.disaggregate(building.CTPNiv3): completed...0.1 sec
                    ETPNiv4 = establishment.disaggregate(building.CTPNiv4)
                        building.disaggregate(zone.ctpniv4)..............0.1 sec
                    ETPNiv4 = establishment.disaggregate(building.CTPNiv4): completed...0.1 sec
                    emp = establishment.employment.......................0.0 sec
                    w10=(establishment.employment_lag1 >= 10)*(establishment.employment_lag1 < 20)
                        opus_core.variables.VVV_lagLLL...................0.6 sec
                    w10=(establishment.employment_lag1 >= 10)*(establishment.employment_lag1 < 20): completed...0.6 sec
                    w100=(establishment.employment_lag1 >= 100)..........0.0 sec
                    w100slope=paris.establishment.w100*(establishment.employment_lag1 - 100)....0.0 sec
                    w10slope=paris.establishment.w10*(establishment.employment_lag1 - 10)....0.0 sec
                    w2=(establishment.employment_lag1 >= 2)*(establishment.employment_lag1 < 3)....0.0 sec
                    w20=(establishment.employment_lag1 >= 20)*(establishment.employment_lag1 < 50)....0.0 sec
                    w20slope=paris.establishment.w20*(establishment.employment_lag1 - 20)....0.0 sec
                    w3=(establishment.employment_lag1 >= 3)*(establishment.employment_lag1 < 6)....0.0 sec
                    w3slope=paris.establishment.w3*(establishment.employment_lag1 - 3)....0.0 sec
                    w50=(establishment.employment_lag1 >= 50)*(establishment.employment_lag1 < 100)....0.0 sec
                    w50slope=paris.establishment.w50*(establishment.employment_lag1 - 50)....0.0 sec
                    w6=(establishment.employment_lag1 >= 6)*(establishment.employment_lag1 < 10)....0.0 sec
                    w6slope=paris.establishment.w6*(establishment.employment_lag1 - 6)....0.0 sec
                    Choice set size: 2
                EDM chunk 1 out of 1.: completed.........................5.0 sec
            Running Establishment Disappearance Model (from paris.models.establishment_disappearance_model): completed...5.1 sec
            Running Establishment Evolution Model (from paris.models.establishment_evolution_model): started on Tue Apr 10 05:43:27 2012
                (paris.establishment.year_lag1 != paris.establishment.year)*(paris.establishment.emp_250_lag1)*(establishment.building_id>0)
                    opus_core.variables.VVV_lagLLL
                        paris.establishment.year.........................0.1 sec
                        paris.establishment.year.........................0.0 sec
                    opus_core.variables.VVV_lagLLL: completed............0.6 sec
                    opus_core.variables.VVV_lagLLL
                        emp_250 = (establishment.employment < 250).astype('i')....0.1 sec
                    opus_core.variables.VVV_lagLLL: completed............0.6 sec
                (paris.establishment.year_lag1 != paris.establishment.year)*(paris.establishment.emp_250_lag1)*(establishment.building_id>0): completed...1.2 sec
                paris.establishment.ln_emp_ratio
                    lnemp=ln_bounded(establishment.employment)...........0.0 sec
                    lnemp_pre=ln_bounded(establishment.employment_lag1)..0.0 sec
                paris.establishment.ln_emp_ratio: completed..............0.0 sec
                Total number of individuals: 411748
                EEM chunk 1 out of 1.: started on Tue Apr 10 05:43:28 2012
                    Number of agents in this chunk: 411748
                    EBAdefense_EBEwfb10_250 = establishment.EBADefense * establishment.EBEwfb10_250
                        (establishment.employment_lag1>9)*(establishment.employment_lag1<250)....0.0 sec
                    EBAdefense_EBEwfb10_250 = establishment.EBADefense * establishment.EBEwfb10_250: completed...0.0 sec
                    EBAdefense_EBEwfl10 = establishment.EBADefense * establishment.EBEwfl10
                        establishment.employment_lag1<10.................0.0 sec
                    EBAdefense_EBEwfl10 = establishment.EBADefense * establishment.EBEwfl10: completed...0.0 sec
                    EBAlimit_EBEwfb10_250 = establishment.ELimit * establishment.EBEwfb10_250
                        establishment.disaggregate(building.disaggregate(zone.limit))
                            building.disaggregate(zone.limit)............0.1 sec
                        establishment.disaggregate(building.disaggregate(zone.limit)): completed...0.1 sec
                    EBAlimit_EBEwfb10_250 = establishment.ELimit * establishment.EBEwfb10_250: completed...0.1 sec
                    EBAlimit_EBEwfl10 = establishment.ELimit * establishment.EBEwfl10....0.0 sec
                    EBAnwCty_EBEwfb10_250 = establishment.EBAnwCty * establishment.EBEwfb10_250....0.0 sec
                    EBAnwCty_EBEwfl10 = establishment.EBAnwCty * establishment.EBEwfl10....0.0 sec
                    EBAparis_EBEwfb10_250 = establishment.EBAparis * establishment.EBEwfb10_250....0.0 sec
                    EBAparis_EBEwfl10 = establishment.EBAparis * establishment.EBEwfl10....0.0 sec
                    EBLCprice_EBEwfb10_250 = establishment.ELPB * establishment.EBEwfb10_250....0.0 sec
                    EBLCprice_EBEwfl10 = establishment.ELPB * establishment.EBEwfl10....0.0 sec
                    ECNGsubw_EBEwfb10_250 = establishment.ENGsubwSP * establishment.EBEwfb10_250....0.0 sec
                    ECNGsubw_EBEwfl10 = establishment.ENGsubwSP * establishment.EBEwfl10....0.0 sec
                    ECNGtrain_EBEwfb10_250 = establishment.ENGtrainSt * establishment.EBEwfb10_250....0.0 sec
                    ECNGtrain_EBEwfl10 = establishment.ENGtrainSt * establishment.EBEwfl10....0.0 sec
                    ECPBhghInc_EBEwfb10_250 = establishment.EPBhghInc * establishment.EBEwfb10_250....0.0 sec
                    ECPBhghInc_EBEwfl10 = establishment.EPBhghInc * establishment.EBEwfl10....0.0 sec
                    ECPBlowInc_EBEwfl10 = establishment.EPBlowInc * establishment.EBEwfl10....0.0 sec
                    ECPR0Ac_EBEwfb10_250 = establishment.ERam0 * establishment.EBEwfb10_250....0.0 sec
                    ECPR0Ac_EBEwfl10 = establishment.ERam0 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE1_EBEwfb10_250 = establishment.ETPNiv1 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE1_EBEwfl10 = establishment.ETPNiv1 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE2_EBEwfb10_250 = establishment.ETPNiv2 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE2_EBEwfl10 = establishment.ETPNiv2 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE3_EBEwfb10_250 = establishment.ETPNiv3 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE3_EBEwfl10 = establishment.ETPNiv3 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE4_EBEwfb10_250 = establishment.ETPNiv4 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE4_EBEwfl10 = establishment.ETPNiv4 * establishment.EBEwfl10....0.0 sec
                    ECQRdstPop_EBEwfb10_250 = establishment.ERRdensPop * establishment.EBEwfb10_250....0.0 sec
                    ECQRdstPop_EBEwfl10 = establishment.ERRdensPop * establishment.EBEwfl10....0.0 sec
                    ECRFproTax_EBEwfb10_250 = establishment.ERItaxPro * establishment.EBEwfb10_250....0.0 sec
                    ECRFproTax_EBEwfl10 = establishment.ERItaxPro * establishment.EBEwfl10....0.0 sec
                    ECTDTcD_EBEwfb10_250 = establishment.ECTDTcD * establishment.EBEwfb10_250....0.0 sec
                    ECTDTcD_EBEwfl10 = establishment.ECTDTcD * establishment.EBEwfl10....0.0 sec
                    ECTDVpD_EBEwfb10_250 = establishment.ECTDVpD * establishment.EBEwfb10_250....0.0 sec
                    ECTDVpD_EBEwfl10 = establishment.ECTDVpD * establishment.EBEwfl10....0.0 sec
                EEM chunk 1 out of 1.: completed.........................1.2 sec
                rmse_ln_emp_ratio = numpy.sqrt(establishment.disaggregate(sector.aggregate(establishment._init_error_ln_emp_ratio**2, function=mean)))
                    sector.aggregate(establishment._init_error_ln_emp_ratio**2,function=mean)
                        establishment._init_error_ln_emp_ratio**2........0.0 sec
                    sector.aggregate(establishment._init_error_ln_emp_ratio**2,function=mean): completed...0.1 sec
                rmse_ln_emp_ratio = numpy.sqrt(establishment.disaggregate(sector.aggregate(establishment._init_error_ln_emp_ratio**2, function=mean))): completed...0.1 sec
            Running Establishment Evolution Model (from paris.models.establishment_evolution_model): completed...2.8 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:43:29 2012
                paris.establishment.emp_pred
                    emp_pre1=establishment.employment_lag1...............0.0 sec
                paris.establishment.emp_pred: completed..................0.0 sec
                (establishment.disappeared == 0)*(establishment.building_id>0)*(paris.establishment.year_lag1 != pari.establishment.year)*(paris.establishment.emp_250_lag1)....0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.0 sec
            Running Establishment Reappearance Model (from paris.models.establishment_reappearance_model): started on Tue Apr 10 05:43:29 2012
                _actual_ = control_total.aggregate(establishment.employment)....0.0 sec

                (establishment.disappeared == 1)*(paris.establishment.emp_250)
                    emp_250 = (establishment.employment < 250).astype('i')....0.0 sec
                (establishment.disappeared == 1)*(paris.establishment.emp_250): completed...0.0 sec
                
                +-----------+-------------+--------+---------+------------+---------+--------+------+
                | sector_id | disappeared | actual |  target | difference |  action |   N    | note |
                +-----------+-------------+--------+---------+------------+---------+--------+------+
                |     1     |      0      | 32391  |  24877  |   -7514    |    0    |   0    |      |
                |     2     |      0      | 489050 |  704701 |   215651   | +130434 | +18561 |      |
                |     3     |      0      | 128691 |  247479 |   118788   |  +87129 | +16686 |      |
                |     4     |      0      | 397851 |  697343 |   299492   | +192685 | +44831 |      |
                |     5     |      0      | 243374 |  309054 |   65680    |  +42253 | +4078  |      |
                |     6     |      0      | 213991 |  272387 |   58396    |  +31107 | +4553  |      |
                |     7     |      0      | 58970  |  109162 |   50192    |  +32153 | +8128  |      |
                |     8     |      0      | 724492 | 1022965 |   298473   | +246914 | +26199 |      |
                |     9     |      0      | 332780 |  499312 |   166532   |  +96622 | +30794 |      |
                |     10    |      0      | 675874 |  830401 |   154527   |  +42433 | +8378  |      |
                |     11    |      0      | 545037 |  642766 |   97729    |  +43895 | +6808  |      |
                +-----------+-------------+--------+---------+------------+---------+--------+------+
                
            Running Establishment Reappearance Model (from paris.models.establishment_reappearance_model): completed...0.4 sec
            Running Establishment Transition Model (from paris.models.transition_model): started on Tue Apr 10 05:43:30 2012
                _actual_ = control_total.aggregate(establishment.employment)....0.0 sec
                WARNING: The are 9 eligible elements, less than the sample_size 68. Sample 9. 
                
                +-----------+-------------+--------+---------+------------+---------+------+
                | sector_id | disappeared | actual |  target | difference |  action | note |
                +-----------+-------------+--------+---------+------------+---------+------+
                |     1     |      0      | 32391  |  24877  |   -7514    |  -1409  |  1   |
                |     2     |      0      | 619484 |  704701 |   85217    |  +85217 |      |
                |     3     |      0      | 215820 |  247479 |   31659    |  +31659 |      |
                |     4     |      0      | 590536 |  697343 |   106807   | +106807 |      |
                |     5     |      0      | 285627 |  309054 |   23427    |  +23427 |      |
                |     6     |      0      | 245098 |  272387 |   27289    |  +27289 |      |
                |     7     |      0      | 91123  |  109162 |   18039    |  +18039 |      |
                |     8     |      0      | 971406 | 1022965 |   51559    |  +51559 |      |
                |     9     |      0      | 429402 |  499312 |   69910    |  +69910 |      |
                |     10    |      0      | 718307 |  830401 |   112094   | +112094 |      |
                |     11    |      0      | 588932 |  642766 |   53834    |  +53834 |      |
                +-----------+-------------+--------+---------+------------+---------+------+
                
                ERROR: 
                1. We run out of eligible samples to match target 24877 exactly.
                
            Running Establishment Transition Model (from paris.models.transition_model): completed...1.1 sec
            Running Establishment Location Choice Model (from urbansim.models.agent_location_choice_model): started on Tue Apr 10 05:43:31 2012
                (establishment.disappeared==0)*(establishment.building_id <= 0)....0.0 sec
                (establishment.employment)*(establishment.disappeared==0)....0.0 sec
                Total number of individuals: 259764
                ELCM chunk 1 out of 1.: started on Tue Apr 10 05:43:31 2012
                    Number of agents in this chunk: 259764
                    vacant_non_home_based_job_spaces = clip_to_zero(urbansim_zone.building.total_non_home_based_job_spaces - paris.building.number_of_non_home_based_jobs)
                        total_non_home_based_job_spaces = numpy.round(safe_array_divide(building.non_residential_sqft, urbansim_zone.building.building_sqft_per_job))Warning: invalid value encountered in divide
....0.0 sec
                        number_of_non_home_based_jobs = building.aggregate((establishment.employment)*(establishment.disappeared==0))....0.0 sec
                        WARNING: Negative values detected in function/method ''
                        WARNING: Minimum: -6.0. Negative values clipped to zero.
                    vacant_non_home_based_job_spaces = clip_to_zero(urbansim_zone.building.total_non_home_based_job_spaces - paris.building.number_of_non_home_based_jobs): completed...0.0 sec
                    Available capacity: 1669454.0 units.
                    CLEmpTot_lag1 = ln_bounded(building.disaggregate(zone.emptot_lag1))
                        zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0),intermediates=[building])
                            building.aggregate(establishment.autogenvar293)
                                establishment.employment_lag1*(establishment.disappeared_lag1==0)
                                    opus_core.variables.VVV_lagLLL.......0.7 sec
                                establishment.employment_lag1*(establishment.disappeared_lag1==0): completed...0.7 sec
                            building.aggregate(establishment.autogenvar293): completed...0.7 sec
                        zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0),intermediates=[building]): completed...0.7 sec
                    CLEmpTot_lag1 = ln_bounded(building.disaggregate(zone.emptot_lag1)): completed...0.7 sec
                    CLOActPotSt = building.disaggregate(zone.CLOActPotSt)
                        ln_bounded(zone.CNOActPotSt)
                            1.0*zone.project99st.........................0.1 sec
                        ln_bounded(zone.CNOActPotSt): completed..........0.1 sec
                    CLOActPotSt = building.disaggregate(zone.CLOActPotSt): completed...0.1 sec
                    CNRKold = building.disaggregate(zone.ZPRKold)
                        (zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.CNRhh))*100....0.0 sec
                    CNRKold = building.disaggregate(zone.ZPRKold): completed...0.0 sec
                    CNRKyng = building.disaggregate(zone.ZPRKyng)
                        (zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.CNRhh))*100....0.0 sec
                    CNRKyng = building.disaggregate(zone.ZPRKyng): completed...0.0 sec
                    CPGZFU = building.disaggregate(zone.czfu)............0.1 sec
                    CPRchld111g = building.disaggregate(zone.CPRchld111g)
                        100*((zone.aggregate(household.children11>=1, intermediates = [building]))/(zone.CNRhh))
                            building.aggregate(household.autogenvar300)
                                household.children11>=1..................0.1 sec
                            building.aggregate(household.autogenvar300): completed...0.3 sec
                        100*((zone.aggregate(household.children11>=1, intermediates = [building]))/(zone.CNRhh)): completed...0.3 sec
                    CPRchld111g = building.disaggregate(zone.CPRchld111g): completed...0.3 sec
                    CQEsec10dst_lag1 = building.disaggregate(zone.emp_s10_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s10_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 10),intermediates=[building])
                                building.aggregate(establishment.autogenvar303)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==10)
                                        opus_core.variables.VVV_lagLLL...0.7 sec
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==10): completed...0.7 sec
                                building.aggregate(establishment.autogenvar303): completed...0.7 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 10),intermediates=[building]): completed...0.7 sec
                        zone.emp_s10_lag1/(1000*zone.CNOActPotSt): completed...0.7 sec
                    CQEsec10dst_lag1 = building.disaggregate(zone.emp_s10_lag1/(1000*zone.CNOActPotSt)): completed...0.7 sec
                    CQEsec11dst_lag1 = building.disaggregate(zone.emp_s11_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s11_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 11),intermediates=[building])
                                building.aggregate(establishment.autogenvar306)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==11)....0.0 sec
                                building.aggregate(establishment.autogenvar306): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 11),intermediates=[building]): completed...0.0 sec
                        zone.emp_s11_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec11dst_lag1 = building.disaggregate(zone.emp_s11_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec2dst_lag1 = building.disaggregate(zone.emp_s2_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s2_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 2),intermediates=[building])
                                building.aggregate(establishment.autogenvar309)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==2)....0.0 sec
                                building.aggregate(establishment.autogenvar309): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 2),intermediates=[building]): completed...0.0 sec
                        zone.emp_s2_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec2dst_lag1 = building.disaggregate(zone.emp_s2_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec3dst_lag1 = building.disaggregate(zone.emp_s3_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s3_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 3),intermediates=[building])
                                building.aggregate(establishment.autogenvar312)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==3)....0.0 sec
                                building.aggregate(establishment.autogenvar312): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 3),intermediates=[building]): completed...0.0 sec
                        zone.emp_s3_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec3dst_lag1 = building.disaggregate(zone.emp_s3_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec4dst_lag1 = building.disaggregate(zone.emp_s4_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s4_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 4),intermediates=[building])
                                building.aggregate(establishment.autogenvar315)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==4)....0.0 sec
                                building.aggregate(establishment.autogenvar315): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 4),intermediates=[building]): completed...0.0 sec
                        zone.emp_s4_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec4dst_lag1 = building.disaggregate(zone.emp_s4_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec5dst_lag1 = building.disaggregate(zone.emp_s5_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s5_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 5),intermediates=[building])
                                building.aggregate(establishment.autogenvar318)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==5)....0.0 sec
                                building.aggregate(establishment.autogenvar318): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 5),intermediates=[building]): completed...0.0 sec
                        zone.emp_s5_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec5dst_lag1 = building.disaggregate(zone.emp_s5_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec6dst_lag1 = building.disaggregate(zone.emp_s6_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s6_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 6),intermediates=[building])
                                building.aggregate(establishment.autogenvar321)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==6)....0.0 sec
                                building.aggregate(establishment.autogenvar321): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 6),intermediates=[building]): completed...0.0 sec
                        zone.emp_s6_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec6dst_lag1 = building.disaggregate(zone.emp_s6_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec7dst_lag1 = building.disaggregate(zone.emp_s7_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s7_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 7),intermediates=[building])
                                building.aggregate(establishment.autogenvar324)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==7)....0.0 sec
                                building.aggregate(establishment.autogenvar324): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 7),intermediates=[building]): completed...0.0 sec
                        zone.emp_s7_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec7dst_lag1 = building.disaggregate(zone.emp_s7_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec8dst_lag1 = building.disaggregate(zone.emp_s8_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s8_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 8),intermediates=[building])
                                building.aggregate(establishment.autogenvar327)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==8)....0.0 sec
                                building.aggregate(establishment.autogenvar327): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 8),intermediates=[building]): completed...0.0 sec
                        zone.emp_s8_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec8dst_lag1 = building.disaggregate(zone.emp_s8_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec9dst_lag1 = building.disaggregate(zone.emp_s9_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s9_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 9),intermediates=[building])
                                building.aggregate(establishment.autogenvar330)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==9)....0.0 sec
                                building.aggregate(establishment.autogenvar330): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 9),intermediates=[building]): completed...0.0 sec
                        zone.emp_s9_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec9dst_lag1 = building.disaggregate(zone.emp_s9_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    biotech = paris.building.zgp_id==22
                        zgp_id = building.disaggregate(zone.zgp_id)......0.1 sec
                    biotech = paris.building.zgp_id==22: completed.......0.1 sec
                    clichy_montfermeil = paris.building.zgp_id==21.......0.0 sec
                    confluence = paris.building.zgp_id==23...............0.0 sec
                    descates = paris.building.zgp_id==24.................0.0 sec
                    la_defense = paris.building.zgp_id==25...............0.0 sec
                    le_bourget = paris.building.zgp_id==26...............0.0 sec
                    paris_pole = (paris.building.zgp_id>=27)*(paris.building.zgp_id<=46) ....0.0 sec
                    pleyel = paris.building.zgp_id==47...................0.0 sec
                    roissy = paris.building.zgp_id==48...................0.0 sec
                    saclay = paris.building.zgp_id==49...................0.0 sec
                    val_de_france_gonesse = paris.building.zgp_id==50....0.0 sec
                    Choice set size: 50
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 1 (in 3 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                ELCM chunk 1 out of 1.: completed.......................57.7 sec
            Running Establishment Location Choice Model (from urbansim.models.agent_location_choice_model): completed...57.8 sec
            Running Household Transition Model (from urbansim.models.transition_model): started on Tue Apr 10 05:44:29 2012
                _actual_ = control_total.aggregate(household._one_)......0.2 sec
                
                +---------+---------+---------+------------+--------+------+
                | hh_type |  actual |  target | difference | action | note |
                +---------+---------+---------+------------+--------+------+
                |    1    |  182991 |  185354 |    2363    | +2363  |      |
                |    2    |  443174 |  448896 |    5722    | +5722  |      |
                |    3    |  34042  |  34482  |    440     |  +440  |      |
                |    4    | 1005434 | 1018417 |   12983    | +12983 |      |
                |    5    |  378290 |  383455 |    5165    | +5165  |      |
                |    6    |  328480 |  332965 |    4485    | +4485  |      |
                |    7    |  38457  |  38982  |    525     |  +525  |      |
                |    8    |  602037 |  610257 |    8220    | +8220  |      |
                |    9    |  218138 |  218573 |    435     |  +435  |      |
                |    10   |  142589 |  142873 |    284     |  +284  |      |
                |    11   |  30565  |  30626  |     61     |  +61   |      |
                |    12   |  323930 |  324576 |    646     |  +646  |      |
                |    13   |  252064 |  252948 |    884     |  +884  |      |
                |    14   |  107160 |  107536 |    376     |  +376  |      |
                |    15   |  29641  |  29745  |    104     |  +104  |      |
                |    16   |  233904 |  234724 |    820     |  +820  |      |
                |    17   |  98605  |  99452  |    847     |  +847  |      |
                |    18   |  33320  |  33606  |    286     |  +286  |      |
                |    19   |  13684  |  13801  |    117     |  +117  |      |
                |    20   |  107442 |  108366 |    924     |  +924  |      |
                |    21   |  37365  |  37308  |    -57     |  -57   |      |
                |    22   |  12095  |  12077  |    -18     |  -18   |      |
                |    23   |   7498  |   7487  |    -11     |  -11   |      |
                |    24   |  69979  |  69872  |    -107    |  -107  |      |
                +---------+---------+---------+------------+--------+------+
                
            Running Household Transition Model (from urbansim.models.transition_model): completed...9.7 sec
            Running Household Relocation Model (from urbansim.models.agent_relocation_model): started on Tue Apr 10 05:44:39 2012
                Number of agents sampled based on rates: 585748
                Number of total movers: 625523
            Running Household Relocation Model (from urbansim.models.agent_relocation_model): completed...4.4 sec
            Running Household Location Choice Model (from urbansim.models.household_location_choice_model): started on Tue Apr 10 05:44:43 2012
                Total number of individuals: 625523
                HLCM chunk 1 out of 1.: started on Tue Apr 10 05:44:44 2012
                    Number of agents in this chunk: 625523
                    vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households)
                        number_of_households = building.number_of_agents(household)....0.5 sec
                        WARNING: Negative values detected in function/method ''
                        WARNING: Minimum: -527.0. Negative values clipped to zero.
                    vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households): completed...0.5 sec
                    Available capacity: 1004419.0 units.
                    (urbansim_zone.building.vacant_residential_units>0)*(household.building_type_id==building.building_type_id)....0.0 sec
                    paris.building.M_DDDjt
                        M_1j0 = paris.building.number_of_households_of_type_1_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs1=building.aggregate(household.hh_type==1)
                                        household.hh_type==1.............0.5 sec
                                    _hhs1=building.aggregate(household.hh_type==1): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs1=building.aggregate(household.hh_type==1)
                                        household.hh_type==1.............0.0 sec
                                    _hhs1=building.aggregate(household.hh_type==1): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_1j0 = paris.building.number_of_households_of_type_1_lag6: completed...0.9 sec
                        TM_1t = alldata.aggregate_all(numpy.logical_and(household.hh_type==1, household.building_id<=0))
                            numpy.logical_and(household.hh_type==1,household.building_id<=0)....0.0 sec
                        TM_1t = alldata.aggregate_all(numpy.logical_and(household.hh_type==1, household.building_id<=0)): completed...0.1 sec
                        TM_10 = paris.alldata.number_of_households_of_type_1_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs1=alldata.aggregate_all(household.hh_type==1)
                                        household.hh_type==1.............0.5 sec
                                    _hhs1=alldata.aggregate_all(household.hh_type==1): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs1=alldata.aggregate_all(household.hh_type==1)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_10 = paris.alldata.number_of_households_of_type_1_lag6: completed...0.7 sec
                        V_ijt = urbansim_zone.building.vacant_residential_units....0.0 sec
                        V_ij0 = urbansim_zone.building.vacant_residential_units_lag6
                            opus_core.variables.VVV_lagLLL
                                vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households)
                                    number_of_households = building.number_of_agents(household)....1.0 sec
                                    WARNING: Negative values detected in function/method ''
                                    WARNING: Minimum: -22.0. Negative values clipped to zero.
                                vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households): completed...1.0 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        V_ij0 = urbansim_zone.building.vacant_residential_units_lag6: completed...1.0 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................2.8 sec
                    paris.building.M_DDDjt
                        M_2j0 = paris.building.number_of_households_of_type_2_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs2=building.aggregate(household.hh_type==2)
                                        household.hh_type==2.............0.5 sec
                                    _hhs2=building.aggregate(household.hh_type==2): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs2=building.aggregate(household.hh_type==2)
                                        household.hh_type==2.............0.0 sec
                                    _hhs2=building.aggregate(household.hh_type==2): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_2j0 = paris.building.number_of_households_of_type_2_lag6: completed...0.9 sec
                        TM_2t = alldata.aggregate_all(numpy.logical_and(household.hh_type==2, household.building_id<=0))
                            numpy.logical_and(household.hh_type==2,household.building_id<=0)....0.0 sec
                        TM_2t = alldata.aggregate_all(numpy.logical_and(household.hh_type==2, household.building_id<=0)): completed...0.1 sec
                        TM_20 = paris.alldata.number_of_households_of_type_2_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs2=alldata.aggregate_all(household.hh_type==2)
                                        household.hh_type==2.............0.5 sec
                                    _hhs2=alldata.aggregate_all(household.hh_type==2): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs2=alldata.aggregate_all(household.hh_type==2)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_20 = paris.alldata.number_of_households_of_type_2_lag6: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_3j0 = paris.building.number_of_households_of_type_3_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs3=building.aggregate(household.hh_type==3)
                                        household.hh_type==3.............0.5 sec
                                    _hhs3=building.aggregate(household.hh_type==3): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs3=building.aggregate(household.hh_type==3)
                                        household.hh_type==3.............0.0 sec
                                    _hhs3=building.aggregate(household.hh_type==3): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_3j0 = paris.building.number_of_households_of_type_3_lag6: completed...0.9 sec
                        TM_3t = alldata.aggregate_all(numpy.logical_and(household.hh_type==3, household.building_id<=0))
                            numpy.logical_and(household.hh_type==3,household.building_id<=0)....0.0 sec
                        TM_3t = alldata.aggregate_all(numpy.logical_and(household.hh_type==3, household.building_id<=0)): completed...0.1 sec
                        TM_30 = paris.alldata.number_of_households_of_type_3_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs3=alldata.aggregate_all(household.hh_type==3)
                                        household.hh_type==3.............0.5 sec
                                    _hhs3=alldata.aggregate_all(household.hh_type==3): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs3=alldata.aggregate_all(household.hh_type==3)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_30 = paris.alldata.number_of_households_of_type_3_lag6: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_4j0 = paris.building.number_of_households_of_type_4_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs4=building.aggregate(household.hh_type==4)
                                        household.hh_type==4.............0.5 sec
                                    _hhs4=building.aggregate(household.hh_type==4): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs4=building.aggregate(household.hh_type==4)
                                        household.hh_type==4.............0.0 sec
                                    _hhs4=building.aggregate(household.hh_type==4): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_4j0 = paris.building.number_of_households_of_type_4_lag6: completed...1.0 sec
                        TM_4t = alldata.aggregate_all(numpy.logical_and(household.hh_type==4, household.building_id<=0))
                            numpy.logical_and(household.hh_type==4,household.building_id<=0)....0.0 sec
                        TM_4t = alldata.aggregate_all(numpy.logical_and(household.hh_type==4, household.building_id<=0)): completed...0.1 sec
                        TM_40 = paris.alldata.number_of_households_of_type_4_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs4=alldata.aggregate_all(household.hh_type==4)
                                        household.hh_type==4.............0.5 sec
                                    _hhs4=alldata.aggregate_all(household.hh_type==4): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs4=alldata.aggregate_all(household.hh_type==4)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_40 = paris.alldata.number_of_households_of_type_4_lag6: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_5j0 = paris.building.number_of_households_of_type_5_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs5=building.aggregate(household.hh_type==5)
                                        household.hh_type==5.............0.5 sec
                                    _hhs5=building.aggregate(household.hh_type==5): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs5=building.aggregate(household.hh_type==5)
                                        household.hh_type==5.............0.0 sec
                                    _hhs5=building.aggregate(household.hh_type==5): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_5j0 = paris.building.number_of_households_of_type_5_lag6: completed...1.0 sec
                        TM_5t = alldata.aggregate_all(numpy.logical_and(household.hh_type==5, household.building_id<=0))
                            numpy.logical_and(household.hh_type==5,household.building_id<=0)....0.0 sec
                        TM_5t = alldata.aggregate_all(numpy.logical_and(household.hh_type==5, household.building_id<=0)): completed...0.1 sec
                        TM_50 = paris.alldata.number_of_households_of_type_5_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs5=alldata.aggregate_all(household.hh_type==5)
                                        household.hh_type==5.............0.5 sec
                                    _hhs5=alldata.aggregate_all(household.hh_type==5): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs5=alldata.aggregate_all(household.hh_type==5)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_50 = paris.alldata.number_of_households_of_type_5_lag6: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_6j0 = paris.building.number_of_households_of_type_6_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs6=building.aggregate(household.hh_type==6)
                                        household.hh_type==6.............0.5 sec
                                    _hhs6=building.aggregate(household.hh_type==6): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs6=building.aggregate(household.hh_type==6)
                                        household.hh_type==6.............0.0 sec
                                    _hhs6=building.aggregate(household.hh_type==6): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_6j0 = paris.building.number_of_households_of_type_6_lag6: completed...1.0 sec
                        TM_6t = alldata.aggregate_all(numpy.logical_and(household.hh_type==6, household.building_id<=0))
                            numpy.logical_and(household.hh_type==6,household.building_id<=0)....0.0 sec
                        TM_6t = alldata.aggregate_all(numpy.logical_and(household.hh_type==6, household.building_id<=0)): completed...0.1 sec
                        TM_60 = paris.alldata.number_of_households_of_type_6_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs6=alldata.aggregate_all(household.hh_type==6)
                                        household.hh_type==6.............0.5 sec
                                    _hhs6=alldata.aggregate_all(household.hh_type==6): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs6=alldata.aggregate_all(household.hh_type==6)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_60 = paris.alldata.number_of_households_of_type_6_lag6: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_7j0 = paris.building.number_of_households_of_type_7_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs7=building.aggregate(household.hh_type==7)
                                        household.hh_type==7.............0.5 sec
                                    _hhs7=building.aggregate(household.hh_type==7): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs7=building.aggregate(household.hh_type==7)
                                        household.hh_type==7.............0.0 sec
                                    _hhs7=building.aggregate(household.hh_type==7): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_7j0 = paris.building.number_of_households_of_type_7_lag6: completed...1.0 sec
                        TM_7t = alldata.aggregate_all(numpy.logical_and(household.hh_type==7, household.building_id<=0))
                            numpy.logical_and(household.hh_type==7,household.building_id<=0)....0.0 sec
                        TM_7t = alldata.aggregate_all(numpy.logical_and(household.hh_type==7, household.building_id<=0)): completed...0.1 sec
                        TM_70 = paris.alldata.number_of_households_of_type_7_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs7=alldata.aggregate_all(household.hh_type==7)
                                        household.hh_type==7.............0.5 sec
                                    _hhs7=alldata.aggregate_all(household.hh_type==7): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs7=alldata.aggregate_all(household.hh_type==7)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_70 = paris.alldata.number_of_households_of_type_7_lag6: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_8j0 = paris.building.number_of_households_of_type_8_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs8=building.aggregate(household.hh_type==8)
                                        household.hh_type==8.............0.5 sec
                                    _hhs8=building.aggregate(household.hh_type==8): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs8=building.aggregate(household.hh_type==8)
                                        household.hh_type==8.............0.0 sec
                                    _hhs8=building.aggregate(household.hh_type==8): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_8j0 = paris.building.number_of_households_of_type_8_lag6: completed...1.0 sec
                        TM_8t = alldata.aggregate_all(numpy.logical_and(household.hh_type==8, household.building_id<=0))
                            numpy.logical_and(household.hh_type==8,household.building_id<=0)....0.0 sec
                        TM_8t = alldata.aggregate_all(numpy.logical_and(household.hh_type==8, household.building_id<=0)): completed...0.1 sec
                        TM_80 = paris.alldata.number_of_households_of_type_8_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs8=alldata.aggregate_all(household.hh_type==8)
                                        household.hh_type==8.............0.5 sec
                                    _hhs8=alldata.aggregate_all(household.hh_type==8): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs8=alldata.aggregate_all(household.hh_type==8)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_80 = paris.alldata.number_of_households_of_type_8_lag6: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_9j0 = paris.building.number_of_households_of_type_9_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs9=building.aggregate(household.hh_type==9)
                                        household.hh_type==9.............0.5 sec
                                    _hhs9=building.aggregate(household.hh_type==9): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs9=building.aggregate(household.hh_type==9)
                                        household.hh_type==9.............0.0 sec
                                    _hhs9=building.aggregate(household.hh_type==9): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_9j0 = paris.building.number_of_households_of_type_9_lag6: completed...0.9 sec
                        TM_9t = alldata.aggregate_all(numpy.logical_and(household.hh_type==9, household.building_id<=0))
                            numpy.logical_and(household.hh_type==9,household.building_id<=0)....0.0 sec
                        TM_9t = alldata.aggregate_all(numpy.logical_and(household.hh_type==9, household.building_id<=0)): completed...0.1 sec
                        TM_90 = paris.alldata.number_of_households_of_type_9_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs9=alldata.aggregate_all(household.hh_type==9)
                                        household.hh_type==9.............0.5 sec
                                    _hhs9=alldata.aggregate_all(household.hh_type==9): completed...0.5 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.5 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs9=alldata.aggregate_all(household.hh_type==9)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_90 = paris.alldata.number_of_households_of_type_9_lag6: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_10j0 = paris.building.number_of_households_of_type_10_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs10=building.aggregate(household.hh_type==10)
                                        household.hh_type==10............0.5 sec
                                    _hhs10=building.aggregate(household.hh_type==10): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs10=building.aggregate(household.hh_type==10)
                                        household.hh_type==10............0.0 sec
                                    _hhs10=building.aggregate(household.hh_type==10): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_10j0 = paris.building.number_of_households_of_type_10_lag6: completed...0.9 sec
                        TM_10t = alldata.aggregate_all(numpy.logical_and(household.hh_type==10, household.building_id<=0))
                            numpy.logical_and(household.hh_type==10,household.building_id<=0)....0.0 sec
                        TM_10t = alldata.aggregate_all(numpy.logical_and(household.hh_type==10, household.building_id<=0)): completed...0.1 sec
                        TM_100 = paris.alldata.number_of_households_of_type_10_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs10=alldata.aggregate_all(household.hh_type==10)
                                        household.hh_type==10............0.5 sec
                                    _hhs10=alldata.aggregate_all(household.hh_type==10): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs10=alldata.aggregate_all(household.hh_type==10)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_100 = paris.alldata.number_of_households_of_type_10_lag6: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_11j0 = paris.building.number_of_households_of_type_11_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs11=building.aggregate(household.hh_type==11)
                                        household.hh_type==11............0.5 sec
                                    _hhs11=building.aggregate(household.hh_type==11): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs11=building.aggregate(household.hh_type==11)
                                        household.hh_type==11............0.0 sec
                                    _hhs11=building.aggregate(household.hh_type==11): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_11j0 = paris.building.number_of_households_of_type_11_lag6: completed...0.9 sec
                        TM_11t = alldata.aggregate_all(numpy.logical_and(household.hh_type==11, household.building_id<=0))
                            numpy.logical_and(household.hh_type==11,household.building_id<=0)....0.0 sec
                        TM_11t = alldata.aggregate_all(numpy.logical_and(household.hh_type==11, household.building_id<=0)): completed...0.1 sec
                        TM_110 = paris.alldata.number_of_households_of_type_11_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs11=alldata.aggregate_all(household.hh_type==11)
                                        household.hh_type==11............0.5 sec
                                    _hhs11=alldata.aggregate_all(household.hh_type==11): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs11=alldata.aggregate_all(household.hh_type==11)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_110 = paris.alldata.number_of_households_of_type_11_lag6: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_12j0 = paris.building.number_of_households_of_type_12_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs12=building.aggregate(household.hh_type==12)
                                        household.hh_type==12............0.5 sec
                                    _hhs12=building.aggregate(household.hh_type==12): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs12=building.aggregate(household.hh_type==12)
                                        household.hh_type==12............0.0 sec
                                    _hhs12=building.aggregate(household.hh_type==12): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_12j0 = paris.building.number_of_households_of_type_12_lag6: completed...0.9 sec
                        TM_12t = alldata.aggregate_all(numpy.logical_and(household.hh_type==12, household.building_id<=0))
                            numpy.logical_and(household.hh_type==12,household.building_id<=0)....0.0 sec
                        TM_12t = alldata.aggregate_all(numpy.logical_and(household.hh_type==12, household.building_id<=0)): completed...0.1 sec
                        TM_120 = paris.alldata.number_of_households_of_type_12_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs12=alldata.aggregate_all(household.hh_type==12)
                                        household.hh_type==12............0.5 sec
                                    _hhs12=alldata.aggregate_all(household.hh_type==12): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs12=alldata.aggregate_all(household.hh_type==12)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_120 = paris.alldata.number_of_households_of_type_12_lag6: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_13j0 = paris.building.number_of_households_of_type_13_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs13=building.aggregate(household.hh_type==13)
                                        household.hh_type==13............0.5 sec
                                    _hhs13=building.aggregate(household.hh_type==13): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs13=building.aggregate(household.hh_type==13)
                                        household.hh_type==13............0.0 sec
                                    _hhs13=building.aggregate(household.hh_type==13): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_13j0 = paris.building.number_of_households_of_type_13_lag6: completed...1.0 sec
                        TM_13t = alldata.aggregate_all(numpy.logical_and(household.hh_type==13, household.building_id<=0))
                            numpy.logical_and(household.hh_type==13,household.building_id<=0)....0.0 sec
                        TM_13t = alldata.aggregate_all(numpy.logical_and(household.hh_type==13, household.building_id<=0)): completed...0.1 sec
                        TM_130 = paris.alldata.number_of_households_of_type_13_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs13=alldata.aggregate_all(household.hh_type==13)
                                        household.hh_type==13............0.5 sec
                                    _hhs13=alldata.aggregate_all(household.hh_type==13): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs13=alldata.aggregate_all(household.hh_type==13)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_130 = paris.alldata.number_of_households_of_type_13_lag6: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_14j0 = paris.building.number_of_households_of_type_14_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs14=building.aggregate(household.hh_type==14)
                                        household.hh_type==14............0.5 sec
                                    _hhs14=building.aggregate(household.hh_type==14): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs14=building.aggregate(household.hh_type==14)
                                        household.hh_type==14............0.0 sec
                                    _hhs14=building.aggregate(household.hh_type==14): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.1 sec
                        M_14j0 = paris.building.number_of_households_of_type_14_lag6: completed...1.1 sec
                        TM_14t = alldata.aggregate_all(numpy.logical_and(household.hh_type==14, household.building_id<=0))
                            numpy.logical_and(household.hh_type==14,household.building_id<=0)....0.0 sec
                        TM_14t = alldata.aggregate_all(numpy.logical_and(household.hh_type==14, household.building_id<=0)): completed...0.1 sec
                        TM_140 = paris.alldata.number_of_households_of_type_14_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs14=alldata.aggregate_all(household.hh_type==14)
                                        household.hh_type==14............0.5 sec
                                    _hhs14=alldata.aggregate_all(household.hh_type==14): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs14=alldata.aggregate_all(household.hh_type==14)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_140 = paris.alldata.number_of_households_of_type_14_lag6: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_15j0 = paris.building.number_of_households_of_type_15_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs15=building.aggregate(household.hh_type==15)
                                        household.hh_type==15............0.5 sec
                                    _hhs15=building.aggregate(household.hh_type==15): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs15=building.aggregate(household.hh_type==15)
                                        household.hh_type==15............0.0 sec
                                    _hhs15=building.aggregate(household.hh_type==15): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_15j0 = paris.building.number_of_households_of_type_15_lag6: completed...0.9 sec
                        TM_15t = alldata.aggregate_all(numpy.logical_and(household.hh_type==15, household.building_id<=0))
                            numpy.logical_and(household.hh_type==15,household.building_id<=0)....0.0 sec
                        TM_15t = alldata.aggregate_all(numpy.logical_and(household.hh_type==15, household.building_id<=0)): completed...0.1 sec
                        TM_150 = paris.alldata.number_of_households_of_type_15_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs15=alldata.aggregate_all(household.hh_type==15)
                                        household.hh_type==15............0.5 sec
                                    _hhs15=alldata.aggregate_all(household.hh_type==15): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs15=alldata.aggregate_all(household.hh_type==15)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_150 = paris.alldata.number_of_households_of_type_15_lag6: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_16j0 = paris.building.number_of_households_of_type_16_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs16=building.aggregate(household.hh_type==16)
                                        household.hh_type==16............0.5 sec
                                    _hhs16=building.aggregate(household.hh_type==16): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs16=building.aggregate(household.hh_type==16)
                                        household.hh_type==16............0.0 sec
                                    _hhs16=building.aggregate(household.hh_type==16): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_16j0 = paris.building.number_of_households_of_type_16_lag6: completed...0.9 sec
                        TM_16t = alldata.aggregate_all(numpy.logical_and(household.hh_type==16, household.building_id<=0))
                            numpy.logical_and(household.hh_type==16,household.building_id<=0)....0.0 sec
                        TM_16t = alldata.aggregate_all(numpy.logical_and(household.hh_type==16, household.building_id<=0)): completed...0.1 sec
                        TM_160 = paris.alldata.number_of_households_of_type_16_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs16=alldata.aggregate_all(household.hh_type==16)
                                        household.hh_type==16............0.5 sec
                                    _hhs16=alldata.aggregate_all(household.hh_type==16): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs16=alldata.aggregate_all(household.hh_type==16)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_160 = paris.alldata.number_of_households_of_type_16_lag6: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_17j0 = paris.building.number_of_households_of_type_17_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs17=building.aggregate(household.hh_type==17)
                                        household.hh_type==17............0.5 sec
                                    _hhs17=building.aggregate(household.hh_type==17): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs17=building.aggregate(household.hh_type==17)
                                        household.hh_type==17............0.0 sec
                                    _hhs17=building.aggregate(household.hh_type==17): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_17j0 = paris.building.number_of_households_of_type_17_lag6: completed...0.9 sec
                        TM_17t = alldata.aggregate_all(numpy.logical_and(household.hh_type==17, household.building_id<=0))
                            numpy.logical_and(household.hh_type==17,household.building_id<=0)....0.0 sec
                        TM_17t = alldata.aggregate_all(numpy.logical_and(household.hh_type==17, household.building_id<=0)): completed...0.1 sec
                        TM_170 = paris.alldata.number_of_households_of_type_17_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs17=alldata.aggregate_all(household.hh_type==17)
                                        household.hh_type==17............0.5 sec
                                    _hhs17=alldata.aggregate_all(household.hh_type==17): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs17=alldata.aggregate_all(household.hh_type==17)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_170 = paris.alldata.number_of_households_of_type_17_lag6: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_18j0 = paris.building.number_of_households_of_type_18_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs18=building.aggregate(household.hh_type==18)
                                        household.hh_type==18............0.5 sec
                                    _hhs18=building.aggregate(household.hh_type==18): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs18=building.aggregate(household.hh_type==18)
                                        household.hh_type==18............0.0 sec
                                    _hhs18=building.aggregate(household.hh_type==18): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_18j0 = paris.building.number_of_households_of_type_18_lag6: completed...0.9 sec
                        TM_18t = alldata.aggregate_all(numpy.logical_and(household.hh_type==18, household.building_id<=0))
                            numpy.logical_and(household.hh_type==18,household.building_id<=0)....0.0 sec
                        TM_18t = alldata.aggregate_all(numpy.logical_and(household.hh_type==18, household.building_id<=0)): completed...0.1 sec
                        TM_180 = paris.alldata.number_of_households_of_type_18_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs18=alldata.aggregate_all(household.hh_type==18)
                                        household.hh_type==18............0.5 sec
                                    _hhs18=alldata.aggregate_all(household.hh_type==18): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs18=alldata.aggregate_all(household.hh_type==18)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_180 = paris.alldata.number_of_households_of_type_18_lag6: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_19j0 = paris.building.number_of_households_of_type_19_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs19=building.aggregate(household.hh_type==19)
                                        household.hh_type==19............0.5 sec
                                    _hhs19=building.aggregate(household.hh_type==19): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs19=building.aggregate(household.hh_type==19)
                                        household.hh_type==19............0.0 sec
                                    _hhs19=building.aggregate(household.hh_type==19): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_19j0 = paris.building.number_of_households_of_type_19_lag6: completed...1.0 sec
                        TM_19t = alldata.aggregate_all(numpy.logical_and(household.hh_type==19, household.building_id<=0))
                            numpy.logical_and(household.hh_type==19,household.building_id<=0)....0.0 sec
                        TM_19t = alldata.aggregate_all(numpy.logical_and(household.hh_type==19, household.building_id<=0)): completed...0.1 sec
                        TM_190 = paris.alldata.number_of_households_of_type_19_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs19=alldata.aggregate_all(household.hh_type==19)
                                        household.hh_type==19............0.5 sec
                                    _hhs19=alldata.aggregate_all(household.hh_type==19): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs19=alldata.aggregate_all(household.hh_type==19)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_190 = paris.alldata.number_of_households_of_type_19_lag6: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_20j0 = paris.building.number_of_households_of_type_20_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs20=building.aggregate(household.hh_type==20)
                                        household.hh_type==20............0.5 sec
                                    _hhs20=building.aggregate(household.hh_type==20): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs20=building.aggregate(household.hh_type==20)
                                        household.hh_type==20............0.0 sec
                                    _hhs20=building.aggregate(household.hh_type==20): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.1 sec
                        M_20j0 = paris.building.number_of_households_of_type_20_lag6: completed...1.1 sec
                        TM_20t = alldata.aggregate_all(numpy.logical_and(household.hh_type==20, household.building_id<=0))
                            numpy.logical_and(household.hh_type==20,household.building_id<=0)....0.0 sec
                        TM_20t = alldata.aggregate_all(numpy.logical_and(household.hh_type==20, household.building_id<=0)): completed...0.1 sec
                        TM_200 = paris.alldata.number_of_households_of_type_20_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs20=alldata.aggregate_all(household.hh_type==20)
                                        household.hh_type==20............0.5 sec
                                    _hhs20=alldata.aggregate_all(household.hh_type==20): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs20=alldata.aggregate_all(household.hh_type==20)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_200 = paris.alldata.number_of_households_of_type_20_lag6: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_21j0 = paris.building.number_of_households_of_type_21_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs21=building.aggregate(household.hh_type==21)
                                        household.hh_type==21............0.5 sec
                                    _hhs21=building.aggregate(household.hh_type==21): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs21=building.aggregate(household.hh_type==21)
                                        household.hh_type==21............0.0 sec
                                    _hhs21=building.aggregate(household.hh_type==21): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_21j0 = paris.building.number_of_households_of_type_21_lag6: completed...0.9 sec
                        TM_21t = alldata.aggregate_all(numpy.logical_and(household.hh_type==21, household.building_id<=0))
                            numpy.logical_and(household.hh_type==21,household.building_id<=0)....0.0 sec
                        TM_21t = alldata.aggregate_all(numpy.logical_and(household.hh_type==21, household.building_id<=0)): completed...0.1 sec
                        TM_210 = paris.alldata.number_of_households_of_type_21_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs21=alldata.aggregate_all(household.hh_type==21)
                                        household.hh_type==21............0.5 sec
                                    _hhs21=alldata.aggregate_all(household.hh_type==21): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs21=alldata.aggregate_all(household.hh_type==21)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_210 = paris.alldata.number_of_households_of_type_21_lag6: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_22j0 = paris.building.number_of_households_of_type_22_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs22=building.aggregate(household.hh_type==22)
                                        household.hh_type==22............0.5 sec
                                    _hhs22=building.aggregate(household.hh_type==22): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs22=building.aggregate(household.hh_type==22)
                                        household.hh_type==22............0.0 sec
                                    _hhs22=building.aggregate(household.hh_type==22): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_22j0 = paris.building.number_of_households_of_type_22_lag6: completed...0.9 sec
                        TM_22t = alldata.aggregate_all(numpy.logical_and(household.hh_type==22, household.building_id<=0))
                            numpy.logical_and(household.hh_type==22,household.building_id<=0)....0.0 sec
                        TM_22t = alldata.aggregate_all(numpy.logical_and(household.hh_type==22, household.building_id<=0)): completed...0.1 sec
                        TM_220 = paris.alldata.number_of_households_of_type_22_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs22=alldata.aggregate_all(household.hh_type==22)
                                        household.hh_type==22............0.5 sec
                                    _hhs22=alldata.aggregate_all(household.hh_type==22): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs22=alldata.aggregate_all(household.hh_type==22)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_220 = paris.alldata.number_of_households_of_type_22_lag6: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_23j0 = paris.building.number_of_households_of_type_23_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs23=building.aggregate(household.hh_type==23)
                                        household.hh_type==23............0.5 sec
                                    _hhs23=building.aggregate(household.hh_type==23): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs23=building.aggregate(household.hh_type==23)
                                        household.hh_type==23............0.0 sec
                                    _hhs23=building.aggregate(household.hh_type==23): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_23j0 = paris.building.number_of_households_of_type_23_lag6: completed...0.9 sec
                        TM_23t = alldata.aggregate_all(numpy.logical_and(household.hh_type==23, household.building_id<=0))
                            numpy.logical_and(household.hh_type==23,household.building_id<=0)....0.0 sec
                        TM_23t = alldata.aggregate_all(numpy.logical_and(household.hh_type==23, household.building_id<=0)): completed...0.1 sec
                        TM_230 = paris.alldata.number_of_households_of_type_23_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs23=alldata.aggregate_all(household.hh_type==23)
                                        household.hh_type==23............0.5 sec
                                    _hhs23=alldata.aggregate_all(household.hh_type==23): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs23=alldata.aggregate_all(household.hh_type==23)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_230 = paris.alldata.number_of_households_of_type_23_lag6: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_24j0 = paris.building.number_of_households_of_type_24_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs24=building.aggregate(household.hh_type==24)
                                        household.hh_type==24............0.5 sec
                                    _hhs24=building.aggregate(household.hh_type==24): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs24=building.aggregate(household.hh_type==24)
                                        household.hh_type==24............0.0 sec
                                    _hhs24=building.aggregate(household.hh_type==24): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_24j0 = paris.building.number_of_households_of_type_24_lag6: completed...0.9 sec
                        TM_24t = alldata.aggregate_all(numpy.logical_and(household.hh_type==24, household.building_id<=0))
                            numpy.logical_and(household.hh_type==24,household.building_id<=0)....0.0 sec
                        TM_24t = alldata.aggregate_all(numpy.logical_and(household.hh_type==24, household.building_id<=0)): completed...0.1 sec
                        TM_240 = paris.alldata.number_of_households_of_type_24_lag6
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs24=alldata.aggregate_all(household.hh_type==24)
                                        household.hh_type==24............0.5 sec
                                    _hhs24=alldata.aggregate_all(household.hh_type==24): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs24=alldata.aggregate_all(household.hh_type==24)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_240 = paris.alldata.number_of_households_of_type_24_lag6: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    CDGartClse = building.disaggregate(zone.cdgartclse)..0.1 sec
                    CDGartFar = building.disaggregate(zone.cdgartfar)....0.1 sec
                    CDGhighwClse = building.disaggregate(zone.cdghighwclse)....0.1 sec
                    CDGhighwFar = building.disaggregate(zone.cdghighwfar)....0.1 sec
                    CLCrPriceF_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.8 sec
                    CLCrPriceH_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.8 sec
                    CLCsPriceF = ln_bounded(building.price)..............0.0 sec
                    CLCsPriceF_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.8 sec
                    CLCsPriceH_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.8 sec
                    CLRrUnitsF = ln_bounded(building.residential_units)..0.0 sec
                    CLRrUnitsH = ln_bounded(building.residential_units)..0.0 sec
                    CLRsUnitsF = ln_bounded(building.residential_units)..0.0 sec
                    CLRsUnitsH = ln_bounded(building.residential_units)..0.0 sec
                    CNGsubwSP_HBRcar0 = (household.cars==0)*(building.disaggregate(zone.csubway9))....1.0 sec
                    CNGsubwSP_HBRcar1g = (household.cars>=1)*(building.disaggregate(zone.csubway9))....1.0 sec
                    CNGtrainSt_HBRcar0 = (household.cars==0)*(building.disaggregate(zone.ctrain9))....1.0 sec
                    CNGtrainSt_HBRcar1g = (household.cars>=1)*(building.disaggregate(zone.ctrain9))....1.0 sec
                    CNRsUnitsH = building.residential_units..............0.0 sec
                    CPBMedInc_HBRmedInc = (household.lincomepc<=10.3)*(household.lincomepc>9.9)*((building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.lincomepc<=9.9, intermediates = [building])- zone.aggregate(household.lincomepc>10.3, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum))))*100)
                        (zone.aggregate(building.number_of_agents(household),function=sum))
                            building.number_of_agents(household).........0.5 sec
                        (zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.5 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.lincomepc<=9.9,intermediates=[building])-zone.aggregate(household.lincomepc>10.3,intermediates=[building])
                            building.aggregate(household.autogenvar103)
                                household.lincomepc>10.3.................0.0 sec
                            building.aggregate(household.autogenvar103): completed...0.2 sec
                            building.aggregate(household.autogenvar109)
                                household.lincomepc<=9.9.................0.0 sec
                            building.aggregate(household.autogenvar109): completed...0.2 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.lincomepc<=9.9,intermediates=[building])-zone.aggregate(household.lincomepc>10.3,intermediates=[building]): completed...0.4 sec
                    CPBMedInc_HBRmedInc = (household.lincomepc<=10.3)*(household.lincomepc>9.9)*((building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.lincomepc<=9.9, intermediates = [building])- zone.aggregate(household.lincomepc>10.3, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum))))*100): completed...2.9 sec
                    CPBhghInc_HBRhghInc = (household.lincomepc>10.3)*(building.disaggregate(zone.aggregate(household.lincomepc>10.3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.lincomepc>10.3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPBhghInc_HBRhghInc = (household.lincomepc>10.3)*(building.disaggregate(zone.aggregate(household.lincomepc>10.3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.3 sec
                    CPBlowInc_HBRlowInc = (household.lincomepc<=9.9)*(building.disaggregate(zone.aggregate(household.lincomepc<=9.9, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.lincomepc<=9.9,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPBlowInc_HBRlowInc = (household.lincomepc<=9.9)*(building.disaggregate(zone.aggregate(household.lincomepc<=9.9, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.3 sec
                    CPRKfrgn_KBRfrgn = (household.race_id==1)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.race_id==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar55)
                                household.race_id==1.....................0.0 sec
                            building.aggregate(household.autogenvar55): completed...0.2 sec
                        zone.aggregate(household.race_id==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRKfrgn_KBRfrgn = (household.race_id==1)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRKfrgn_KBRnoFrgn = (household.race_id==0)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)....1.2 sec
                    CPRKmidAge_KBRmidAge = ((household.age_of_head>35) * (household.age_of_head<=55))*(building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.age_of_head>55, intermediates = [building])- zone.aggregate(household.age_of_head<=35, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.age_of_head>55,intermediates=[building])-zone.aggregate(household.age_of_head<=35,intermediates=[building])
                            building.aggregate(household.autogenvar60)
                                household.age_of_head>55.................0.0 sec
                            building.aggregate(household.autogenvar60): completed...0.2 sec
                            building.aggregate(household.autogenvar63)
                                household.age_of_head<=35................0.0 sec
                            building.aggregate(household.autogenvar63): completed...0.2 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.age_of_head>55,intermediates=[building])-zone.aggregate(household.age_of_head<=35,intermediates=[building]): completed...0.4 sec
                    CPRKmidAge_KBRmidAge = ((household.age_of_head>35) * (household.age_of_head<=55))*(building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.age_of_head>55, intermediates = [building])- zone.aggregate(household.age_of_head<=35, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...2.3 sec
                    CPRKold_KBRold = (household.age_of_head>55)*(building.disaggregate(zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.age_of_head>55,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPRKold_KBRold = (household.age_of_head>55)*(building.disaggregate(zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.2 sec
                    CPRKyng_KBRyng = (household.age_of_head<=35)*(building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPRKyng_KBRyng = (household.age_of_head<=35)*(building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.2 sec
                    CPRam0_HBRam0 = (household.workers==0)*(building.disaggregate(zone.aggregate(household.workers==0, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers==0,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar168)
                                household.workers==0.....................0.0 sec
                            building.aggregate(household.autogenvar168): completed...0.2 sec
                        zone.aggregate(household.workers==0,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam0_HBRam0 = (household.workers==0)*(building.disaggregate(zone.aggregate(household.workers==0, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRam1_HBRam1 = (household.workers==1)*(building.disaggregate(zone.aggregate(household.workers==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar67)
                                household.workers==1.....................0.0 sec
                            building.aggregate(household.autogenvar67): completed...0.2 sec
                        zone.aggregate(household.workers==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam1_HBRam1 = (household.workers==1)*(building.disaggregate(zone.aggregate(household.workers==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRam1g_HBRam1g = (household.workers>=1)*(building.disaggregate(zone.aggregate(household.workers>=1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers>=1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar385)
                                household.workers>=1.....................0.0 sec
                            building.aggregate(household.autogenvar385): completed...0.2 sec
                        zone.aggregate(household.workers>=1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam1g_HBRam1g = (household.workers>=1)*(building.disaggregate(zone.aggregate(household.workers>=1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRam2g_HBRam2g = (household.workers>=2)*(building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar71)
                                household.workers>=2.....................0.0 sec
                            building.aggregate(household.autogenvar71): completed...0.2 sec
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam2g_HBRam2g = (household.workers>=2)*(building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2))
                        zone.aggregate(establishment.employment,function=sum)....0.0 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2)): completed...0.0 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.2 sec
                    HBRsmeDept = (household.previous_dpt==75)*(building.disaggregate(zone.dept==75))+(household.previous_dpt==77)*(building.disaggregate(zone.dept==77))+(household.previous_dpt==78)*(building.disaggregate(zone.dept==78))+(household.previous_dpt==91)*(building.disaggregate(zone.dept==91))+(household.previous_dpt==92)*(building.disaggregate(zone.dept==92))+(household.previous_dpt==93)*(building.disaggregate(zone.dept==93))+(household.previous_dpt==94)*(building.disaggregate(zone.dept==94))+(household.previous_dpt==95)*(building.disaggregate(zone.dept==95))
                        zone.dept==77....................................0.0 sec
                        zone.dept==78....................................0.0 sec
                        zone.dept==95....................................0.0 sec
                        zone.dept==91....................................0.0 sec
                    HBRsmeDept = (household.previous_dpt==75)*(building.disaggregate(zone.dept==75))+(household.previous_dpt==77)*(building.disaggregate(zone.dept==77))+(household.previous_dpt==78)*(building.disaggregate(zone.dept==78))+(household.previous_dpt==91)*(building.disaggregate(zone.dept==91))+(household.previous_dpt==92)*(building.disaggregate(zone.dept==92))+(household.previous_dpt==93)*(building.disaggregate(zone.dept==93))+(household.previous_dpt==94)*(building.disaggregate(zone.dept==94))+(household.previous_dpt==95)*(building.disaggregate(zone.dept==95)): completed...3.2 sec
                    ctdtco_HBRcar0 = (household.cars==0)*(building.ctdtco)
                        building.disaggregate(zone.ctdtco)...............0.1 sec
                    ctdtco_HBRcar0 = (household.cars==0)*(building.ctdtco): completed...1.2 sec
                    ctdtco_HBRcar1g = (household.cars>=1)*(building.ctdtco)....1.1 sec
                    ctdvpo_HBRcar0 = (household.cars==0)*(building.ctdvpo)....1.1 sec
                    ctdvpo_HBRcar1g = (household.cars>=1)*(building.ctdvpo)....1.1 sec
                    Choice set size: 50
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 3 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 3 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                HLCM chunk 1 out of 1.: completed................3 min, 48.9 sec
            Running Household Location Choice Model (from urbansim.models.household_location_choice_model): completed...3 min, 49.2 sec
            Running Real Estate Price Model (from urbansim.models.real_estate_price_model): started on Tue Apr 10 05:48:33 2012
                ln_price=ln(building.price)..............................0.0 sec
                Total number of individuals: 6500
                REPM chunk 1 out of 1.: started on Tue Apr 10 05:48:33 2012
                    Number of agents in this chunk: 6500
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc)
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh))
                            zone.aggregate(building.number_of_agents(household),function=sum)
                                building.number_of_agents(household).....0.5 sec
                            zone.aggregate(building.number_of_agents(household),function=sum): completed...0.5 sec
                            zone_id = household.disaggregate(building.zone_id)....0.2 sec
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh)): completed...0.9 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc): completed...0.9 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum)))
                            building.aggregate(household.autogenvar60)...0.2 sec
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum))): completed...0.2 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100: completed...0.2 sec
                    CRItaxBati = building.disaggregate(zone.bati)........0.1 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.2 sec
                REPM chunk 1 out of 1.: completed........................1.5 sec
            Running Real Estate Price Model (from urbansim.models.real_estate_price_model): completed...1.5 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:48:35 2012
                household.disaggregate(zone.dept)........................0.2 sec
            Running opus_core.simple_model.SimpleModel: completed........0.2 sec
            Writing datasets to cache for year 2005: started on Tue Apr 10 05:48:35 2012
                Flushing building
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2005/buildings doesn't exist and is created
                Flushing sector
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2005/sectors doesn't exist and is created
                Flushing home_based_status
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2005/home_based_status doesn't exist and is created
                Flushing zone
                Flushing household
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2005/households doesn't exist and is created
                Flushing development_event_history
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2005/development_event_history doesn't exist and is created
                Flushing target_vacancy
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2005/target_vacancies doesn't exist and is created
                Flushing building_type
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2005/building_types doesn't exist and is created
                Flushing building_sqft_per_job
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2005/building_sqft_per_job doesn't exist and is created
                Flushing choice
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2005/choice_set doesn't exist and is created
                Flushing establishment
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2005/establishment doesn't exist and is created
                Flushing development_project
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2005/development_projects doesn't exist and is created
            Writing datasets to cache for year 2005: completed..........41.9 sec
        Simulate year 2005: completed.............................6 min, 4.8 sec
        Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/year_2005_log.txt
    Starting simulation for year 2005: completed..................6 min, 4.8 sec
Start simulation run: completed...................................6 min, 4.8 sec
Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
Running simulation for year 2005 in new process: completed........6 min, 5.2 sec
Triggering travelmodel
Leaving travelmodel
Running simulation for year 2006 in new process: started on Tue Apr 10 05:49:17 2012
    Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
    Invoking: /usr/bin/python /workspace/opus/src/opus_core/model_coordinators/model_system.py -r /tmp/tmpeoZvXP/resources.pickle --log-file-name run_multiprocess.log
Cache Directory set to: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16
Start simulation run: started on Tue Apr 10 05:49:18 2012
    random seed = (1069620870,)
    Starting simulation for year 2006: started on Tue Apr 10 05:49:18 2012
        Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
        Logging to file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/year_2006_log.txt
        Simulate year 2006: started on Tue Apr 10 05:49:18 2012
            Running Swap Datasets (from opus_core.models.swap_datasets): started on Tue Apr 10 05:49:18 2012....0.0 sec
            Running Swap Datasets (from opus_core.models.swap_datasets): started on Tue Apr 10 05:49:18 2012
                Backed up /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2006/zones to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2006/zones_ORIGINAL
                Renamed /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2006/zones_baseline to /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2006/zones
            Running Swap Datasets (from opus_core.models.swap_datasets): completed...0.0 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:49:18 2012
                numpy.clip(vpo, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:49:18 2012
                numpy.clip(tco, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:49:18 2012
                numpy.clip(tcd, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:49:18 2012
                numpy.clip(vpd, 0, 240)..................................0.1 sec
            Running opus_core.simple_model.SimpleModel: completed........0.1 sec
            Running Development Project Transition Model (from urbansim.models.real_estate_transition_model): started on Tue Apr 10 05:49:19 2012
                is_residential = building.disaggregate(building_type.is_residential)....0.1 sec
                is_residential = development_event_history.disaggregate(building_type.is_residential)....0.1 sec
                
                +----------------+-----------+-----------+------------+----------+
                | is_residential |   actual  |   target  | difference |  action  |
                +----------------+-----------+-----------+------------+----------+
                |       1        |  5148021  |  5197365  |   49344    | +49351.0 |
                |       0        | 382249150 | 354490883 | -27758267  |    0     |
                +----------------+-----------+-----------+------------+----------+
            Running Development Project Transition Model (from urbansim.models.real_estate_transition_model): completed...2.3 sec
            Running Non-Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): started on Tue Apr 10 05:49:21 2012
                is_non_residential = numpy.logical_not(urbansim_zone.development_project.is_residential)....0.0 sec
                Nothing to be done.
            Running Non-Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): completed...0.0 sec
            Running Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): started on Tue Apr 10 05:49:21 2012
                Total number of individuals: 4360
                DPLCM chunk 1 out of 1.: started on Tue Apr 10 05:49:21 2012
                    Number of agents in this chunk: 4360
                    developable_residential_units_capacity = clip_to_zero(building.residential_units_capacity - building.residential_units)....0.0 sec
                    Available capacity: 31644132 units.
                    (building.building_type_id==1)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==2)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==3)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    (building.building_type_id==4)*(urbansim_zone.building.developable_residential_units_capacity>0)....0.0 sec
                    CBAPC = (building.disaggregate(zone.dept==92))+(building.disaggregate(zone.dept==93))+(building.disaggregate(zone.dept==94))
                        zone.dept==94....................................0.1 sec
                        zone.dept==92....................................0.0 sec
                        zone.dept==93....................................0.0 sec
                    CBAPC = (building.disaggregate(zone.dept==92))+(building.disaggregate(zone.dept==93))+(building.disaggregate(zone.dept==94)): completed...0.1 sec
                    CBAnwCty = building.disaggregate(zone.cvilnouvel)....0.1 sec
                    CBAparis = building.disaggregate(zone.dept==75)
                        zone.dept==75....................................0.0 sec
                    CBAparis = building.disaggregate(zone.dept==75): completed...0.0 sec
                    CDGCBD = building.disaggregate(zone.cd_chatelet).....0.1 sec
                    CDGart = building.disaggregate(zone.cdistart)/1000...0.1 sec
                    CDGhighw = building.disaggregate(zone.cdisthwy)/1000....0.1 sec
                    CLCrPriceF = ln_bounded(building.price)..............0.1 sec
                    CLCrPriceH = ln_bounded(building.price)..............0.0 sec
                    CLCsPriceH = ln_bounded(building.price)..............0.0 sec
                    CLGarea = building.disaggregate(zone.ZLGarea)
                        ln_bounded(zone.careakm2)........................0.1 sec
                    CLGarea = building.disaggregate(zone.ZLGarea): completed...0.1 sec
                    CNGsubwSP = building.disaggregate(zone.csubway9).....0.1 sec
                    CNGtrainSt = building.disaggregate(zone.ctrain9).....0.1 sec
                    CPBhghInc = building.disaggregate(zone.ZPBhghInc)
                        100*(zone.aggregate(household.lincomepc>10.3)/(zone.CNRhh))
                            zone.aggregate(building.number_of_agents(household),function=sum)
                                building.number_of_agents(household).....0.6 sec
                            zone.aggregate(building.number_of_agents(household),function=sum): completed...0.6 sec
                            household.lincomepc>10.3.....................0.1 sec
                            zone_id = household.disaggregate(building.zone_id)....0.2 sec
                        100*(zone.aggregate(household.lincomepc>10.3)/(zone.CNRhh)): completed...1.2 sec
                    CPBhghInc = building.disaggregate(zone.ZPBhghInc): completed...1.2 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc)
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh))
                            household.lincomepc<=9.9.....................0.0 sec
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh)): completed...0.2 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc): completed...0.2 sec
                    CPInoise = building.disaggregate(zone.cnoise)........0.1 sec
                    CPOforest = building.disaggregate(zone.cpbois).......0.1 sec
                    CPOhlth = building.disaggregate(zone.cpequipem_sante)....0.1 sec
                    CPOpark = building.disaggregate(zone.cpparc_jardin)..0.1 sec
                    CPOsport = building.disaggregate(zone.cpsport).......0.1 sec
                    CPOwater = building.disaggregate(zone.cpeau).........0.1 sec
                    CPRKfrgn = building.disaggregate(zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))))*100
                        zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household)))
                            building.aggregate(household.race_id==1)
                                household.race_id==1.....................0.1 sec
                            building.aggregate(household.race_id==1): completed...0.3 sec
                        zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))): completed...0.3 sec
                    CPRKfrgn = building.disaggregate(zone.aggregate(building.aggregate(household.race_id==1))/(zone.aggregate(building.number_of_agents(household))))*100: completed...0.3 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum)))
                            building.aggregate(household.autogenvar60)
                                household.age_of_head>55.................0.1 sec
                            building.aggregate(household.autogenvar60): completed...0.3 sec
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum))): completed...0.3 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100: completed...0.3 sec
                    CPRKyng = building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar63)
                                household.age_of_head<=35................0.0 sec
                            building.aggregate(household.autogenvar63): completed...0.2 sec
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRKyng = building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.2 sec
                    CPRaft90 = building.disaggregate(zone.cpraft90)......0.1 sec
                    CPRam1 = building.disaggregate(zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.workers==1)
                                household.workers==1.....................0.1 sec
                            building.aggregate(household.workers==1): completed...0.3 sec
                        zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRam1 = building.disaggregate(zone.aggregate(building.aggregate(household.workers==1))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRam2g = building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar71)
                                household.workers>=2.....................0.0 sec
                            building.aggregate(household.autogenvar71): completed...0.2 sec
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRam2g = building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRam3g = building.disaggregate(zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.workers>=3)
                                household.workers>=3.....................0.0 sec
                            building.aggregate(household.workers>=3): completed...0.2 sec
                        zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam3g = building.disaggregate(zone.aggregate(building.aggregate(household.workers>=3))/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.2 sec
                    CPRbef15 = building.disaggregate(zone.cprbef15)......0.1 sec
                    CPRmemb2 = building.disaggregate(zone.aggregate(household.size==2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.size==2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar75)
                                household.size==2........................0.1 sec
                            building.aggregate(household.autogenvar75): completed...0.3 sec
                        zone.aggregate(household.size==2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRmemb2 = building.disaggregate(zone.aggregate(household.size==2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CPRmemb3g = building.disaggregate(zone.aggregate(household.size>=3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100
                        zone.aggregate(household.size>=3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar78)
                                household.size>=3........................0.0 sec
                            building.aggregate(household.autogenvar78): completed...0.3 sec
                        zone.aggregate(household.size>=3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.3 sec
                    CPRmemb3g = building.disaggregate(zone.aggregate(household.size>=3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100: completed...0.3 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2))
                        zone.aggregate(establishment.employment,function=sum)....0.1 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2)): completed...0.1 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.3 sec
                    ctdvpo = building.disaggregate(zone.ctdvpo)..........0.1 sec
                    Choice set size: 10
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                DPLCM chunk 1 out of 1.: completed.......................6.2 sec
            Running Residential Development Project Location Choice Model (from urbansim_zone.models.development_project_location_choice_model): completed...6.2 sec
            Running Add Development Projects Quantity to Buildings (from urbansim_zone.models.add_projects_to_buildings): started on Tue Apr 10 05:49:27 2012....0.2 sec
            emp_250 = (establishment.employment < 250).astype('i').......0.0 sec
            Running Establishment Disappearance Model (from paris.models.establishment_disappearance_model): started on Tue Apr 10 05:49:28 2012
                Total number of individuals: 502494
                EDM chunk 1 out of 1.: started on Tue Apr 10 05:49:28 2012
                    Number of agents in this chunk: 502494
                    EBADefense = establishment.disaggregate(building.CBADefense)
                        building.disaggregate(zone.insee==92062)+building.disaggregate(zone.insee==92026)+building.disaggregate(zone.insee==92050)
                            zone.insee==92050............................0.1 sec
                            zone.insee==92026............................0.0 sec
                            zone.insee==92062............................0.0 sec
                        building.disaggregate(zone.insee==92062)+building.disaggregate(zone.insee==92026)+building.disaggregate(zone.insee==92050): completed...0.1 sec
                    EBADefense = establishment.disaggregate(building.CBADefense): completed...0.2 sec
                    EBAnwCty = establishment.disaggregate(building.CBAnwCty)....0.1 sec
                    EBAparis = establishment.disaggregate(building.disaggregate(zone.dept==75))
                        building.disaggregate(zone.dept==75).............0.0 sec
                    EBAparis = establishment.disaggregate(building.disaggregate(zone.dept==75)): completed...0.1 sec
                    ECTDTcD = establishment.disaggregate(building.ctdtcd)
                        building.disaggregate(zone.ctdtcd)...............0.1 sec
                    ECTDTcD = establishment.disaggregate(building.ctdtcd): completed...0.2 sec
                    ECTDVpD = establishment.disaggregate(building.ctdvpd)
                        building.disaggregate(zone.ctdvpd)...............0.1 sec
                    ECTDVpD = establishment.disaggregate(building.ctdvpd): completed...0.2 sec
                    ELPB = establishment.disaggregate(building.CLPB)
                        building.disaggregate(zone.ZCLPB)
                            ln_bounded(zone.aggregate(building.price*(building.building_type_id==6), function=sum)/zone.aggregate((building.building_type_id==6), function=sum))
                                building.price*(building.building_type_id==6)....0.0 sec
                                (building.building_type_id==6)...........0.0 sec
                            ln_bounded(zone.aggregate(building.price*(building.building_type_id==6), function=sum)/zone.aggregate((building.building_type_id==6), function=sum)): completed...0.0 sec
                        building.disaggregate(zone.ZCLPB): completed.....0.0 sec
                    ELPB = establishment.disaggregate(building.CLPB): completed...0.1 sec
                    ENGsubwSP = establishment.disaggregate(building.CNGsubwSP)....0.1 sec
                    ENGtrainSt = establishment.disaggregate(building.CNGtrainSt)....0.1 sec
                    EPBhghInc = establishment.disaggregate(building.CPBhghInc)/100....0.1 sec
                    EPBlowInc = establishment.disaggregate(building.CPBlowInc)/100....0.1 sec
                    ERItaxPro = establishment.disaggregate(building.CRItaxPro)
                        building.disaggregate(zone.taxpro)...............0.1 sec
                    ERItaxPro = establishment.disaggregate(building.CRItaxPro): completed...0.2 sec
                    ERRdensPop = establishment.disaggregate(building.CRRdensPop)....0.1 sec
                    ERam0 = establishment.disaggregate(building.CPRam0)/100
                        building.disaggregate(zone.ZPRam0)
                            (zone.aggregate(building.aggregate(household.workers==0))/(zone.CNRhh))*100
                                building.aggregate(household.workers==0)
                                    household.workers==0.................0.0 sec
                                building.aggregate(household.workers==0): completed...0.3 sec
                            (zone.aggregate(building.aggregate(household.workers==0))/(zone.CNRhh))*100: completed...0.3 sec
                        building.disaggregate(zone.ZPRam0): completed....0.3 sec
                    ERam0 = establishment.disaggregate(building.CPRam0)/100: completed...0.3 sec
                    ETPNiv1 = establishment.disaggregate(building.CTPNiv1)
                        building.disaggregate(zone.ctpniv1)..............0.1 sec
                    ETPNiv1 = establishment.disaggregate(building.CTPNiv1): completed...0.2 sec
                    ETPNiv2 = establishment.disaggregate(building.CTPNiv2)
                        building.disaggregate(zone.ctpniv2)..............0.1 sec
                    ETPNiv2 = establishment.disaggregate(building.CTPNiv2): completed...0.2 sec
                    ETPNiv3 = establishment.disaggregate(building.CTPNiv3)
                        building.disaggregate(zone.ctpniv3)..............0.1 sec
                    ETPNiv3 = establishment.disaggregate(building.CTPNiv3): completed...0.2 sec
                    ETPNiv4 = establishment.disaggregate(building.CTPNiv4)
                        building.disaggregate(zone.ctpniv4)..............0.1 sec
                    ETPNiv4 = establishment.disaggregate(building.CTPNiv4): completed...0.2 sec
                    emp = establishment.employment.......................0.0 sec
                    w10=(establishment.employment_lag1 >= 10)*(establishment.employment_lag1 < 20)
                        opus_core.variables.VVV_lagLLL...................0.7 sec
                    w10=(establishment.employment_lag1 >= 10)*(establishment.employment_lag1 < 20): completed...0.7 sec
                    w100=(establishment.employment_lag1 >= 100)..........0.0 sec
                    w100slope=paris.establishment.w100*(establishment.employment_lag1 - 100)....0.0 sec
                    w10slope=paris.establishment.w10*(establishment.employment_lag1 - 10)....0.0 sec
                    w2=(establishment.employment_lag1 >= 2)*(establishment.employment_lag1 < 3)....0.0 sec
                    w20=(establishment.employment_lag1 >= 20)*(establishment.employment_lag1 < 50)....0.0 sec
                    w20slope=paris.establishment.w20*(establishment.employment_lag1 - 20)....0.0 sec
                    w3=(establishment.employment_lag1 >= 3)*(establishment.employment_lag1 < 6)....0.0 sec
                    w3slope=paris.establishment.w3*(establishment.employment_lag1 - 3)....0.0 sec
                    w50=(establishment.employment_lag1 >= 50)*(establishment.employment_lag1 < 100)....0.0 sec
                    w50slope=paris.establishment.w50*(establishment.employment_lag1 - 50)....0.0 sec
                    w6=(establishment.employment_lag1 >= 6)*(establishment.employment_lag1 < 10)....0.0 sec
                    w6slope=paris.establishment.w6*(establishment.employment_lag1 - 6)....0.0 sec
                    Choice set size: 2
                EDM chunk 1 out of 1.: completed.........................7.1 sec
            Running Establishment Disappearance Model (from paris.models.establishment_disappearance_model): completed...7.3 sec
            Running Establishment Evolution Model (from paris.models.establishment_evolution_model): started on Tue Apr 10 05:49:35 2012
                (paris.establishment.year_lag1 != paris.establishment.year)*(paris.establishment.emp_250_lag1)*(establishment.building_id>0)
                    opus_core.variables.VVV_lagLLL
                        paris.establishment.year.........................0.1 sec
                        paris.establishment.year.........................0.0 sec
                    opus_core.variables.VVV_lagLLL: completed............0.7 sec
                    opus_core.variables.VVV_lagLLL
                        emp_250 = (establishment.employment < 250).astype('i')....0.1 sec
                    opus_core.variables.VVV_lagLLL: completed............0.7 sec
                (paris.establishment.year_lag1 != paris.establishment.year)*(paris.establishment.emp_250_lag1)*(establishment.building_id>0): completed...1.5 sec
                paris.establishment.ln_emp_ratio
                    lnemp=ln_bounded(establishment.employment)...........0.0 sec
                    lnemp_pre=ln_bounded(establishment.employment_lag1)..0.0 sec
                paris.establishment.ln_emp_ratio: completed..............0.1 sec
                Total number of individuals: 502493
                EEM chunk 1 out of 1.: started on Tue Apr 10 05:49:37 2012
                    Number of agents in this chunk: 502493
                    EBAdefense_EBEwfb10_250 = establishment.EBADefense * establishment.EBEwfb10_250
                        (establishment.employment_lag1>9)*(establishment.employment_lag1<250)....0.0 sec
                    EBAdefense_EBEwfb10_250 = establishment.EBADefense * establishment.EBEwfb10_250: completed...0.0 sec
                    EBAdefense_EBEwfl10 = establishment.EBADefense * establishment.EBEwfl10
                        establishment.employment_lag1<10.................0.0 sec
                    EBAdefense_EBEwfl10 = establishment.EBADefense * establishment.EBEwfl10: completed...0.0 sec
                    EBAlimit_EBEwfb10_250 = establishment.ELimit * establishment.EBEwfb10_250
                        establishment.disaggregate(building.disaggregate(zone.limit))
                            building.disaggregate(zone.limit)............0.1 sec
                        establishment.disaggregate(building.disaggregate(zone.limit)): completed...0.2 sec
                    EBAlimit_EBEwfb10_250 = establishment.ELimit * establishment.EBEwfb10_250: completed...0.2 sec
                    EBAlimit_EBEwfl10 = establishment.ELimit * establishment.EBEwfl10....0.0 sec
                    EBAnwCty_EBEwfb10_250 = establishment.EBAnwCty * establishment.EBEwfb10_250....0.0 sec
                    EBAnwCty_EBEwfl10 = establishment.EBAnwCty * establishment.EBEwfl10....0.0 sec
                    EBAparis_EBEwfb10_250 = establishment.EBAparis * establishment.EBEwfb10_250....0.0 sec
                    EBAparis_EBEwfl10 = establishment.EBAparis * establishment.EBEwfl10....0.0 sec
                    EBLCprice_EBEwfb10_250 = establishment.ELPB * establishment.EBEwfb10_250....0.0 sec
                    EBLCprice_EBEwfl10 = establishment.ELPB * establishment.EBEwfl10....0.0 sec
                    ECNGsubw_EBEwfb10_250 = establishment.ENGsubwSP * establishment.EBEwfb10_250....0.0 sec
                    ECNGsubw_EBEwfl10 = establishment.ENGsubwSP * establishment.EBEwfl10....0.0 sec
                    ECNGtrain_EBEwfb10_250 = establishment.ENGtrainSt * establishment.EBEwfb10_250....0.0 sec
                    ECNGtrain_EBEwfl10 = establishment.ENGtrainSt * establishment.EBEwfl10....0.0 sec
                    ECPBhghInc_EBEwfb10_250 = establishment.EPBhghInc * establishment.EBEwfb10_250....0.0 sec
                    ECPBhghInc_EBEwfl10 = establishment.EPBhghInc * establishment.EBEwfl10....0.0 sec
                    ECPBlowInc_EBEwfl10 = establishment.EPBlowInc * establishment.EBEwfl10....0.0 sec
                    ECPR0Ac_EBEwfb10_250 = establishment.ERam0 * establishment.EBEwfb10_250....0.0 sec
                    ECPR0Ac_EBEwfl10 = establishment.ERam0 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE1_EBEwfb10_250 = establishment.ETPNiv1 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE1_EBEwfl10 = establishment.ETPNiv1 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE2_EBEwfb10_250 = establishment.ETPNiv2 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE2_EBEwfl10 = establishment.ETPNiv2 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE3_EBEwfb10_250 = establishment.ETPNiv3 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE3_EBEwfl10 = establishment.ETPNiv3 * establishment.EBEwfl10....0.0 sec
                    ECPRWnE4_EBEwfb10_250 = establishment.ETPNiv4 * establishment.EBEwfb10_250....0.0 sec
                    ECPRWnE4_EBEwfl10 = establishment.ETPNiv4 * establishment.EBEwfl10....0.0 sec
                    ECQRdstPop_EBEwfb10_250 = establishment.ERRdensPop * establishment.EBEwfb10_250....0.0 sec
                    ECQRdstPop_EBEwfl10 = establishment.ERRdensPop * establishment.EBEwfl10....0.0 sec
                    ECRFproTax_EBEwfb10_250 = establishment.ERItaxPro * establishment.EBEwfb10_250....0.0 sec
                    ECRFproTax_EBEwfl10 = establishment.ERItaxPro * establishment.EBEwfl10....0.0 sec
                    ECTDTcD_EBEwfb10_250 = establishment.ECTDTcD * establishment.EBEwfb10_250....0.0 sec
                    ECTDTcD_EBEwfl10 = establishment.ECTDTcD * establishment.EBEwfl10....0.0 sec
                    ECTDVpD_EBEwfb10_250 = establishment.ECTDVpD * establishment.EBEwfb10_250....0.0 sec
                    ECTDVpD_EBEwfl10 = establishment.ECTDVpD * establishment.EBEwfl10....0.0 sec
                EEM chunk 1 out of 1.: completed.........................1.6 sec
                rmse_ln_emp_ratio = numpy.sqrt(establishment.disaggregate(sector.aggregate(establishment._init_error_ln_emp_ratio**2, function=mean)))
                    sector.aggregate(establishment._init_error_ln_emp_ratio**2,function=mean)
                        establishment._init_error_ln_emp_ratio**2........0.0 sec
                    sector.aggregate(establishment._init_error_ln_emp_ratio**2,function=mean): completed...0.1 sec
                rmse_ln_emp_ratio = numpy.sqrt(establishment.disaggregate(sector.aggregate(establishment._init_error_ln_emp_ratio**2, function=mean))): completed...0.1 sec
            Running Establishment Evolution Model (from paris.models.establishment_evolution_model): completed...3.5 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:49:39 2012
                paris.establishment.emp_pred
                    emp_pre1=establishment.employment_lag1...............0.0 sec
                paris.establishment.emp_pred: completed..................0.0 sec
                (establishment.disappeared == 0)*(establishment.building_id>0)*(paris.establishment.year_lag1 != pari.establishment.year)*(paris.establishment.emp_250_lag1)....0.0 sec
            Running opus_core.simple_model.SimpleModel: completed........0.0 sec
            Running Establishment Reappearance Model (from paris.models.establishment_reappearance_model): started on Tue Apr 10 05:49:39 2012
                _actual_ = control_total.aggregate(establishment.employment)....0.0 sec

                (establishment.disappeared == 1)*(paris.establishment.emp_250)
                    emp_250 = (establishment.employment < 250).astype('i')....0.0 sec
                (establishment.disappeared == 1)*(paris.establishment.emp_250): completed...0.0 sec
                
                +-----------+-------------+--------+---------+------------+---------+--------+------+
                | sector_id | disappeared | actual |  target | difference |  action |   N    | note |
                +-----------+-------------+--------+---------+------------+---------+--------+------+
                |     1     |      0      | 33054  |  24811  |   -8243    |    0    |   0    |      |
                |     2     |      0      | 595011 |  586990 |   -8021    |    0    |   0    |      |
                |     3     |      0      | 169878 |  261663 |   91785    |  +88380 | +20478 |      |
                |     4     |      0      | 515839 |  698113 |   182274   | +182274 |   +2   |      |
                |     5     |      0      | 285346 |  328503 |   43157    |  +43157 |   +1   |      |
                |     6     |      0      | 249767 |  283662 |   33895    |  +32270 | +6324  |      |
                |     7     |      0      | 78575  |  114507 |   35932    |  +34000 | +10404 |      |
                |     8     |      0      | 849120 | 1108207 |   259087   | +234594 | +30073 |      |
                |     9     |      0      | 407077 |  526503 |   119426   | +104719 | +40451 |      |
                |     10    |      0      | 849519 |  906854 |   57335    |  +43298 | +11474 |      |
                |     11    |      0      | 608575 |  673432 |   64857    |  +48957 | +9412  |      |
                +-----------+-------------+--------+---------+------------+---------+--------+------+
                
            Running Establishment Reappearance Model (from paris.models.establishment_reappearance_model): completed...0.9 sec
            Running Establishment Transition Model (from paris.models.transition_model): started on Tue Apr 10 05:49:40 2012
                _actual_ = control_total.aggregate(establishment.employment)....0.0 sec
                WARNING: The are 7 eligible elements, less than the sample_size 64. Sample 7. 
                
                +-----------+-------------+---------+---------+------------+--------+------+
                | sector_id | disappeared |  actual |  target | difference | action | note |
                +-----------+-------------+---------+---------+------------+--------+------+
                |     1     |      0      |  33054  |  24811  |   -8243    | -2072  |  1   |
                |     2     |      0      |  595011 |  586990 |   -8021    | -8021  |      |
                |     3     |      0      |  258258 |  261663 |    3405    | +3405  |      |
                |     4     |      0      |  698113 |  698113 |     0      |   0    |      |
                |     5     |      0      |  328503 |  328503 |     0      |   0    |      |
                |     6     |      0      |  282037 |  283662 |    1625    | +1625  |      |
                |     7     |      0      |  112575 |  114507 |    1932    | +1932  |      |
                |     8     |      0      | 1083714 | 1108207 |   24493    | +24493 |      |
                |     9     |      0      |  511796 |  526503 |   14707    | +14707 |      |
                |     10    |      0      |  892817 |  906854 |   14037    | +14037 |      |
                |     11    |      0      |  657532 |  673432 |   15900    | +15900 |      |
                +-----------+-------------+---------+---------+------------+--------+------+
                
                ERROR: 
                1. We run out of eligible samples to match target 24811 exactly.
                
            Running Establishment Transition Model (from paris.models.transition_model): completed...1.0 sec
            Running Establishment Location Choice Model (from urbansim.models.agent_location_choice_model): started on Tue Apr 10 05:49:41 2012
                (establishment.disappeared==0)*(establishment.building_id <= 0)....0.0 sec
                (establishment.employment)*(establishment.disappeared==0)....0.0 sec
                Total number of individuals: 196527
                ELCM chunk 1 out of 1.: started on Tue Apr 10 05:49:41 2012
                    Number of agents in this chunk: 196527
                    vacant_non_home_based_job_spaces = clip_to_zero(urbansim_zone.building.total_non_home_based_job_spaces - paris.building.number_of_non_home_based_jobs)
                        total_non_home_based_job_spaces = numpy.round(safe_array_divide(building.non_residential_sqft, urbansim_zone.building.building_sqft_per_job))Warning: invalid value encountered in divide
....0.0 sec
                        number_of_non_home_based_jobs = building.aggregate((establishment.employment)*(establishment.disappeared==0))....0.0 sec
                        WARNING: Negative values detected in function/method ''
                        WARNING: Minimum: -43670.0. Negative values clipped to zero.
                    vacant_non_home_based_job_spaces = clip_to_zero(urbansim_zone.building.total_non_home_based_job_spaces - paris.building.number_of_non_home_based_jobs): completed...0.0 sec
                    Available capacity: 1010325.0 units.
                    CLEmpTot_lag1 = ln_bounded(building.disaggregate(zone.emptot_lag1))
                        zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0),intermediates=[building])
                            building.aggregate(establishment.autogenvar293)
                                establishment.employment_lag1*(establishment.disappeared_lag1==0)
                                    opus_core.variables.VVV_lagLLL.......0.7 sec
                                establishment.employment_lag1*(establishment.disappeared_lag1==0): completed...0.7 sec
                            building.aggregate(establishment.autogenvar293): completed...0.7 sec
                        zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0),intermediates=[building]): completed...0.7 sec
                    CLEmpTot_lag1 = ln_bounded(building.disaggregate(zone.emptot_lag1)): completed...0.7 sec
                    CLOActPotSt = building.disaggregate(zone.CLOActPotSt)
                        ln_bounded(zone.CNOActPotSt)
                            1.0*zone.project99st.........................0.1 sec
                        ln_bounded(zone.CNOActPotSt): completed..........0.1 sec
                    CLOActPotSt = building.disaggregate(zone.CLOActPotSt): completed...0.1 sec
                    CNRKold = building.disaggregate(zone.ZPRKold)
                        (zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.CNRhh))*100....0.0 sec
                    CNRKold = building.disaggregate(zone.ZPRKold): completed...0.0 sec
                    CNRKyng = building.disaggregate(zone.ZPRKyng)
                        (zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.CNRhh))*100....0.0 sec
                    CNRKyng = building.disaggregate(zone.ZPRKyng): completed...0.0 sec
                    CPGZFU = building.disaggregate(zone.czfu)............0.1 sec
                    CPRchld111g = building.disaggregate(zone.CPRchld111g)
                        100*((zone.aggregate(household.children11>=1, intermediates = [building]))/(zone.CNRhh))
                            building.aggregate(household.autogenvar300)
                                household.children11>=1..................0.1 sec
                            building.aggregate(household.autogenvar300): completed...0.3 sec
                        100*((zone.aggregate(household.children11>=1, intermediates = [building]))/(zone.CNRhh)): completed...0.3 sec
                    CPRchld111g = building.disaggregate(zone.CPRchld111g): completed...0.3 sec
                    CQEsec10dst_lag1 = building.disaggregate(zone.emp_s10_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s10_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 10),intermediates=[building])
                                building.aggregate(establishment.autogenvar303)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==10)
                                        opus_core.variables.VVV_lagLLL...0.7 sec
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==10): completed...0.7 sec
                                building.aggregate(establishment.autogenvar303): completed...0.7 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 10),intermediates=[building]): completed...0.7 sec
                        zone.emp_s10_lag1/(1000*zone.CNOActPotSt): completed...0.7 sec
                    CQEsec10dst_lag1 = building.disaggregate(zone.emp_s10_lag1/(1000*zone.CNOActPotSt)): completed...0.7 sec
                    CQEsec11dst_lag1 = building.disaggregate(zone.emp_s11_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s11_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 11),intermediates=[building])
                                building.aggregate(establishment.autogenvar306)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==11)....0.0 sec
                                building.aggregate(establishment.autogenvar306): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 11),intermediates=[building]): completed...0.0 sec
                        zone.emp_s11_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec11dst_lag1 = building.disaggregate(zone.emp_s11_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec2dst_lag1 = building.disaggregate(zone.emp_s2_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s2_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 2),intermediates=[building])
                                building.aggregate(establishment.autogenvar309)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==2)....0.0 sec
                                building.aggregate(establishment.autogenvar309): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 2),intermediates=[building]): completed...0.0 sec
                        zone.emp_s2_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec2dst_lag1 = building.disaggregate(zone.emp_s2_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec3dst_lag1 = building.disaggregate(zone.emp_s3_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s3_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 3),intermediates=[building])
                                building.aggregate(establishment.autogenvar312)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==3)....0.0 sec
                                building.aggregate(establishment.autogenvar312): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 3),intermediates=[building]): completed...0.0 sec
                        zone.emp_s3_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec3dst_lag1 = building.disaggregate(zone.emp_s3_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec4dst_lag1 = building.disaggregate(zone.emp_s4_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s4_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 4),intermediates=[building])
                                building.aggregate(establishment.autogenvar315)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==4)....0.0 sec
                                building.aggregate(establishment.autogenvar315): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 4),intermediates=[building]): completed...0.0 sec
                        zone.emp_s4_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec4dst_lag1 = building.disaggregate(zone.emp_s4_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec5dst_lag1 = building.disaggregate(zone.emp_s5_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s5_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 5),intermediates=[building])
                                building.aggregate(establishment.autogenvar318)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==5)....0.0 sec
                                building.aggregate(establishment.autogenvar318): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 5),intermediates=[building]): completed...0.0 sec
                        zone.emp_s5_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec5dst_lag1 = building.disaggregate(zone.emp_s5_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec6dst_lag1 = building.disaggregate(zone.emp_s6_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s6_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 6),intermediates=[building])
                                building.aggregate(establishment.autogenvar321)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==6)....0.0 sec
                                building.aggregate(establishment.autogenvar321): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 6),intermediates=[building]): completed...0.0 sec
                        zone.emp_s6_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec6dst_lag1 = building.disaggregate(zone.emp_s6_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec7dst_lag1 = building.disaggregate(zone.emp_s7_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s7_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 7),intermediates=[building])
                                building.aggregate(establishment.autogenvar324)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==7)....0.0 sec
                                building.aggregate(establishment.autogenvar324): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 7),intermediates=[building]): completed...0.0 sec
                        zone.emp_s7_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec7dst_lag1 = building.disaggregate(zone.emp_s7_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec8dst_lag1 = building.disaggregate(zone.emp_s8_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s8_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 8),intermediates=[building])
                                building.aggregate(establishment.autogenvar327)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==8)....0.0 sec
                                building.aggregate(establishment.autogenvar327): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 8),intermediates=[building]): completed...0.0 sec
                        zone.emp_s8_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec8dst_lag1 = building.disaggregate(zone.emp_s8_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    CQEsec9dst_lag1 = building.disaggregate(zone.emp_s9_lag1/(1000*zone.CNOActPotSt))
                        zone.emp_s9_lag1/(1000*zone.CNOActPotSt)
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 9),intermediates=[building])
                                building.aggregate(establishment.autogenvar330)
                                    establishment.employment_lag1*(establishment.disappeared_lag1==0)*(establishment.sector_id_lag1==9)....0.0 sec
                                building.aggregate(establishment.autogenvar330): completed...0.0 sec
                            zone.aggregate(establishment.employment_lag1*(establishment.disappeared_lag1 == 0)*(establishment.sector_id_lag1 == 9),intermediates=[building]): completed...0.0 sec
                        zone.emp_s9_lag1/(1000*zone.CNOActPotSt): completed...0.0 sec
                    CQEsec9dst_lag1 = building.disaggregate(zone.emp_s9_lag1/(1000*zone.CNOActPotSt)): completed...0.0 sec
                    biotech = paris.building.zgp_id==22
                        zgp_id = building.disaggregate(zone.zgp_id)......0.1 sec
                    biotech = paris.building.zgp_id==22: completed.......0.1 sec
                    clichy_montfermeil = paris.building.zgp_id==21.......0.0 sec
                    confluence = paris.building.zgp_id==23...............0.0 sec
                    descates = paris.building.zgp_id==24.................0.0 sec
                    la_defense = paris.building.zgp_id==25...............0.0 sec
                    le_bourget = paris.building.zgp_id==26...............0.0 sec
                    paris_pole = (paris.building.zgp_id>=27)*(paris.building.zgp_id<=46) ....0.0 sec
                    pleyel = paris.building.zgp_id==47...................0.0 sec
                    roissy = paris.building.zgp_id==48...................0.0 sec
                    saclay = paris.building.zgp_id==49...................0.0 sec
                    val_de_france_gonesse = paris.building.zgp_id==50....0.0 sec
                    Choice set size: 50
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                ELCM chunk 1 out of 1.: completed.......................45.8 sec
            Running Establishment Location Choice Model (from urbansim.models.agent_location_choice_model): completed...45.9 sec
            Running Household Transition Model (from urbansim.models.transition_model): started on Tue Apr 10 05:50:27 2012
                _actual_ = control_total.aggregate(household._one_)......0.3 sec
                
                +---------+---------+---------+------------+--------+------+
                | hh_type |  actual |  target | difference | action | note |
                +---------+---------+---------+------------+--------+------+
                |    1    |  185354 |  188017 |    2663    | +2663  |      |
                |    2    |  448896 |  455345 |    6449    | +6449  |      |
                |    3    |  34482  |  34977  |    495     |  +495  |      |
                |    4    | 1018417 | 1033048 |   14631    | +14631 |      |
                |    5    |  383455 |  389249 |    5794    | +5794  |      |
                |    6    |  332965 |  337996 |    5031    | +5031  |      |
                |    7    |  38982  |  39571  |    589     |  +589  |      |
                |    8    |  610257 |  619477 |    9220    | +9220  |      |
                |    9    |  218573 |  219323 |    750     |  +750  |      |
                |    10   |  142873 |  143364 |    491     |  +491  |      |
                |    11   |  30626  |  30731  |    105     |  +105  |      |
                |    12   |  324576 |  325690 |    1114    | +1114  |      |
                |    13   |  252948 |  254200 |    1252    | +1252  |      |
                |    14   |  107536 |  108068 |    532     |  +532  |      |
                |    15   |  29745  |  29892  |    147     |  +147  |      |
                |    16   |  234724 |  235886 |    1162    | +1162  |      |
                |    17   |  99452  |  100451 |    999     |  +999  |      |
                |    18   |  33606  |  33943  |    337     |  +337  |      |
                |    19   |  13801  |  13940  |    139     |  +139  |      |
                |    20   |  108366 |  109454 |    1088    | +1088  |      |
                |    21   |  37308  |  37305  |     -3     |   -3   |      |
                |    22   |  12077  |  12076  |     -1     |   -1   |      |
                |    23   |   7487  |   7486  |     -1     |   -1   |      |
                |    24   |  69872  |  69866  |     -6     |   -6   |      |
                +---------+---------+---------+------------+--------+------+
                
            Running Household Transition Model (from urbansim.models.transition_model): completed...9.8 sec
            Running Household Relocation Model (from urbansim.models.agent_relocation_model): started on Tue Apr 10 05:50:37 2012
                Number of agents sampled based on rates: 592401
                Number of total movers: 638609
            Running Household Relocation Model (from urbansim.models.agent_relocation_model): completed...4.6 sec
            Running Household Location Choice Model (from urbansim.models.household_location_choice_model): started on Tue Apr 10 05:50:41 2012
                Total number of individuals: 638609
                HLCM chunk 1 out of 1.: started on Tue Apr 10 05:50:42 2012
                    Number of agents in this chunk: 638609
                    vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households)
                        number_of_households = building.number_of_agents(household)....0.5 sec
                        WARNING: Negative values detected in function/method ''
                        WARNING: Minimum: -349.0. Negative values clipped to zero.
                    vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households): completed...0.5 sec
                    Available capacity: 1013835.0 units.
                    (urbansim_zone.building.vacant_residential_units>0)*(household.building_type_id==building.building_type_id)....0.0 sec
                    paris.building.M_DDDjt
                        M_1j0 = paris.building.number_of_households_of_type_1_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs1=building.aggregate(household.hh_type==1)
                                        household.hh_type==1.............0.5 sec
                                    _hhs1=building.aggregate(household.hh_type==1): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs1=building.aggregate(household.hh_type==1)
                                        household.hh_type==1.............0.0 sec
                                    _hhs1=building.aggregate(household.hh_type==1): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_1j0 = paris.building.number_of_households_of_type_1_lag7: completed...0.9 sec
                        TM_1t = alldata.aggregate_all(numpy.logical_and(household.hh_type==1, household.building_id<=0))
                            numpy.logical_and(household.hh_type==1,household.building_id<=0)....0.0 sec
                        TM_1t = alldata.aggregate_all(numpy.logical_and(household.hh_type==1, household.building_id<=0)): completed...0.1 sec
                        TM_10 = paris.alldata.number_of_households_of_type_1_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs1=alldata.aggregate_all(household.hh_type==1)
                                        household.hh_type==1.............0.5 sec
                                    _hhs1=alldata.aggregate_all(household.hh_type==1): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs1=alldata.aggregate_all(household.hh_type==1)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_10 = paris.alldata.number_of_households_of_type_1_lag7: completed...0.7 sec
                        V_ijt = urbansim_zone.building.vacant_residential_units....0.0 sec
                        V_ij0 = urbansim_zone.building.vacant_residential_units_lag7
                            opus_core.variables.VVV_lagLLL
                                vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households)
                                    number_of_households = building.number_of_agents(household)....1.1 sec
                                    WARNING: Negative values detected in function/method ''
                                    WARNING: Minimum: -22.0. Negative values clipped to zero.
                                vacant_residential_units = clip_to_zero(building.residential_units - urbansim_zone.building.number_of_households): completed...1.1 sec
                            opus_core.variables.VVV_lagLLL: completed....1.2 sec
                        V_ij0 = urbansim_zone.building.vacant_residential_units_lag7: completed...1.2 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................2.9 sec
                    paris.building.M_DDDjt
                        M_2j0 = paris.building.number_of_households_of_type_2_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs2=building.aggregate(household.hh_type==2)
                                        household.hh_type==2.............0.5 sec
                                    _hhs2=building.aggregate(household.hh_type==2): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs2=building.aggregate(household.hh_type==2)
                                        household.hh_type==2.............0.0 sec
                                    _hhs2=building.aggregate(household.hh_type==2): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_2j0 = paris.building.number_of_households_of_type_2_lag7: completed...1.0 sec
                        TM_2t = alldata.aggregate_all(numpy.logical_and(household.hh_type==2, household.building_id<=0))
                            numpy.logical_and(household.hh_type==2,household.building_id<=0)....0.0 sec
                        TM_2t = alldata.aggregate_all(numpy.logical_and(household.hh_type==2, household.building_id<=0)): completed...0.1 sec
                        TM_20 = paris.alldata.number_of_households_of_type_2_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs2=alldata.aggregate_all(household.hh_type==2)
                                        household.hh_type==2.............0.5 sec
                                    _hhs2=alldata.aggregate_all(household.hh_type==2): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs2=alldata.aggregate_all(household.hh_type==2)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_20 = paris.alldata.number_of_households_of_type_2_lag7: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_3j0 = paris.building.number_of_households_of_type_3_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs3=building.aggregate(household.hh_type==3)
                                        household.hh_type==3.............0.5 sec
                                    _hhs3=building.aggregate(household.hh_type==3): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs3=building.aggregate(household.hh_type==3)
                                        household.hh_type==3.............0.0 sec
                                    _hhs3=building.aggregate(household.hh_type==3): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_3j0 = paris.building.number_of_households_of_type_3_lag7: completed...1.0 sec
                        TM_3t = alldata.aggregate_all(numpy.logical_and(household.hh_type==3, household.building_id<=0))
                            numpy.logical_and(household.hh_type==3,household.building_id<=0)....0.0 sec
                        TM_3t = alldata.aggregate_all(numpy.logical_and(household.hh_type==3, household.building_id<=0)): completed...0.1 sec
                        TM_30 = paris.alldata.number_of_households_of_type_3_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs3=alldata.aggregate_all(household.hh_type==3)
                                        household.hh_type==3.............0.5 sec
                                    _hhs3=alldata.aggregate_all(household.hh_type==3): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs3=alldata.aggregate_all(household.hh_type==3)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_30 = paris.alldata.number_of_households_of_type_3_lag7: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_4j0 = paris.building.number_of_households_of_type_4_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs4=building.aggregate(household.hh_type==4)
                                        household.hh_type==4.............0.5 sec
                                    _hhs4=building.aggregate(household.hh_type==4): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs4=building.aggregate(household.hh_type==4)
                                        household.hh_type==4.............0.0 sec
                                    _hhs4=building.aggregate(household.hh_type==4): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_4j0 = paris.building.number_of_households_of_type_4_lag7: completed...1.0 sec
                        TM_4t = alldata.aggregate_all(numpy.logical_and(household.hh_type==4, household.building_id<=0))
                            numpy.logical_and(household.hh_type==4,household.building_id<=0)....0.0 sec
                        TM_4t = alldata.aggregate_all(numpy.logical_and(household.hh_type==4, household.building_id<=0)): completed...0.1 sec
                        TM_40 = paris.alldata.number_of_households_of_type_4_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs4=alldata.aggregate_all(household.hh_type==4)
                                        household.hh_type==4.............0.5 sec
                                    _hhs4=alldata.aggregate_all(household.hh_type==4): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs4=alldata.aggregate_all(household.hh_type==4)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_40 = paris.alldata.number_of_households_of_type_4_lag7: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_5j0 = paris.building.number_of_households_of_type_5_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs5=building.aggregate(household.hh_type==5)
                                        household.hh_type==5.............0.6 sec
                                    _hhs5=building.aggregate(household.hh_type==5): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs5=building.aggregate(household.hh_type==5)
                                        household.hh_type==5.............0.0 sec
                                    _hhs5=building.aggregate(household.hh_type==5): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_5j0 = paris.building.number_of_households_of_type_5_lag7: completed...1.0 sec
                        TM_5t = alldata.aggregate_all(numpy.logical_and(household.hh_type==5, household.building_id<=0))
                            numpy.logical_and(household.hh_type==5,household.building_id<=0)....0.0 sec
                        TM_5t = alldata.aggregate_all(numpy.logical_and(household.hh_type==5, household.building_id<=0)): completed...0.1 sec
                        TM_50 = paris.alldata.number_of_households_of_type_5_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs5=alldata.aggregate_all(household.hh_type==5)
                                        household.hh_type==5.............0.5 sec
                                    _hhs5=alldata.aggregate_all(household.hh_type==5): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs5=alldata.aggregate_all(household.hh_type==5)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_50 = paris.alldata.number_of_households_of_type_5_lag7: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_6j0 = paris.building.number_of_households_of_type_6_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs6=building.aggregate(household.hh_type==6)
                                        household.hh_type==6.............0.6 sec
                                    _hhs6=building.aggregate(household.hh_type==6): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs6=building.aggregate(household.hh_type==6)
                                        household.hh_type==6.............0.0 sec
                                    _hhs6=building.aggregate(household.hh_type==6): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_6j0 = paris.building.number_of_households_of_type_6_lag7: completed...1.0 sec
                        TM_6t = alldata.aggregate_all(numpy.logical_and(household.hh_type==6, household.building_id<=0))
                            numpy.logical_and(household.hh_type==6,household.building_id<=0)....0.0 sec
                        TM_6t = alldata.aggregate_all(numpy.logical_and(household.hh_type==6, household.building_id<=0)): completed...0.1 sec
                        TM_60 = paris.alldata.number_of_households_of_type_6_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs6=alldata.aggregate_all(household.hh_type==6)
                                        household.hh_type==6.............0.5 sec
                                    _hhs6=alldata.aggregate_all(household.hh_type==6): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs6=alldata.aggregate_all(household.hh_type==6)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_60 = paris.alldata.number_of_households_of_type_6_lag7: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_7j0 = paris.building.number_of_households_of_type_7_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs7=building.aggregate(household.hh_type==7)
                                        household.hh_type==7.............0.6 sec
                                    _hhs7=building.aggregate(household.hh_type==7): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs7=building.aggregate(household.hh_type==7)
                                        household.hh_type==7.............0.0 sec
                                    _hhs7=building.aggregate(household.hh_type==7): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.1 sec
                        M_7j0 = paris.building.number_of_households_of_type_7_lag7: completed...1.1 sec
                        TM_7t = alldata.aggregate_all(numpy.logical_and(household.hh_type==7, household.building_id<=0))
                            numpy.logical_and(household.hh_type==7,household.building_id<=0)....0.0 sec
                        TM_7t = alldata.aggregate_all(numpy.logical_and(household.hh_type==7, household.building_id<=0)): completed...0.1 sec
                        TM_70 = paris.alldata.number_of_households_of_type_7_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs7=alldata.aggregate_all(household.hh_type==7)
                                        household.hh_type==7.............0.6 sec
                                    _hhs7=alldata.aggregate_all(household.hh_type==7): completed...0.7 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs7=alldata.aggregate_all(household.hh_type==7)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_70 = paris.alldata.number_of_households_of_type_7_lag7: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................2.0 sec
                    paris.building.M_DDDjt
                        M_8j0 = paris.building.number_of_households_of_type_8_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs8=building.aggregate(household.hh_type==8)
                                        household.hh_type==8.............0.5 sec
                                    _hhs8=building.aggregate(household.hh_type==8): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs8=building.aggregate(household.hh_type==8)
                                        household.hh_type==8.............0.0 sec
                                    _hhs8=building.aggregate(household.hh_type==8): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_8j0 = paris.building.number_of_households_of_type_8_lag7: completed...1.0 sec
                        TM_8t = alldata.aggregate_all(numpy.logical_and(household.hh_type==8, household.building_id<=0))
                            numpy.logical_and(household.hh_type==8,household.building_id<=0)....0.0 sec
                        TM_8t = alldata.aggregate_all(numpy.logical_and(household.hh_type==8, household.building_id<=0)): completed...0.1 sec
                        TM_80 = paris.alldata.number_of_households_of_type_8_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs8=alldata.aggregate_all(household.hh_type==8)
                                        household.hh_type==8.............0.5 sec
                                    _hhs8=alldata.aggregate_all(household.hh_type==8): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs8=alldata.aggregate_all(household.hh_type==8)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_80 = paris.alldata.number_of_households_of_type_8_lag7: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_9j0 = paris.building.number_of_households_of_type_9_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs9=building.aggregate(household.hh_type==9)
                                        household.hh_type==9.............0.5 sec
                                    _hhs9=building.aggregate(household.hh_type==9): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs9=building.aggregate(household.hh_type==9)
                                        household.hh_type==9.............0.0 sec
                                    _hhs9=building.aggregate(household.hh_type==9): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_9j0 = paris.building.number_of_households_of_type_9_lag7: completed...0.9 sec
                        TM_9t = alldata.aggregate_all(numpy.logical_and(household.hh_type==9, household.building_id<=0))
                            numpy.logical_and(household.hh_type==9,household.building_id<=0)....0.0 sec
                        TM_9t = alldata.aggregate_all(numpy.logical_and(household.hh_type==9, household.building_id<=0)): completed...0.1 sec
                        TM_90 = paris.alldata.number_of_households_of_type_9_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs9=alldata.aggregate_all(household.hh_type==9)
                                        household.hh_type==9.............0.5 sec
                                    _hhs9=alldata.aggregate_all(household.hh_type==9): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs9=alldata.aggregate_all(household.hh_type==9)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_90 = paris.alldata.number_of_households_of_type_9_lag7: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_10j0 = paris.building.number_of_households_of_type_10_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs10=building.aggregate(household.hh_type==10)
                                        household.hh_type==10............0.5 sec
                                    _hhs10=building.aggregate(household.hh_type==10): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs10=building.aggregate(household.hh_type==10)
                                        household.hh_type==10............0.0 sec
                                    _hhs10=building.aggregate(household.hh_type==10): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_10j0 = paris.building.number_of_households_of_type_10_lag7: completed...0.9 sec
                        TM_10t = alldata.aggregate_all(numpy.logical_and(household.hh_type==10, household.building_id<=0))
                            numpy.logical_and(household.hh_type==10,household.building_id<=0)....0.0 sec
                        TM_10t = alldata.aggregate_all(numpy.logical_and(household.hh_type==10, household.building_id<=0)): completed...0.1 sec
                        TM_100 = paris.alldata.number_of_households_of_type_10_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs10=alldata.aggregate_all(household.hh_type==10)
                                        household.hh_type==10............0.5 sec
                                    _hhs10=alldata.aggregate_all(household.hh_type==10): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs10=alldata.aggregate_all(household.hh_type==10)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_100 = paris.alldata.number_of_households_of_type_10_lag7: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_11j0 = paris.building.number_of_households_of_type_11_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs11=building.aggregate(household.hh_type==11)
                                        household.hh_type==11............0.5 sec
                                    _hhs11=building.aggregate(household.hh_type==11): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs11=building.aggregate(household.hh_type==11)
                                        household.hh_type==11............0.0 sec
                                    _hhs11=building.aggregate(household.hh_type==11): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_11j0 = paris.building.number_of_households_of_type_11_lag7: completed...0.9 sec
                        TM_11t = alldata.aggregate_all(numpy.logical_and(household.hh_type==11, household.building_id<=0))
                            numpy.logical_and(household.hh_type==11,household.building_id<=0)....0.0 sec
                        TM_11t = alldata.aggregate_all(numpy.logical_and(household.hh_type==11, household.building_id<=0)): completed...0.1 sec
                        TM_110 = paris.alldata.number_of_households_of_type_11_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs11=alldata.aggregate_all(household.hh_type==11)
                                        household.hh_type==11............0.5 sec
                                    _hhs11=alldata.aggregate_all(household.hh_type==11): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs11=alldata.aggregate_all(household.hh_type==11)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_110 = paris.alldata.number_of_households_of_type_11_lag7: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_12j0 = paris.building.number_of_households_of_type_12_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs12=building.aggregate(household.hh_type==12)
                                        household.hh_type==12............0.5 sec
                                    _hhs12=building.aggregate(household.hh_type==12): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs12=building.aggregate(household.hh_type==12)
                                        household.hh_type==12............0.0 sec
                                    _hhs12=building.aggregate(household.hh_type==12): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_12j0 = paris.building.number_of_households_of_type_12_lag7: completed...1.0 sec
                        TM_12t = alldata.aggregate_all(numpy.logical_and(household.hh_type==12, household.building_id<=0))
                            numpy.logical_and(household.hh_type==12,household.building_id<=0)....0.0 sec
                        TM_12t = alldata.aggregate_all(numpy.logical_and(household.hh_type==12, household.building_id<=0)): completed...0.1 sec
                        TM_120 = paris.alldata.number_of_households_of_type_12_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs12=alldata.aggregate_all(household.hh_type==12)
                                        household.hh_type==12............0.5 sec
                                    _hhs12=alldata.aggregate_all(household.hh_type==12): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs12=alldata.aggregate_all(household.hh_type==12)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_120 = paris.alldata.number_of_households_of_type_12_lag7: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_13j0 = paris.building.number_of_households_of_type_13_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs13=building.aggregate(household.hh_type==13)
                                        household.hh_type==13............0.6 sec
                                    _hhs13=building.aggregate(household.hh_type==13): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs13=building.aggregate(household.hh_type==13)
                                        household.hh_type==13............0.0 sec
                                    _hhs13=building.aggregate(household.hh_type==13): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_13j0 = paris.building.number_of_households_of_type_13_lag7: completed...1.0 sec
                        TM_13t = alldata.aggregate_all(numpy.logical_and(household.hh_type==13, household.building_id<=0))
                            numpy.logical_and(household.hh_type==13,household.building_id<=0)....0.0 sec
                        TM_13t = alldata.aggregate_all(numpy.logical_and(household.hh_type==13, household.building_id<=0)): completed...0.1 sec
                        TM_130 = paris.alldata.number_of_households_of_type_13_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs13=alldata.aggregate_all(household.hh_type==13)
                                        household.hh_type==13............0.5 sec
                                    _hhs13=alldata.aggregate_all(household.hh_type==13): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs13=alldata.aggregate_all(household.hh_type==13)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_130 = paris.alldata.number_of_households_of_type_13_lag7: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................2.0 sec
                    paris.building.M_DDDjt
                        M_14j0 = paris.building.number_of_households_of_type_14_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs14=building.aggregate(household.hh_type==14)
                                        household.hh_type==14............0.5 sec
                                    _hhs14=building.aggregate(household.hh_type==14): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs14=building.aggregate(household.hh_type==14)
                                        household.hh_type==14............0.0 sec
                                    _hhs14=building.aggregate(household.hh_type==14): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_14j0 = paris.building.number_of_households_of_type_14_lag7: completed...1.0 sec
                        TM_14t = alldata.aggregate_all(numpy.logical_and(household.hh_type==14, household.building_id<=0))
                            numpy.logical_and(household.hh_type==14,household.building_id<=0)....0.0 sec
                        TM_14t = alldata.aggregate_all(numpy.logical_and(household.hh_type==14, household.building_id<=0)): completed...0.1 sec
                        TM_140 = paris.alldata.number_of_households_of_type_14_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs14=alldata.aggregate_all(household.hh_type==14)
                                        household.hh_type==14............0.5 sec
                                    _hhs14=alldata.aggregate_all(household.hh_type==14): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs14=alldata.aggregate_all(household.hh_type==14)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_140 = paris.alldata.number_of_households_of_type_14_lag7: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_15j0 = paris.building.number_of_households_of_type_15_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs15=building.aggregate(household.hh_type==15)
                                        household.hh_type==15............0.5 sec
                                    _hhs15=building.aggregate(household.hh_type==15): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs15=building.aggregate(household.hh_type==15)
                                        household.hh_type==15............0.0 sec
                                    _hhs15=building.aggregate(household.hh_type==15): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_15j0 = paris.building.number_of_households_of_type_15_lag7: completed...0.9 sec
                        TM_15t = alldata.aggregate_all(numpy.logical_and(household.hh_type==15, household.building_id<=0))
                            numpy.logical_and(household.hh_type==15,household.building_id<=0)....0.0 sec
                        TM_15t = alldata.aggregate_all(numpy.logical_and(household.hh_type==15, household.building_id<=0)): completed...0.1 sec
                        TM_150 = paris.alldata.number_of_households_of_type_15_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs15=alldata.aggregate_all(household.hh_type==15)
                                        household.hh_type==15............0.5 sec
                                    _hhs15=alldata.aggregate_all(household.hh_type==15): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs15=alldata.aggregate_all(household.hh_type==15)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_150 = paris.alldata.number_of_households_of_type_15_lag7: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_16j0 = paris.building.number_of_households_of_type_16_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs16=building.aggregate(household.hh_type==16)
                                        household.hh_type==16............0.5 sec
                                    _hhs16=building.aggregate(household.hh_type==16): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs16=building.aggregate(household.hh_type==16)
                                        household.hh_type==16............0.0 sec
                                    _hhs16=building.aggregate(household.hh_type==16): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_16j0 = paris.building.number_of_households_of_type_16_lag7: completed...0.9 sec
                        TM_16t = alldata.aggregate_all(numpy.logical_and(household.hh_type==16, household.building_id<=0))
                            numpy.logical_and(household.hh_type==16,household.building_id<=0)....0.0 sec
                        TM_16t = alldata.aggregate_all(numpy.logical_and(household.hh_type==16, household.building_id<=0)): completed...0.1 sec
                        TM_160 = paris.alldata.number_of_households_of_type_16_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs16=alldata.aggregate_all(household.hh_type==16)
                                        household.hh_type==16............0.5 sec
                                    _hhs16=alldata.aggregate_all(household.hh_type==16): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs16=alldata.aggregate_all(household.hh_type==16)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_160 = paris.alldata.number_of_households_of_type_16_lag7: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_17j0 = paris.building.number_of_households_of_type_17_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs17=building.aggregate(household.hh_type==17)
                                        household.hh_type==17............0.5 sec
                                    _hhs17=building.aggregate(household.hh_type==17): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs17=building.aggregate(household.hh_type==17)
                                        household.hh_type==17............0.0 sec
                                    _hhs17=building.aggregate(household.hh_type==17): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_17j0 = paris.building.number_of_households_of_type_17_lag7: completed...0.9 sec
                        TM_17t = alldata.aggregate_all(numpy.logical_and(household.hh_type==17, household.building_id<=0))
                            numpy.logical_and(household.hh_type==17,household.building_id<=0)....0.0 sec
                        TM_17t = alldata.aggregate_all(numpy.logical_and(household.hh_type==17, household.building_id<=0)): completed...0.1 sec
                        TM_170 = paris.alldata.number_of_households_of_type_17_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs17=alldata.aggregate_all(household.hh_type==17)
                                        household.hh_type==17............0.5 sec
                                    _hhs17=alldata.aggregate_all(household.hh_type==17): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs17=alldata.aggregate_all(household.hh_type==17)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_170 = paris.alldata.number_of_households_of_type_17_lag7: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_18j0 = paris.building.number_of_households_of_type_18_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs18=building.aggregate(household.hh_type==18)
                                        household.hh_type==18............0.5 sec
                                    _hhs18=building.aggregate(household.hh_type==18): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs18=building.aggregate(household.hh_type==18)
                                        household.hh_type==18............0.0 sec
                                    _hhs18=building.aggregate(household.hh_type==18): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_18j0 = paris.building.number_of_households_of_type_18_lag7: completed...0.9 sec
                        TM_18t = alldata.aggregate_all(numpy.logical_and(household.hh_type==18, household.building_id<=0))
                            numpy.logical_and(household.hh_type==18,household.building_id<=0)....0.0 sec
                        TM_18t = alldata.aggregate_all(numpy.logical_and(household.hh_type==18, household.building_id<=0)): completed...0.1 sec
                        TM_180 = paris.alldata.number_of_households_of_type_18_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs18=alldata.aggregate_all(household.hh_type==18)
                                        household.hh_type==18............0.5 sec
                                    _hhs18=alldata.aggregate_all(household.hh_type==18): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs18=alldata.aggregate_all(household.hh_type==18)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_180 = paris.alldata.number_of_households_of_type_18_lag7: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.7 sec
                    paris.building.M_DDDjt
                        M_19j0 = paris.building.number_of_households_of_type_19_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs19=building.aggregate(household.hh_type==19)
                                        household.hh_type==19............0.5 sec
                                    _hhs19=building.aggregate(household.hh_type==19): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs19=building.aggregate(household.hh_type==19)
                                        household.hh_type==19............0.0 sec
                                    _hhs19=building.aggregate(household.hh_type==19): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_19j0 = paris.building.number_of_households_of_type_19_lag7: completed...1.0 sec
                        TM_19t = alldata.aggregate_all(numpy.logical_and(household.hh_type==19, household.building_id<=0))
                            numpy.logical_and(household.hh_type==19,household.building_id<=0)....0.0 sec
                        TM_19t = alldata.aggregate_all(numpy.logical_and(household.hh_type==19, household.building_id<=0)): completed...0.1 sec
                        TM_190 = paris.alldata.number_of_households_of_type_19_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs19=alldata.aggregate_all(household.hh_type==19)
                                        household.hh_type==19............0.5 sec
                                    _hhs19=alldata.aggregate_all(household.hh_type==19): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs19=alldata.aggregate_all(household.hh_type==19)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.8 sec
                        TM_190 = paris.alldata.number_of_households_of_type_19_lag7: completed...0.8 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    paris.building.M_DDDjt
                        M_20j0 = paris.building.number_of_households_of_type_20_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs20=building.aggregate(household.hh_type==20)
                                        household.hh_type==20............0.5 sec
                                    _hhs20=building.aggregate(household.hh_type==20): completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.8 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs20=building.aggregate(household.hh_type==20)
                                        household.hh_type==20............0.0 sec
                                    _hhs20=building.aggregate(household.hh_type==20): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_20j0 = paris.building.number_of_households_of_type_20_lag7: completed...1.0 sec
                        TM_20t = alldata.aggregate_all(numpy.logical_and(household.hh_type==20, household.building_id<=0))
                            numpy.logical_and(household.hh_type==20,household.building_id<=0)....0.0 sec
                        TM_20t = alldata.aggregate_all(numpy.logical_and(household.hh_type==20, household.building_id<=0)): completed...0.1 sec
                        TM_200 = paris.alldata.number_of_households_of_type_20_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs20=alldata.aggregate_all(household.hh_type==20)
                                        household.hh_type==20............0.5 sec
                                    _hhs20=alldata.aggregate_all(household.hh_type==20): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs20=alldata.aggregate_all(household.hh_type==20)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_200 = paris.alldata.number_of_households_of_type_20_lag7: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.8 sec
                    paris.building.M_DDDjt
                        M_21j0 = paris.building.number_of_households_of_type_21_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs21=building.aggregate(household.hh_type==21)
                                        household.hh_type==21............0.5 sec
                                    _hhs21=building.aggregate(household.hh_type==21): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs21=building.aggregate(household.hh_type==21)
                                        household.hh_type==21............0.0 sec
                                    _hhs21=building.aggregate(household.hh_type==21): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_21j0 = paris.building.number_of_households_of_type_21_lag7: completed...0.9 sec
                        TM_21t = alldata.aggregate_all(numpy.logical_and(household.hh_type==21, household.building_id<=0))
                            numpy.logical_and(household.hh_type==21,household.building_id<=0)....0.0 sec
                        TM_21t = alldata.aggregate_all(numpy.logical_and(household.hh_type==21, household.building_id<=0)): completed...0.1 sec
                        TM_210 = paris.alldata.number_of_households_of_type_21_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs21=alldata.aggregate_all(household.hh_type==21)
                                        household.hh_type==21............0.5 sec
                                    _hhs21=alldata.aggregate_all(household.hh_type==21): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs21=alldata.aggregate_all(household.hh_type==21)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_210 = paris.alldata.number_of_households_of_type_21_lag7: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_22j0 = paris.building.number_of_households_of_type_22_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs22=building.aggregate(household.hh_type==22)
                                        household.hh_type==22............0.5 sec
                                    _hhs22=building.aggregate(household.hh_type==22): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs22=building.aggregate(household.hh_type==22)
                                        household.hh_type==22............0.0 sec
                                    _hhs22=building.aggregate(household.hh_type==22): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_22j0 = paris.building.number_of_households_of_type_22_lag7: completed...0.9 sec
                        TM_22t = alldata.aggregate_all(numpy.logical_and(household.hh_type==22, household.building_id<=0))
                            numpy.logical_and(household.hh_type==22,household.building_id<=0)....0.0 sec
                        TM_22t = alldata.aggregate_all(numpy.logical_and(household.hh_type==22, household.building_id<=0)): completed...0.1 sec
                        TM_220 = paris.alldata.number_of_households_of_type_22_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs22=alldata.aggregate_all(household.hh_type==22)
                                        household.hh_type==22............0.5 sec
                                    _hhs22=alldata.aggregate_all(household.hh_type==22): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs22=alldata.aggregate_all(household.hh_type==22)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.6 sec
                        TM_220 = paris.alldata.number_of_households_of_type_22_lag7: completed...0.6 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_23j0 = paris.building.number_of_households_of_type_23_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs23=building.aggregate(household.hh_type==23)
                                        household.hh_type==23............0.5 sec
                                    _hhs23=building.aggregate(household.hh_type==23): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs23=building.aggregate(household.hh_type==23)
                                        household.hh_type==23............0.0 sec
                                    _hhs23=building.aggregate(household.hh_type==23): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....0.9 sec
                        M_23j0 = paris.building.number_of_households_of_type_23_lag7: completed...0.9 sec
                        TM_23t = alldata.aggregate_all(numpy.logical_and(household.hh_type==23, household.building_id<=0))
                            numpy.logical_and(household.hh_type==23,household.building_id<=0)....0.0 sec
                        TM_23t = alldata.aggregate_all(numpy.logical_and(household.hh_type==23, household.building_id<=0)): completed...0.1 sec
                        TM_230 = paris.alldata.number_of_households_of_type_23_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs23=alldata.aggregate_all(household.hh_type==23)
                                        household.hh_type==23............0.5 sec
                                    _hhs23=alldata.aggregate_all(household.hh_type==23): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs23=alldata.aggregate_all(household.hh_type==23)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_230 = paris.alldata.number_of_households_of_type_23_lag7: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.6 sec
                    paris.building.M_DDDjt
                        M_24j0 = paris.building.number_of_households_of_type_24_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.building.number_of_households_of_type_DDD
                                    _hhs24=building.aggregate(household.hh_type==24)
                                        household.hh_type==24............0.5 sec
                                    _hhs24=building.aggregate(household.hh_type==24): completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.7 sec
                                paris.building.number_of_households_of_type_DDD
                                    _hhs24=building.aggregate(household.hh_type==24)
                                        household.hh_type==24............0.0 sec
                                    _hhs24=building.aggregate(household.hh_type==24): completed...0.2 sec
                                paris.building.number_of_households_of_type_DDD: completed...0.2 sec
                            opus_core.variables.VVV_lagLLL: completed....1.0 sec
                        M_24j0 = paris.building.number_of_households_of_type_24_lag7: completed...1.0 sec
                        TM_24t = alldata.aggregate_all(numpy.logical_and(household.hh_type==24, household.building_id<=0))
                            numpy.logical_and(household.hh_type==24,household.building_id<=0)....0.0 sec
                        TM_24t = alldata.aggregate_all(numpy.logical_and(household.hh_type==24, household.building_id<=0)): completed...0.1 sec
                        TM_240 = paris.alldata.number_of_households_of_type_24_lag7
                            opus_core.variables.VVV_lagLLL
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs24=alldata.aggregate_all(household.hh_type==24)
                                        household.hh_type==24............0.5 sec
                                    _hhs24=alldata.aggregate_all(household.hh_type==24): completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.6 sec
                                paris.alldata.number_of_households_of_type_DDD
                                    _hhs24=alldata.aggregate_all(household.hh_type==24)....0.1 sec
                                paris.alldata.number_of_households_of_type_DDD: completed...0.1 sec
                            opus_core.variables.VVV_lagLLL: completed....0.7 sec
                        TM_240 = paris.alldata.number_of_households_of_type_24_lag7: completed...0.7 sec
Warning: divide by zero encountered in divide
                    paris.building.M_DDDjt: completed....................1.9 sec
                    CDGartClse = building.disaggregate(zone.cdgartclse)..0.1 sec
                    CDGartFar = building.disaggregate(zone.cdgartfar)....0.1 sec
                    CDGhighwClse = building.disaggregate(zone.cdghighwclse)....0.1 sec
                    CDGhighwFar = building.disaggregate(zone.cdghighwfar)....0.1 sec
                    CLCrPriceF_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.8 sec
                    CLCrPriceH_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.8 sec
                    CLCsPriceF = ln_bounded(building.price)..............0.0 sec
                    CLCsPriceF_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.8 sec
                    CLCsPriceH_HRRinc = ln_bounded(building.price) * (household.lincomepc - 10.090716421)....2.8 sec
                    CLRrUnitsF = ln_bounded(building.residential_units)..0.0 sec
                    CLRrUnitsH = ln_bounded(building.residential_units)..0.0 sec
                    CLRsUnitsF = ln_bounded(building.residential_units)..0.0 sec
                    CLRsUnitsH = ln_bounded(building.residential_units)..0.0 sec
                    CNGsubwSP_HBRcar0 = (household.cars==0)*(building.disaggregate(zone.csubway9))....1.0 sec
                    CNGsubwSP_HBRcar1g = (household.cars>=1)*(building.disaggregate(zone.csubway9))....1.0 sec
                    CNGtrainSt_HBRcar0 = (household.cars==0)*(building.disaggregate(zone.ctrain9))....1.0 sec
                    CNGtrainSt_HBRcar1g = (household.cars>=1)*(building.disaggregate(zone.ctrain9))....1.0 sec
                    CNRsUnitsH = building.residential_units..............0.0 sec
                    CPBMedInc_HBRmedInc = (household.lincomepc<=10.3)*(household.lincomepc>9.9)*((building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.lincomepc<=9.9, intermediates = [building])- zone.aggregate(household.lincomepc>10.3, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum))))*100)
                        (zone.aggregate(building.number_of_agents(household),function=sum))
                            building.number_of_agents(household).........0.5 sec
                        (zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.5 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.lincomepc<=9.9,intermediates=[building])-zone.aggregate(household.lincomepc>10.3,intermediates=[building])
                            building.aggregate(household.autogenvar103)
                                household.lincomepc>10.3.................0.0 sec
                            building.aggregate(household.autogenvar103): completed...0.2 sec
                            building.aggregate(household.autogenvar109)
                                household.lincomepc<=9.9.................0.0 sec
                            building.aggregate(household.autogenvar109): completed...0.2 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.lincomepc<=9.9,intermediates=[building])-zone.aggregate(household.lincomepc>10.3,intermediates=[building]): completed...0.4 sec
                    CPBMedInc_HBRmedInc = (household.lincomepc<=10.3)*(household.lincomepc>9.9)*((building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.lincomepc<=9.9, intermediates = [building])- zone.aggregate(household.lincomepc>10.3, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum))))*100): completed...2.9 sec
                    CPBhghInc_HBRhghInc = (household.lincomepc>10.3)*(building.disaggregate(zone.aggregate(household.lincomepc>10.3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.lincomepc>10.3,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPBhghInc_HBRhghInc = (household.lincomepc>10.3)*(building.disaggregate(zone.aggregate(household.lincomepc>10.3, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.3 sec
                    CPBlowInc_HBRlowInc = (household.lincomepc<=9.9)*(building.disaggregate(zone.aggregate(household.lincomepc<=9.9, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.lincomepc<=9.9,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPBlowInc_HBRlowInc = (household.lincomepc<=9.9)*(building.disaggregate(zone.aggregate(household.lincomepc<=9.9, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.3 sec
                    CPRKfrgn_KBRfrgn = (household.race_id==1)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.race_id==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar55)
                                household.race_id==1.....................0.0 sec
                            building.aggregate(household.autogenvar55): completed...0.2 sec
                        zone.aggregate(household.race_id==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRKfrgn_KBRfrgn = (household.race_id==1)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRKfrgn_KBRnoFrgn = (household.race_id==0)*(building.disaggregate(zone.aggregate(household.race_id==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)....1.2 sec
                    CPRKmidAge_KBRmidAge = ((household.age_of_head>35) * (household.age_of_head<=55))*(building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.age_of_head>55, intermediates = [building])- zone.aggregate(household.age_of_head<=35, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.age_of_head>55,intermediates=[building])-zone.aggregate(household.age_of_head<=35,intermediates=[building])
                            building.aggregate(household.autogenvar60)
                                household.age_of_head>55.................0.0 sec
                            building.aggregate(household.autogenvar60): completed...0.2 sec
                            building.aggregate(household.autogenvar63)
                                household.age_of_head<=35................0.0 sec
                            building.aggregate(household.autogenvar63): completed...0.2 sec
                        zone.aggregate(building.number_of_agents(household),function=sum)-zone.aggregate(household.age_of_head>55,intermediates=[building])-zone.aggregate(household.age_of_head<=35,intermediates=[building]): completed...0.4 sec
                    CPRKmidAge_KBRmidAge = ((household.age_of_head>35) * (household.age_of_head<=55))*(building.disaggregate(zone.aggregate(building.number_of_agents(household),function=sum)- zone.aggregate(household.age_of_head>55, intermediates = [building])- zone.aggregate(household.age_of_head<=35, intermediates = [building]))/building.disaggregate((zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...2.2 sec
                    CPRKold_KBRold = (household.age_of_head>55)*(building.disaggregate(zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.age_of_head>55,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPRKold_KBRold = (household.age_of_head>55)*(building.disaggregate(zone.aggregate(household.age_of_head>55, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.2 sec
                    CPRKyng_KBRyng = (household.age_of_head<=35)*(building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.age_of_head<=35,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))....0.0 sec
                    CPRKyng_KBRyng = (household.age_of_head<=35)*(building.disaggregate(zone.aggregate(household.age_of_head<=35, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.2 sec
                    CPRam0_HBRam0 = (household.workers==0)*(building.disaggregate(zone.aggregate(household.workers==0, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers==0,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar168)
                                household.workers==0.....................0.0 sec
                            building.aggregate(household.autogenvar168): completed...0.2 sec
                        zone.aggregate(household.workers==0,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam0_HBRam0 = (household.workers==0)*(building.disaggregate(zone.aggregate(household.workers==0, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRam1_HBRam1 = (household.workers==1)*(building.disaggregate(zone.aggregate(household.workers==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar67)
                                household.workers==1.....................0.0 sec
                            building.aggregate(household.autogenvar67): completed...0.2 sec
                        zone.aggregate(household.workers==1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam1_HBRam1 = (household.workers==1)*(building.disaggregate(zone.aggregate(household.workers==1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRam1g_HBRam1g = (household.workers>=1)*(building.disaggregate(zone.aggregate(household.workers>=1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers>=1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar385)
                                household.workers>=1.....................0.0 sec
                            building.aggregate(household.autogenvar385): completed...0.2 sec
                        zone.aggregate(household.workers>=1,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam1g_HBRam1g = (household.workers>=1)*(building.disaggregate(zone.aggregate(household.workers>=1, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CPRam2g_HBRam2g = (household.workers>=2)*(building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100)
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum))
                            building.aggregate(household.autogenvar71)
                                household.workers>=2.....................0.0 sec
                            building.aggregate(household.autogenvar71): completed...0.2 sec
                        zone.aggregate(household.workers>=2,intermediates=[building])/(zone.aggregate(building.number_of_agents(household),function=sum)): completed...0.2 sec
                    CPRam2g_HBRam2g = (household.workers>=2)*(building.disaggregate(zone.aggregate(household.workers>=2, intermediates = [building])/(zone.aggregate(building.number_of_agents(household),function=sum)))*100): completed...1.4 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2))
                        zone.aggregate(establishment.employment,function=sum)....0.0 sec
                    CREdensEmp = building.disaggregate(zone.aggregate(establishment.employment,function=sum))/(1000*building.disaggregate(zone.careakm2)): completed...0.0 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.2 sec
                    HBRsmeDept = (household.previous_dpt==75)*(building.disaggregate(zone.dept==75))+(household.previous_dpt==77)*(building.disaggregate(zone.dept==77))+(household.previous_dpt==78)*(building.disaggregate(zone.dept==78))+(household.previous_dpt==91)*(building.disaggregate(zone.dept==91))+(household.previous_dpt==92)*(building.disaggregate(zone.dept==92))+(household.previous_dpt==93)*(building.disaggregate(zone.dept==93))+(household.previous_dpt==94)*(building.disaggregate(zone.dept==94))+(household.previous_dpt==95)*(building.disaggregate(zone.dept==95))
                        zone.dept==77....................................0.0 sec
                        zone.dept==78....................................0.0 sec
                        zone.dept==95....................................0.0 sec
                        zone.dept==91....................................0.0 sec
                    HBRsmeDept = (household.previous_dpt==75)*(building.disaggregate(zone.dept==75))+(household.previous_dpt==77)*(building.disaggregate(zone.dept==77))+(household.previous_dpt==78)*(building.disaggregate(zone.dept==78))+(household.previous_dpt==91)*(building.disaggregate(zone.dept==91))+(household.previous_dpt==92)*(building.disaggregate(zone.dept==92))+(household.previous_dpt==93)*(building.disaggregate(zone.dept==93))+(household.previous_dpt==94)*(building.disaggregate(zone.dept==94))+(household.previous_dpt==95)*(building.disaggregate(zone.dept==95)): completed...3.2 sec
                    ctdtco_HBRcar0 = (household.cars==0)*(building.ctdtco)
                        building.disaggregate(zone.ctdtco)...............0.1 sec
                    ctdtco_HBRcar0 = (household.cars==0)*(building.ctdtco): completed...1.2 sec
                    ctdtco_HBRcar1g = (household.cars>=1)*(building.ctdtco)....1.1 sec
                    ctdvpo_HBRcar0 = (household.cars==0)*(building.ctdvpo)....1.1 sec
                    ctdvpo_HBRcar1g = (household.cars>=1)*(building.ctdvpo)....1.1 sec
                    Choice set size: 50
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 3 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 3 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 2 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                    Number of unplaced agents: 0 (in 1 iterations)
                HLCM chunk 1 out of 1.: completed................3 min, 43.2 sec
            Running Household Location Choice Model (from urbansim.models.household_location_choice_model): completed...3 min, 43.5 sec
            Running Real Estate Price Model (from urbansim.models.real_estate_price_model): started on Tue Apr 10 05:54:25 2012
                ln_price=ln(building.price)..............................0.0 sec
                Total number of individuals: 6500
                REPM chunk 1 out of 1.: started on Tue Apr 10 05:54:25 2012
                    Number of agents in this chunk: 6500
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc)
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh))
                            zone.aggregate(building.number_of_agents(household),function=sum)
                                building.number_of_agents(household).....0.5 sec
                            zone.aggregate(building.number_of_agents(household),function=sum): completed...0.5 sec
                            zone_id = household.disaggregate(building.zone_id)....0.2 sec
                        100*(zone.aggregate(household.lincomepc<=9.9)/(zone.CNRhh)): completed...0.9 sec
                    CPBlowInc = building.disaggregate(zone.ZPBlowInc): completed...0.9 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum)))
                            building.aggregate(household.autogenvar60)...0.2 sec
                        safe_array_divide(zone.aggregate(household.age_of_head>55,intermediates=[building]),(zone.aggregate(building.number_of_agents(household),function=sum))): completed...0.2 sec
                    CPRKold = building.disaggregate(safe_array_divide(zone.aggregate(household.age_of_head>55, intermediates = [building]),(zone.aggregate(building.number_of_agents(household),function=sum))))*100: completed...0.2 sec
                    CRItaxBati = building.disaggregate(zone.bati)........0.1 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop)
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2)
                            building.aggregate(household.size)...........0.2 sec
                        zone.aggregate(household.size, intermediates = [building])/(1000*zone.careakm2): completed...0.2 sec
                    CRRdensPop = building.disaggregate(zone.ZRRdensPop): completed...0.2 sec
                REPM chunk 1 out of 1.: completed........................1.4 sec
            Running Real Estate Price Model (from urbansim.models.real_estate_price_model): completed...1.5 sec
            Running opus_core.simple_model.SimpleModel: started on Tue Apr 10 05:54:27 2012
                household.disaggregate(zone.dept)........................0.2 sec
            Running opus_core.simple_model.SimpleModel: completed........0.2 sec
            Writing datasets to cache for year 2006: started on Tue Apr 10 05:54:27 2012
                Flushing building
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2006/buildings doesn't exist and is created
                Flushing sector
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2006/sectors doesn't exist and is created
                Flushing home_based_status
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2006/home_based_status doesn't exist and is created
                Flushing zone
                Flushing household
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2006/households doesn't exist and is created
                Flushing development_event_history
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2006/development_event_history doesn't exist and is created
                Flushing target_vacancy
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2006/target_vacancies doesn't exist and is created
                Flushing building_type
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2006/building_types doesn't exist and is created
                Flushing building_sqft_per_job
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2006/building_sqft_per_job doesn't exist and is created
                Flushing choice
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2006/choice_set doesn't exist and is created
                Flushing establishment
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2006/establishment doesn't exist and is created
                Flushing development_project
                /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/2006/development_projects doesn't exist and is created
            Writing datasets to cache for year 2006: completed..........45.1 sec
        Simulate year 2006: completed............................5 min, 54.7 sec
        Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/year_2006_log.txt
    Starting simulation for year 2006: completed.................5 min, 54.7 sec
Start simulation run: completed..................................5 min, 54.7 sec
Closing log file: /workspace/opus/data/paris_zone/runs/run_124.2012_04_10_05_16/run_multiprocess.log
Running simulation for year 2006 in new process: completed.......5 min, 55.1 sec
Triggering travelmodel
Leaving travelmodel
Done running simulation for years 2000 thru 2006
