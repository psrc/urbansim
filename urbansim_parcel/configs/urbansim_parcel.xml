<opus_project>
    <xml_version>4.2.0-beta1</xml_version>
    <general>
        <description type="string">Refactored Default UrbanSim parcel project</description>
        <project_name hidden="True" type="string">urbansim_parcel</project_name>
        <parent type="file">urbansim/configs/urbansim.xml</parent>
        <expression_library type="dictionary">
            <constant dataset="parcel" source="built-in" type="variable_definition" use="model variable">constant</constant>
            <hwy200 dataset="parcel" source="expression" type="variable_definition" use="model variable">psrc.parcel.distance_to_highway_in_gridcell&lt;200</hwy200>
            <hwy600 dataset="parcel" source="expression" type="variable_definition" use="model variable">psrc.parcel.distance_to_highway_in_gridcell&lt;600</hwy600>
            <hwy1000 dataset="parcel" source="expression" type="variable_definition" use="model variable">psrc.parcel.distance_to_highway_in_gridcell&lt;1000</hwy1000>
            <hwy2000 dataset="parcel" source="expression" type="variable_definition" use="model variable">psrc.parcel.distance_to_highway_in_gridcell&lt;2000</hwy2000>
            <art300 dataset="parcel" source="expression" type="variable_definition" use="model variable">psrc.parcel.distance_to_arterial_in_gridcell&lt;300</art300>
            <art600 dataset="parcel" source="expression" type="variable_definition" use="model variable">psrc.parcel.distance_to_arterial_in_gridcell&lt;600</art600>
            <ln_bldgage dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(parcel.aggregate(urbansim_parcel.building.age_masked, function=mean))).astype(float32)</ln_bldgage>
            <lnsqft dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(urbansim_parcel.parcel.building_sqft)).astype(float32)</lnsqft>
            <lnsqftunit dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(urbansim_parcel.parcel.building_sqft_per_unit)).astype(float32)</lnsqftunit>
            <lnlotsqft dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(parcel.parcel_sqft)).astype(float32)</lnlotsqft>
            <lnunits dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(urbansim_parcel.parcel.residential_units)).astype(float32)</lnunits>
            <lnlotsqftunit dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(urbansim_parcel.parcel.parcel_sqft_per_unit)).astype(float32)</lnlotsqftunit>
            <far dataset="parcel" source="expression" type="variable_definition" use="model variable">(urbansim_parcel.parcel.building_sqft/(parcel.parcel_sqft).astype(float32)).astype(float32)</far>
            <ln_invfar dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(parcel.parcel_sqft/(urbansim_parcel.parcel.building_sqft).astype(float32))).astype(float32)</ln_invfar>
            <lngcdacbd dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(parcel.disaggregate(psrc.zone.generalized_cost_hbw_am_drive_alone_to_cbd))).astype(float32)</lngcdacbd>
            <blngcdacbd dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(building.disaggregate(psrc.zone.generalized_cost_hbw_am_drive_alone_to_cbd))).astype(float32)</blngcdacbd>
            <lnemp30da dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(parcel.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))).astype(float32)</lnemp30da>
            <lnemp20da dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(parcel.disaggregate(urbansim_parcel.zone.employment_within_20_minutes_travel_time_hbw_am_drive_alone))).astype(float32)</lnemp20da>
            <lnemp10da dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(parcel.disaggregate(urbansim_parcel.zone.employment_within_10_minutes_travel_time_hbw_am_drive_alone))).astype(float32)</lnemp10da>
            <lnemp30tw dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(parcel.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_transit_walk))).astype(float32)</lnemp30tw>
            <lnemp20tw dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(parcel.disaggregate(urbansim_parcel.zone.employment_within_20_minutes_travel_time_hbw_am_transit_walk))).astype(float32)</lnemp20tw>
            <lnemp10wa dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(parcel.disaggregate(urbansim_parcel.zone.employment_within_10_minutes_travel_time_hbw_am_walk))).astype(float32)</lnemp10wa>
            <lnemp20wa dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(parcel.disaggregate(urbansim_parcel.zone.employment_within_20_minutes_travel_time_hbw_am_walk))).astype(float32)</lnemp20wa>
            <lnavginc dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(parcel.disaggregate(urbansim_parcel.zone.average_income))).astype(float32)</lnavginc>
            <lnempden dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(parcel.disaggregate(urbansim_parcel.zone.number_of_jobs_per_acre))).astype(float32)</lnempden>
            <lnpopden dataset="parcel" source="expression" type="variable_definition" use="model variable">(ln(parcel.disaggregate(urbansim_parcel.zone.population_per_acre))).astype(float32)</lnpopden>
            <inugb dataset="parcel" source="expression" type="variable_definition" use="model variable">parcel.is_inside_urban_growth_boundary==True</inugb>
            <hbwavgtmda dataset="parcel" source="expression" type="variable_definition" use="model variable">parcel.disaggregate(psrc.zone.trip_weighted_average_time_hbw_from_home_am_drive_alone)</hbwavgtmda>
            <is_pre_1940 dataset="parcel" source="expression" type="variable_definition" use="model variable">parcel.aggregate(numpy.ma.masked_where(urbansim_parcel.building.has_valid_year_built == 0, building.year_built),function=mean) &lt; 1940</is_pre_1940>
            <existing_units dataset="parcel" source="Python class" type="variable_definition" use="model variable">urbansim_parcel.parcel.existing_units</existing_units>
            <units_occupied dataset="parcel" source="Python class" type="variable_definition" use="model variable">urbansim_parcel.parcel.units_occupied</units_occupied>
            <ln_bldage dataset="building" source="expression" type="variable_definition" use="model variable">ln(urbansim_parcel.building.age_masked)</ln_bldage>
            <avg_unit_price dataset="building" source="expression" type="variable_definition" use="model variable">building.disaggregate(zone.aggregate(urbansim_parcel.building.unit_price,function=mean,intermediates=[parcel]))</avg_unit_price>
            <distance_to_art dataset="building" source="expression" type="variable_definition" use="model variable">building.disaggregate(psrc.parcel.distance_to_arterial_in_gridcell)</distance_to_art>
            <distance_to_highway dataset="building" source="expression" type="variable_definition" use="model variable">building.disaggregate(psrc.parcel.distance_to_highway_in_gridcell)</distance_to_highway>
            <is_commercial_building dataset="building" source="Python class" type="variable_definition" use="model variable">urbansim.building.is_commercial</is_commercial_building>
            <is_industrial_building dataset="building" source="Python class" type="variable_definition" use="model variable">urbansim.building.is_industrial</is_industrial_building>
            <is_mfh_building dataset="building" source="Python class" type="variable_definition" use="model variable">urbansim.building.is_multi_family_residential</is_mfh_building>
            <is_mixed_use_building dataset="building" source="Python class" type="variable_definition" use="model variable">urbansim.building.is_mixed_use</is_mixed_use_building>
            <is_near_art dataset="building" source="expression" type="variable_definition" use="model variable">building.disaggregate(psrc.parcel.is_near_arterial_in_gridcell)</is_near_art>
            <is_near_highway dataset="building" source="expression" type="variable_definition" use="model variable">building.disaggregate(psrc.parcel.is_near_highway_in_gridcell)</is_near_highway>
            <is_office_building dataset="building" source="Python class" type="variable_definition" use="model variable">urbansim.building.is_office</is_office_building>
            <is_sfh_building dataset="building" source="Python class" type="variable_definition" use="model variable">urbansim.building.is_single_family_residential</is_sfh_building>
            <is_unit_price_le_0 dataset="building" source="expression" type="variable_definition" use="model variable">urbansim_parcel.building.unit_price &lt;= 0</is_unit_price_le_0>
            <ln_bldage dataset="building" source="expression" type="variable_definition" use="model variable">ln(urbansim_parcel.building.age_masked)</ln_bldage>
            <ln_empden_zone_1 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_1)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_1>
            <ln_empden_zone_10 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_10)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_10>
            <ln_empden_zone_11 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_11)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_11>
            <ln_empden_zone_12 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_12)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_12>
            <ln_empden_zone_13 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_13)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_13>
            <ln_empden_zone_14 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_14)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_14>
            <ln_empden_zone_15 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_15)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_15>
            <ln_empden_zone_16 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_16)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_16>
            <ln_empden_zone_17 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_17)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_17>
            <ln_empden_zone_18 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_18)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_18>
            <ln_empden_zone_19 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_19)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_19>
            <ln_empden_zone_2 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_2)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_2>
            <ln_empden_zone_3 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_3)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_3>
            <ln_empden_zone_4 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_4)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_4>
            <ln_empden_zone_5 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_5)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_5>
            <ln_empden_zone_6 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_6)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_6>
            <ln_empden_zone_7 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_7)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_7>
            <ln_empden_zone_8 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_8)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_8>
            <ln_empden_zone_9 dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_9)/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_9>
            <ln_empden_zone_retail dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(zone.aggregate(urbansim.job.is_in_employment_sector_group_retail))/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_retail>
            <ln_empden_zone_service dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(zone.aggregate(urbansim.job.is_in_employment_sector_group_service))/building.disaggregate(zone.aggregate(parcel.parcel_sqft)/43560.0))</ln_empden_zone_service>
            <ln_job_sqft_x_bldg_sqft_per_job dataset="building" source="expression" type="variable_definition" use="model variable">ln(urbansim_parcel.job.sqft_imputed * urbansim_parcel.building.building_sqft_per_job)</ln_job_sqft_x_bldg_sqft_per_job>
            <ln_unit_price_trunc dataset="building" source="expression" type="variable_definition" use="model variable">ln(where(building.disaggregate(urbansim_parcel.parcel.unit_price&lt;1500),where(building.disaggregate(urbansim_parcel.parcel.unit_price&lt;1),1,building.disaggregate(urbansim_parcel.parcel.unit_price)),1500))</ln_unit_price_trunc>
            <lnemp10tw dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(psrc.zone.employment_within_10_minutes_travel_time_hbw_am_walk))</lnemp10tw>
            <lngcdabell dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(psrc.zone.generalized_cost_hbw_am_drive_alone_to_bellevue_cbd))</lngcdabell>
            <lnmp30da dataset="building" source="expression" type="variable_definition" use="model variable">ln(building.disaggregate(psrc.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</lnmp30da>
            <unit_price dataset="building" source="Python class" type="variable_definition" use="both">urbansim_parcel.building.unit_price</unit_price>
            <has_children_x_is_single_family_residential dataset="household_x_building" source="expression" type="variable_definition" use="model variable">(household.children &gt; 0) * urbansim.building.is_single_family_residential</has_children_x_is_single_family_residential>
            <has_children_x_percent_households_with_children_within_walking_distance dataset="household_x_building" source="expression" type="variable_definition" use="model variable">(household.children &gt; 0) * building.disaggregate(psrc_parcel.parcel.percent_households_with_children_within_walking_distance)</has_children_x_percent_households_with_children_within_walking_distance>
            <is_high_income_x_ln_sqft_per_unit dataset="household_x_building" source="expression" type="variable_definition" use="model variable">urbansim.household.is_high_income * ln(psrc_parcel.building.sqft_per_unit)</is_high_income_x_ln_sqft_per_unit>
            <is_young_x_percent_young_households_within_walking_distance dataset="household_x_building" source="expression" type="variable_definition" use="model variable">urbansim.household.is_young * building.disaggregate(psrc_parcel.parcel.percent_young_households_within_walking_distance)</is_young_x_percent_young_households_within_walking_distance>
            <ln_residential_units dataset="building" source="expression" type="variable_definition" use="model variable">ln_bounded(building.residential_units)</ln_residential_units>
        </expression_library>
        <advanced type="category">
            <dataset_pool_configuration hidden="True" type="class">
                <Class_name type="string">DatasetPoolConfiguration</Class_name>
                <Class_path type="string">opus_core.configurations.dataset_pool_configuration</Class_path>
                <package_order type="list">['urbansim_parcel','urbansim', 'opus_core']</package_order>
            </dataset_pool_configuration>
        </advanced>
        <available_datasets type="list">['parcel','building','household_x_building','zone','faz','large_area','gridcell','city','county','alldata']</available_datasets>
    </general>
    <data_manager>
        <Tool_Library setexpanded="True" type="tool_library">
            <tool_path hidden="True" type="tool_path">data_manager.run.tools</tool_path>
            <opus_tools setexpanded="True" type="tool_group">
                <make_buildout_indicators type="tool_file">
                    <name type="tool_name">make_buildout_indicators</name>
                    <params type="param_template">
                        <output_type>
                            <required choices="Required|Optional" type="string">Required</required>
                            <type choices="string" type="string">string</type>
                            <default type="string"/>
                        </output_type>
                        <storage_location>
                            <required choices="Required|Optional" type="string">Required</required>
                            <type choices="dir_path" type="string">dir_path</type>
                            <default type="dir_path"/>
                        </storage_location>
                        <cache_directory>
                            <required choices="Required|Optional" type="string">Required</required>
                            <type choices="dir_path" type="string">dir_path</type>
                            <default type="dir_path"/>
                        </cache_directory>
                        <year>
                            <required choices="Required|Optional" type="string">Required</required>
                            <type choices="string" type="string">string</type>
                            <default type="string"/>
                        </year>
                    </params>
                </make_buildout_indicators>
            </opus_tools>
        </Tool_Library>
    </data_manager>
    <model_manager>
        <model_system>
            <estimation_config type="dictionary">
                <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
                    <building choices="Load|Skip" copyable="True" followers="my_dataset" type="dataset">Load</building>
                    <household choices="Load|Skip" copyable="True" followers="my_dataset" type="dataset">Load</household>
                    <job choices="Load|Skip" copyable="True" followers="my_dataset" type="dataset">Load</job>
                    <parcel choices="Load|Skip" copyable="True" type="dataset">Load</parcel>
                </datasets_to_preload>
            </estimation_config>
            <refinement_model copyable="True" type="model">
                <structure>
                    <import hidden="True" type="dictionary">
                        <module type="string">urbansim.models.refinement_model</module>
                        <classname>RefinementModel</classname>
                    </import>
                    <init type="dictionary">
                        <name type="string">RefinementModel</name>
                    </init>
                    <prepare_for_run type="dictionary">
                        <name hidden="True" type="string">prepare_for_run</name>
                        <refinement_dataset_name type="quoted_string">refinement            </refinement_dataset_name>
                        <refinement_storage type="string">base_cache_storage            </refinement_storage>
                        <refinement_table_name type="quoted_string">refinements            </refinement_table_name>
                        <output hidden="True" type="string">refinement</output>
                    </prepare_for_run>
                    <run type="dictionary">
                        <name hidden="True" type="string">run</name>
                        <refinement_dataset type="string">refinement            </refinement_dataset>
                        <dataset_pool hidden="True" type="string">dataset_pool            </dataset_pool>
                    </run>
                </structure>
                <specification/>
            </refinement_model>
            <real_estate_price_model copyable="True" type="model">
                <structure>
                    <import hidden="True" type="dictionary">
                        <module type="string">urbansim.models.real_estate_price_model</module>
                        <classname>RealEstatePriceModel</classname>
                    </import>
                    <init type="dictionary">
                        <name hidden="True" type="string">RealEstatePriceModel</name>
                        <submodel_string type="quoted_string">land_use_type_id</submodel_string>
                        <dependent_variable config_name="outcome_attribute" type="quoted_string">ln_unit_price=ln(urbansim_parcel.parcel.unit_price)</dependent_variable>
                        <filter_attribute type="quoted_string">numpy.logical_or(urbansim_parcel.parcel.building_sqft, urbansim_parcel.parcel.is_land_use_type_vacant)</filter_attribute>
                        <dataset_pool hidden="True" type="string">dataset_pool</dataset_pool>
                        <estimate_config type="string">Resources({'save_predicted_values_and_errors': False})</estimate_config>
                    </init>
                    <prepare_for_run type="dictionary">
                        <name hidden="True" type="string">prepare_for_run</name>
                        <specification_storage type="string">base_cache_storage</specification_storage>
                        <specification_table type="quoted_string">real_estate_price_model_specification</specification_table>
                        <coefficients_storage type="string">base_cache_storage</coefficients_storage>
                        <coefficients_table type="quoted_string">real_estate_price_model_coefficients</coefficients_table>
                        <output hidden="True" type="string">(specification, coefficients)</output>
                    </prepare_for_run>
                    <run type="dictionary">
                        <specification hidden="True" type="string">specification</specification>
                        <coefficients hidden="True" type="string">coefficients</coefficients>
                        <dataset type="string">parcel</dataset>
                        <data_objects hidden="True" type="string">datasets</data_objects>
                        <run_config type="string">Resources({'exclude_outliers_from_initial_error': True, 'outlier_is_less_than':3, 'outlier_is_greater_than': 7})</run_config>
                    </run>
                    <prepare_for_estimate type="dictionary">
                        <name hidden="True" type="string">prepare_for_estimate</name>
                        <specification_storage type="string">base_cache_storage</specification_storage>
                        <specification_table type="quoted_string">real_estate_price_model_specification</specification_table>
                        <filter_variable type="quoted_string">numpy.logical_and(urbansim_parcel.parcel.unit_price&gt;20.0855, urbansim_parcel.parcel.unit_price&lt;1096.63, urbansim_parcel.parcel.existing_units&gt;100)</filter_variable>
                        <dataset type="string">parcel</dataset>
                        <threshold type="integer">0</threshold>
                        <output hidden="True" type="string">(specification, index)</output>
                    </prepare_for_estimate>
                    <estimate type="dictionary">
                        <specification hidden="True" type="string">specification</specification>
                        <dependent_variable config_name="outcome_attribute" type="quoted_string">ln_unit_price=ln(urbansim_parcel.parcel.unit_price)</dependent_variable>
                        <dataset type="string">parcel</dataset>
                        <index hidden="True" type="string">index</index>
                        <data_objects hidden="True" type="string">datasets</data_objects>
                        <debuglevel hidden="True" type="string">debuglevel</debuglevel>
                        <procedure type="quoted_string">opus_core.estimate_linear_regression</procedure>
                        <output hidden="True" type="string">(coefficients, dummy)</output>
                    </estimate>
                </structure>
                <specification/>
            </real_estate_price_model>
            <employment_transition_model copyable="True" type="model">
                <structure>
                    <import hidden="True" type="dictionary">
                        <module type="string">urbansim.models.employment_transition_model</module>
                        <classname>EmploymentTransitionModel</classname>
                    </import>
                    <init type="dictionary">
                        <name hidden="True" type="string">EmploymentTransitionModel</name>
                        <debuglevel hidden="True" type="string">debuglevel</debuglevel>
                        <location_id_name type="quoted_string">building_id</location_id_name>
                    </init>
                    <prepare_for_run type="dictionary">
                        <name hidden="True" type="string">prepare_for_run</name>
                        <output hidden="True" type="string">control_totals</output>
                        <storage type="string">base_cache_storage</storage>
                    </prepare_for_run>
                    <run type="dictionary">
                        <control_totals type="string">control_totals</control_totals>
                        <job_building_types type="string">job_building_type</job_building_types>
                        <job_set type="string">job</job_set>
                        <year type="string">year</year>
                    </run>
                </structure>
                <specification/>
            </employment_transition_model>
            <employment_relocation_model copyable="True" type="model">
                <structure>
                    <import hidden="True" type="dictionary">
                        <module type="string">urbansim.models.employment_relocation_model_creator</module>
                        <classname>EmploymentRelocationModelCreator</classname>
                    </import>
                    <init type="dictionary">
                        <name hidden="True" type="string">EmploymentRelocationModelCreator().get_model</name>
                        <debuglevel hidden="True" type="string">debuglevel</debuglevel>
                        <location_id_name type="quoted_string">building_id</location_id_name>
                        <probabilities type="quoted_string">urbansim.employment_relocation_probabilities</probabilities>
                    </init>
                    <prepare_for_run type="dictionary">
                        <name hidden="True" type="string">prepare_for_run</name>
                        <output hidden="True" type="string">erm_resources</output>
                        <rate_storage type="string">base_cache_storage</rate_storage>
                        <rate_table type="quoted_string">annual_relocation_rates_for_jobs</rate_table>
                        <what type="quoted_string">jobs</what>
                    </prepare_for_run>
                    <run type="dictionary">
                        <output hidden="True" type="string">erm_index</output>
                        <resources hidden="True" type="string">erm_resources</resources>
                        <agent_set type="string">job</agent_set>
                    </run>
                </structure>
                <specification/>
            </employment_relocation_model>
            <employment_location_choice_model copyable="True" type="model">
                <structure>
                    <estimate type="dictionary">
                        <agent_set type="string">job</agent_set>
                        <agents_index hidden="True" type="string">index</agents_index>
                        <data_objects type="string">datasets</data_objects>
                        <debuglevel hidden="True" type="string">debuglevel</debuglevel>
                        <specification hidden="True" type="string">specification</specification>
                        <output hidden="True" type="string">(coefficients, _)</output>
                    </estimate>
                    <group_by_attribute type="tuple">
                        <grouping_table type="string">job_building_type</grouping_table>
                        <grouping_column type="string">name</grouping_column>
                    </group_by_attribute>
                    <import hidden="True" type="dictionary">
                        <module type="string">urbansim.models.employment_location_choice_model</module>
                        <classname>EmploymentLocationChoiceModel</classname>
                    </import>
                    <init type="dictionary">
                        <name hidden="True" type="string">EmploymentLocationChoiceModel</name>
                        <sampler type="quoted_string">opus_core.samplers.weighted_sampler</sampler>
                        <choices type="quoted_string">urbansim.lottery_choices</choices>
                        <estimation type="quoted_string">opus_core.bhhh_mnl_estimation</estimation>
                        <dataset_pool hidden="True" type="string">dataset_pool</dataset_pool>
                        <location_set type="string">building</location_set>
                        <sample_size_locations type="integer">30</sample_size_locations>
                        <capacity_string type="quoted_string">vacant_SSS_job_space</capacity_string>
                        <estimation_weight_string type="quoted_string">vacant_SSS_job_space</estimation_weight_string>
                        <filter type="quoted_string">building.non_residential_sqft</filter>
                        <estimation_size_agents type="float">1.</estimation_size_agents>
                        <compute_capacity_flag type="boolean">True</compute_capacity_flag>
                        <number_of_units_string type="quoted_string">total_SSS_job_space</number_of_units_string>
                        <run_config type="dictionary">
                            <agent_units_string parser_action="blank_to_None" type="string"/>
                            <lottery_max_iterations type="integer">10</lottery_max_iterations>
                        </run_config>
                        <variable_package type="quoted_string">urbansim_parcel</variable_package>
                    </init>
                    <prepare_for_estimate type="dictionary">
                        <name hidden="True" type="string">prepare_for_estimate</name>
                        <output hidden="True" type="string">(specification, index)</output>
                        <agent_set type="string">job</agent_set>
                        <agents_for_estimation_storage type="string">base_cache_storage</agents_for_estimation_storage>
                        <agents_for_estimation_table type="quoted_string">jobs_for_estimation</agents_for_estimation_table>
                        <data_objects type="string">datasets</data_objects>
                        <portion_to_unplace type="float">0</portion_to_unplace>
                        <specification_storage type="string">base_cache_storage</specification_storage>
                        <specification_table type="quoted_string">employment_location_choice_model_specification</specification_table>
                        <filter type="quoted_string">numpy.logical_and(job.building_id&gt;0, job.disaggregate(building.non_residential_sqft) &gt; 0)</filter>
                    </prepare_for_estimate>
                    <prepare_for_run type="dictionary">
                        <name hidden="True" type="string">prepare_for_run</name>
                        <output hidden="True" type="string">(specification, coefficients)</output>
                        <coefficients_storage type="string">base_cache_storage</coefficients_storage>
                        <coefficients_table type="quoted_string">employment_location_choice_model_coefficients</coefficients_table>
                        <specification_storage type="string">base_cache_storage</specification_storage>
                        <specification_table type="quoted_string">employment_location_choice_model_specification</specification_table>
                    </prepare_for_run>
                    <run type="dictionary">
                        <agent_set type="string">job</agent_set>
                        <agents_index hidden="True" type="string">erm_index</agents_index>
                        <chunk_specification type="string">{'records_per_chunk':50000}</chunk_specification>
                        <coefficients type="string">coefficients</coefficients>
                        <data_objects type="string">datasets</data_objects>
                        <debuglevel hidden="True" type="string">debuglevel</debuglevel>
                        <specification hidden="True" type="string">specification</specification>
                        <maximum_runs type="integer">3</maximum_runs>
                    </run>
                </structure>
                <specification/>
            </employment_location_choice_model>
            <distribute_unplaced_jobs_model copyable="True" type="model">
                <structure>
                    <import hidden="True" type="dictionary">
                        <module type="string">urbansim_parcel.models.distribute_unplaced_jobs_model</module>
                        <classname>DistributeUnplacedJobsModel</classname>
                    </import>
                    <init type="dictionary">
                        <name hidden="True" type="string">DistributeUnplacedJobsModel</name>
                        <debuglevel hidden="True" type="string">debuglevel</debuglevel>
                        <filter type="quoted_string">urbansim_parcel.building.is_governmental</filter>
                        <dataset_pool hidden="True" type="string">dataset_pool</dataset_pool>
                    </init>
                    <run type="dictionary">
                        <agent_set type="string">job</agent_set>
                        <data_objects type="string">datasets</data_objects>
                        <location_set type="string">building</location_set>
                        <agents_filter type="quoted_string">urbansim.job.is_in_employment_sector_group_scalable_sectors</agents_filter>
                    </run>
                </structure>
                <specification/>
            </distribute_unplaced_jobs_model>
            <governmental_employment_location_choice_model copyable="True" type="model">
                <structure>
                    <import hidden="True" type="dictionary">
                        <module type="string">urbansim_parcel.models.scaling_jobs_model</module>
                        <classname>ScalingJobsModel</classname>
                    </import>
                    <init type="dictionary">
                        <name hidden="True" type="string">ScalingJobsModel</name>
                        <debuglevel hidden="True" type="string">debuglevel</debuglevel>
                        <filter type="quoted_string">urbansim_parcel.building.is_governmental</filter>
                        <dataset_pool hidden="True" type="string">dataset_pool</dataset_pool>
                    </init>
                    <run type="dictionary">
                        <agent_set type="string">job</agent_set>
                        <agents_index hidden="True" type="string">erm_index</agents_index>
                        <data_objects type="string">datasets</data_objects>
                        <location_set type="string">building</location_set>
                    </run>
                </structure>
                <specification/>
            </governmental_employment_location_choice_model>
            <household_relocation_model copyable="True" type="model">
                <structure>
                    <import hidden="True" type="dictionary">
                        <module type="string">urbansim.models.household_relocation_model_creator</module>
                        <classname>HouseholdRelocationModelCreator</classname>
                    </import>
                    <init type="dictionary">
                        <name hidden="True" type="string">HouseholdRelocationModelCreator().get_model</name>
                        <debuglevel hidden="True" type="string">debuglevel</debuglevel>
                        <location_id_name type="quoted_string">building_id</location_id_name>
                        <probabilities type="quoted_string">urbansim.household_relocation_probabilities</probabilities>
                    </init>
                    <prepare_for_run type="dictionary">
                        <rate_storage type="string">base_cache_storage</rate_storage>
                        <rate_table type="quoted_string">annual_relocation_rates_for_households</rate_table>
                        <what type="quoted_string">households</what>
                    </prepare_for_run>
                    <run type="dictionary">
                        <output hidden="True" type="string">hrm_index</output>
                        <agent_set type="string">household</agent_set>
                        <resources hidden="True" type="string">hrm_resources</resources>
                    </run>
                </structure>
                <specification/>
            </household_relocation_model>
            <process_pipeline_events copyable="True" type="model">
                <structure>
                    <import hidden="True" type="dictionary">
                        <module type="string">urbansim_parcel.models.process_pipeline_events</module>
                        <classname>ProcessPipelineEvents</classname>
                    </import>
                    <init hidden="True" type="dictionary">
                        <name hidden="True" type="string">ProcessPipelineEvents</name>
                    </init>
                    <run type="dictionary">
                        <building_dataset type="string">building</building_dataset>
                        <year hidden="True" type="string">year</year>
                        <storage hidden="True" type="string">base_cache_storage</storage>
                        <output hidden="True" type="string">scheduled_development_events</output>
                    </run>
                </structure>
                <specification/>
            </process_pipeline_events>
            <expected_sale_price_model copyable="True" type="model">
                <structure>
                    <import hidden="True" type="dictionary">
                        <module type="string">urbansim_parcel.models.development_project_proposal_regression_model</module>
                        <classname>DevelopmentProjectProposalRegressionModel</classname>
                    </import>
                    <init type="dictionary">
                        <name hidden="True" type="string">DevelopmentProjectProposalRegressionModel</name>
                        <submodel_string type="quoted_string">land_use_type_id=development_project_proposal.disaggregate(parcel.land_use_type_id)</submodel_string>
                        <filter_attribute type="quoted_string">urbansim_parcel.development_project_proposal.is_size_fit</filter_attribute>
                        <outcome_attribute_name type="quoted_string">ln_unit_price_expected</outcome_attribute_name>
                        <dataset_pool hidden="True" type="string">dataset_pool</dataset_pool>
                    </init>
                    <prepare_for_run type="dictionary">
                        <name hidden="True" type="string">prepare_for_run</name>
                        <parcel_filter_for_new_development type="quoted_string">has_vacant_land=urbansim_parcel.parcel.vacant_land_area &gt; 0</parcel_filter_for_new_development>
                        <parcel_filter_for_redevelopment type="quoted_string">low_improvement_ratio=urbansim_parcel.parcel.improvement_value / ( urbansim_parcel.parcel.unit_price * urbansim_parcel.parcel.existing_units ) &lt; 0.1</parcel_filter_for_redevelopment>
                        <specification_storage hidden="True" type="string">base_cache_storage</specification_storage>
                        <specification_table type="quoted_string">real_estate_price_model_specification</specification_table>
                        <coefficients_storage hidden="True" type="string">base_cache_storage</coefficients_storage>
                        <coefficients_table type="quoted_string">real_estate_price_model_coefficients</coefficients_table>
                        <spec_replace_module_variable_pair hidden="True" type="string">('psrc_parcel.estimation.repm_specification', 'variables_for_development_project_proposal')</spec_replace_module_variable_pair>
                        <dataset_pool hidden="True" type="string">dataset_pool</dataset_pool>
                        <output hidden="True" type="string">(development_project_proposal, specification, coefficients)</output>
                    </prepare_for_run>
                    <run type="dictionary">
                        <specification hidden="True" type="string">specification</specification>
                        <coefficients hidden="True" type="string">coefficients</coefficients>
                        <dataset type="string">development_project_proposal</dataset>
                        <data_objects hidden="True" type="string">datasets</data_objects>
                        <output hidden="True" type="string">development_project_proposal</output>
                    </run>
                </structure>
                <specification/>
            </expected_sale_price_model>
            <development_proposal_choice_model copyable="True" type="model">
                <structure>
                    <import hidden="True" type="dictionary">
                        <module type="string">urbansim_parcel.models.development_project_proposal_sampling_model</module>
                        <classname>DevelopmentProjectProposalSamplingModel</classname>
                    </import>
                    <init type="dictionary">
                        <name hidden="True" type="string">DevelopmentProjectProposalSamplingModel</name>
                        <proposal_set type="string">development_project_proposal</proposal_set>
                        <weight_string type="quoted_string">exp_ROI = exp(urbansim_parcel.development_project_proposal.expected_rate_of_return_on_investment)</weight_string>
                        <filter_attribute parser_action="blank_to_None" type="string"/>
                    </init>
                    <run type="dictionary">
                        <n type="integer">500</n>
                        <output hidden="True" type="string">(development_project_proposal, demolished_buildings)</output>
                    </run>
                </structure>
                <specification/>
            </development_proposal_choice_model>
            <building_construction_model copyable="True" type="model">
                <structure>
                    <import hidden="True" type="dictionary">
                        <module type="string">urbansim_parcel.models.building_construction_model</module>
                        <classname>BuildingConstructionModel</classname>
                    </import>
                    <init hidden="True" type="dictionary">
                        <name hidden="True" type="string">BuildingConstructionModel</name>
                    </init>
                    <run type="dictionary">
                        <development_proposal_set type="string">development_project_proposal</development_proposal_set>
                        <building_dataset type="string">building</building_dataset>
                        <buildings_to_be_demolished hidden="True" type="string">demolished_buildings</buildings_to_be_demolished>
                        <dataset_pool hidden="True" type="string">dataset_pool</dataset_pool>
                    </run>
                </structure>
                <specification/>
            </building_construction_model>
            <household_location_choice_model copyable="True" type="model">
                <structure>
                    <estimate type="dictionary">
                        <output hidden="True" type="string">(coefficients, _)</output>
                        <agent_set type="string">household</agent_set>
                        <agents_index hidden="True" type="string">_index</agents_index>
                        <data_objects type="string">datasets</data_objects>
                        <debuglevel hidden="True" type="string">debuglevel</debuglevel>
                        <specification hidden="True" type="string">_specification</specification>
                    </estimate>
                    <import hidden="True" type="dictionary">
                        <module type="string">urbansim.models.household_location_choice_model</module>
                        <classname>HouseholdLocationChoiceModel</classname>
                    </import>
                    <init type="dictionary">
                        <name hidden="True" type="string">HouseholdLocationChoiceModel</name>
                        <sampler type="quoted_string">opus_core.samplers.weighted_sampler</sampler>
                        <choices type="quoted_string">urbansim.lottery_choices</choices>
                        <estimation type="quoted_string">opus_core.bhhh_wesml_mnl_estimation</estimation>
                        <dataset_pool hidden="True" type="string">dataset_pool</dataset_pool>
                        <location_set type="string">building</location_set>
                        <sample_size_locations type="integer">30</sample_size_locations>
                        <capacity_string type="quoted_string">vacant_residential_units</capacity_string>
                        <estimation_weight_string type="quoted_string">residential_units</estimation_weight_string>
                        <number_of_units_string type="quoted_string">residential_units</number_of_units_string>
                        <number_of_agents_string type="quoted_string">number_of_households</number_of_agents_string>
                        <location_id_string type="quoted_string">building_id</location_id_string>
                        <submodel_string type="quoted_string">urbansim.household.income_category</submodel_string>
                        <estimation_size_agents type="float">0.5</estimation_size_agents>
                        <filter type="quoted_string">numpy.logical_and(urbansim_parcel.building.is_residential, numpy.logical_and(numpy.logical_and(building.residential_units, building.sqft_per_unit), urbansim_parcel.building.unit_price &gt; 0))</filter>
                        <run_config type="string">Resources({'lottery_max_iterations': 7, 'aaaa': 'bbbb',})</run_config>
                        <estimate_config type="string">Resources({'wesml_sampling_correction_variable':'psrc_parcel.building.wesml_sampling_correction_variable'})</estimate_config>
                        <variable_package type="quoted_string">urbansim_parcel</variable_package>
                    </init>
                    <prepare_for_estimate type="dictionary">
                        <name hidden="True" type="string">prepare_for_estimate</name>
                        <output hidden="True" type="string">(_specification, _index)</output>
                        <agent_set type="string">household</agent_set>
                        <agents_for_estimation_storage type="string">base_cache_storage</agents_for_estimation_storage>
                        <agents_for_estimation_table type="quoted_string">households_for_estimation</agents_for_estimation_table>
                        <data_objects type="string">datasets</data_objects>
                        <index_to_unplace type="string">None</index_to_unplace>
                        <join_datasets type="boolean">True</join_datasets>
                        <portion_to_unplace type="string">.1</portion_to_unplace>
                        <specification_storage type="string">base_cache_storage</specification_storage>
                        <specification_table type="quoted_string">household_location_choice_model_specification</specification_table>
                        <filter type="quoted_string">numpy.logical_and(household.building_id&gt;0, household.disaggregate(building.sqft_per_unit&gt;0))</filter>
                    </prepare_for_estimate>
                    <prepare_for_run type="dictionary">
                        <name hidden="True" type="string">prepare_for_run</name>
                        <output hidden="True" type="string">(_specification, _coefficients)</output>
                        <coefficients_storage type="string">base_cache_storage</coefficients_storage>
                        <coefficients_table type="quoted_string">household_location_choice_model_coefficients</coefficients_table>
                        <specification_storage type="string">base_cache_storage</specification_storage>
                        <specification_table type="quoted_string">household_location_choice_model_specification</specification_table>
                    </prepare_for_run>
                    <run type="dictionary">
                        <agent_set type="string">household</agent_set>
                        <agents_index hidden="True" type="string">hrm_index</agents_index>
                        <chunk_specification type="string">{'records_per_chunk':50000}</chunk_specification>
                        <coefficients hidden="True" type="string">_coefficients</coefficients>
                        <data_objects hidden="True" type="string">datasets</data_objects>
                        <debuglevel hidden="True" type="string">debuglevel</debuglevel>
                        <specification hidden="True" type="string">_specification</specification>
                        <maximum_runs type="integer">10</maximum_runs>
                    </run>
                </structure>
                <specification/>
            </household_location_choice_model>
        </model_system>
    </model_manager>
    <scenario_manager>
        <urbansim_parcel_baseline type="scenario">
            <parent_old_format type="dictionary">
                <Class_name type="string">UrbansimParcelConfiguration</Class_name>
                <Class_path type="string">urbansim_parcel.configs.controller_config</Class_path>
            </parent_old_format>
        </urbansim_parcel_baseline>
    </scenario_manager>
</opus_project>
