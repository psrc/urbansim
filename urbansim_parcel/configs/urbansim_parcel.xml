<?xml version='1.0' encoding='UTF-8'?>
<opus_project>
  <general>
    <description type="string" >Default UrbanSim parcel project</description>
  </general>
  <model_manager>
    <model_system type="dictionary" >
      <real_estate_price_model type="dictionary" >
        <import type="dictionary" >
          <urbansim.models.real_estate_price_model type="string" >RealEstatePriceModel</urbansim.models.real_estate_price_model>
        </import>
        <init type="dictionary" >
          <name type="string" >RealEstatePriceModel</name>
          <arguments type="dictionary" >
            <submodel_string type="string" >'land_use_type_id'</submodel_string>
            <outcome_attribute type="string" >'ln_unit_price=ln(urbansim_parcel.parcel.unit_price)'</outcome_attribute>
            <filter_attribute type="string" >'numpy.logical_or(urbansim_parcel.parcel.building_sqft, urbansim_parcel.parcel.is_land_use_type_vacant)'</filter_attribute>
            <dataset_pool flags="hidden" type="string" >dataset_pool</dataset_pool>
            <estimate_config type="string" >Resources({'save_predicted_values_and_errors': False})</estimate_config>
          </arguments>
        </init>
        <prepare_for_run type="dictionary" >
          <name type="string" >prepare_for_run</name>
          <arguments type="dictionary" >
            <specification_storage type="string" >base_cache_storage</specification_storage>
            <specification_table type="string" >'real_estate_price_model_specification'</specification_table>
            <coefficients_storage type="string" >base_cache_storage</coefficients_storage>
            <coefficients_table type="string" >'real_estate_price_model_coefficients'</coefficients_table>
          </arguments>
          <output flags="hidden" type="string" >(specification, coefficients)</output>
        </prepare_for_run>
        <run type="dictionary" >
          <arguments type="dictionary" >
            <specification flags="hidden" type="string" >specification</specification>
            <coefficients flags="hidden" type="string" >coefficients</coefficients>
            <dataset type="string" >parcel</dataset>
            <data_objects flags="hidden" type="string" >datasets</data_objects>
            <run_config type="string" >Resources({'exclude_outliers_from_initial_error': True, 'outlier_is_less_than':20.0855, 'outlier_is_greater_than': 1096.63})</run_config>
          </arguments>
        </run>
        <prepare_for_estimate type="dictionary" >
          <name type="string" >prepare_for_estimate</name>
          <arguments type="dictionary" >
            <specification_storage type="string" >base_cache_storage</specification_storage>
            <specification_table type="string" >'real_estate_price_model_specification'</specification_table>
            <filter_variable type="string" ><![CDATA['numpy.logical_and(urbansim_parcel.parcel.unit_price>20.0855, urbansim_parcel.parcel.unit_price<1096.63, urbansim_parcel.parcel.existing_units>100)']]></filter_variable>
            <dataset type="string" >parcel</dataset>
            <threshold type="integer" >1</threshold>
          </arguments>
          <output flags="hidden" type="string" >(specification, index)</output>
        </prepare_for_estimate>
        <estimate type="dictionary" >
          <arguments type="dictionary" >
            <specification flags="hidden" type="string" >specification</specification>
            <outcome_attribute type="string" >'ln_unit_price=ln(urbansim_parcel.parcel.unit_price)'</outcome_attribute>
            <dataset type="string" >parcel</dataset>
            <index flags="hidden" type="string" >index</index>
            <data_objects flags="hidden" type="string" >datasets</data_objects>
            <debuglevel type="string" >debuglevel</debuglevel>
            <procedure type="string" >'opus_core.estimate_linear_regression'</procedure>
          </arguments>
          <output flags="hidden" type="string" >(coefficients, dummy)</output>
        </estimate>
      </real_estate_price_model>
      <employment_transition_model parser_action="execute" type="class" >
        <Class_name flags="hidden" type="string" >EmploymentTransitionModelConfigurationCreator</Class_name>
        <Class_path flags="hidden" type="string" >urbansim.configurations.employment_transition_model_configuration_creator</Class_path>
        <location_id_name type="string" >building_id</location_id_name>
      </employment_transition_model>
      <employment_relocation_model parser_action="execute" type="class" >
        <Class_name flags="hidden" type="string" >EmploymentRelocationModelConfigurationCreator</Class_name>
        <Class_path flags="hidden" type="string" >urbansim.configurations.employment_relocation_model_configuration_creator</Class_path>
        <location_id_name type="string" >building_id</location_id_name>
        <output_index type="string" >erm_index</output_index>
      </employment_relocation_model>
      <employment_location_choice_model parser_action="execute" type="class" >
        <Class_name flags="hidden" type="string" >EmploymentLocationChoiceModelConfigurationCreator</Class_name>
        <Class_path flags="hidden" type="string" >urbansim.configurations.employment_location_choice_model_configuration_creator</Class_path>
        <location_set type="string" >building</location_set>
        <input_index type="string" >erm_index</input_index>
        <estimation_weight_string type="string" >vacant_SSS_job_space</estimation_weight_string>
        <agents_for_estimation_table type="string" >jobs_for_estimation</agents_for_estimation_table>
        <number_of_units_string type="string" >total_SSS_job_space</number_of_units_string>
        <filter type="string" >building.non_residential_sqft</filter>
        <filter_for_estimation type="string" ><![CDATA[numpy.logical_and(job.building_id>0, job.disaggregate(building.non_residential_sqft) > 0)]]></filter_for_estimation>
        <portion_to_unplace type="integer" >0</portion_to_unplace>
        <capacity_string type="string" >vacant_SSS_job_space</capacity_string>
        <variable_package type="string" >urbansim_parcel</variable_package>
        <lottery_max_iterations type="integer" >10</lottery_max_iterations>
      </employment_location_choice_model>
      <home_based_employment_location_choice_model parser_action="execute" type="class" >
        <Class_name flags="hidden" type="string" >EmploymentLocationChoiceModelConfigurationCreator</Class_name>
        <Class_path flags="hidden" type="string" >urbansim.configurations.employment_location_choice_model_configuration_creator</Class_path>
        <location_set type="string" >building</location_set>
        <input_index type="string" >erm_index</input_index>
        <estimation_weight_string type="string" >vacant_home_based_job_space</estimation_weight_string>
        <agents_for_estimation_table parser_action="empty_string_to_None" type="string" />
        <estimation_size_agents type="float" >0.4</estimation_size_agents>
        <number_of_units_string parser_action="empty_string_to_None" type="string" />
        <filter type="string" >numpy.logical_and(building.residential_units, building.sqft_per_unit)</filter>
        <filter_for_estimation type="string" ><![CDATA[numpy.logical_and(job.building_id>0, job.disaggregate(building.sqft_per_unit > 0))]]></filter_for_estimation>
        <portion_to_unplace type="integer" >0</portion_to_unplace>
        <capacity_string type="string" >vacant_home_based_job_space</capacity_string>
        <variable_package type="string" >urbansim_parcel</variable_package>
        <lottery_max_iterations type="integer" >7</lottery_max_iterations>
      </home_based_employment_location_choice_model>
      <distribute_unplaced_jobs_model parser_action="execute" type="class" >
        <Class_name flags="hidden" type="string" >DistributeUnplacedJobsModelConfigurationCreator</Class_name>
        <Class_path flags="hidden" type="string" >urbansim.configurations.distribute_unplaced_jobs_model_configuration_creator</Class_path>
        <location_set type="string" >building</location_set>
        <filter type="string" >urbansim_parcel.building.is_governmental</filter>
        <agents_filter type="string" >urbansim.job.is_in_employment_sector_group_scalable_sectors</agents_filter>
        <module_name type="string" >urbansim_parcel.models.distribute_unplaced_jobs_model</module_name>
      </distribute_unplaced_jobs_model>
      <governmental_employment_location_choice_model parser_action="execute" type="class" >
        <Class_name flags="hidden" type="string" >GovernmentalEmploymentLocationChoiceModelConfigurationCreator</Class_name>
        <Class_path flags="hidden" type="string" >urbansim.configurations.governmental_employment_location_choice_model_configuration_creator</Class_path>
        <input_index type="string" >erm_index</input_index>
        <location_set type="string" >building</location_set>
        <filter type="string" >urbansim_parcel.building.is_governmental</filter>
        <module_name type="string" >urbansim_parcel.models.scaling_jobs_model</module_name>
      </governmental_employment_location_choice_model>
      <household_relocation_model parser_action="execute" type="class" >
        <Class_name flags="hidden" type="string" >HouseholdRelocationModelConfigurationCreator</Class_name>
        <Class_path flags="hidden" type="string" >urbansim.configurations.household_relocation_model_configuration_creator</Class_path>
        <agent_set type="string" >household</agent_set>
        <location_id_name type="string" >building_id</location_id_name>
        <rate_table type="string" >annual_relocation_rates_for_households</rate_table>
        <probabilities type="string" >urbansim.household_relocation_probabilities</probabilities>
      </household_relocation_model>
      <process_pipeline_events type="dictionary" >
        <import type="dictionary" >
          <urbansim_parcel.models.process_pipeline_events type="string" >ProcessPipelineEvents</urbansim_parcel.models.process_pipeline_events>
        </import>
        <init type="dictionary" >
          <name type="string" >ProcessPipelineEvents</name>
        </init>
        <run type="dictionary" >
          <arguments type="dictionary" >
            <building_dataset type="string" >building</building_dataset>
            <year flags="hidden" type="string" >year</year>
            <storage flags="hidden" type="string" >base_cache_storage</storage>
          </arguments>
          <output flags="hidden" type="string" >scheduled_development_events</output>
        </run>
      </process_pipeline_events>
      <expected_sale_price_model type="dictionary" >
        <import type="dictionary" >
          <urbansim_parcel.models.development_project_proposal_regression_model type="string" >DevelopmentProjectProposalRegressionModel</urbansim_parcel.models.development_project_proposal_regression_model>
        </import>
        <init type="dictionary" >
          <name type="string" >DevelopmentProjectProposalRegressionModel</name>
          <arguments type="dictionary" >
            <submodel_string type="string" >'land_use_type_id=development_project_proposal.disaggregate(parcel.land_use_type_id)'</submodel_string>
            <filter_attribute type="string" >'urbansim_parcel.development_project_proposal.is_size_fit'</filter_attribute>
            <outcome_attribute_name type="string" >'ln_unit_price_expected'</outcome_attribute_name>
            <dataset_pool flags="hidden" type="string" >dataset_pool</dataset_pool>
          </arguments>
        </init>
        <prepare_for_run type="dictionary" >
          <name type="string" >prepare_for_run</name>
          <arguments type="dictionary" >
            <parcel_filter_for_new_development type="string" ><![CDATA['has_vacant_land=urbansim_parcel.parcel.vacant_land_area > 0']]></parcel_filter_for_new_development>
            <parcel_filter_for_redevelopment type="string" ><![CDATA['low_improvement_ratio=urbansim_parcel.parcel.improvement_value / ( urbansim_parcel.parcel.unit_price * urbansim_parcel.parcel.existing_units ) < 0.1']]></parcel_filter_for_redevelopment>
            <specification_storage flags="hidden" type="string" >base_cache_storage</specification_storage>
            <specification_table type="string" >'real_estate_price_model_specification'</specification_table>
            <coefficients_storage flags="hidden" type="string" >base_cache_storage</coefficients_storage>
            <coefficients_table type="string" >'real_estate_price_model_coefficients'</coefficients_table>
            <spec_replace_module_variable_pair flags="hidden" type="string" >('psrc_parcel.estimation.repm_specification', 'variables_for_development_project_proposal')</spec_replace_module_variable_pair>
            <dataset_pool flags="hidden" type="string" >dataset_pool</dataset_pool>
          </arguments>
          <output flags="hidden" type="string" >(development_project_proposal, specification, coefficients)</output>
        </prepare_for_run>
        <run type="dictionary" >
          <arguments type="dictionary" >
            <specification flags="hidden" type="string" >specification</specification>
            <coefficients flags="hidden" type="string" >coefficients</coefficients>
            <dataset type="string" >development_project_proposal</dataset>
            <data_objects flags="hidden" type="string" >datasets</data_objects>
          </arguments>
          <output flags="hidden" type="string" >development_project_proposal</output>
        </run>
      </expected_sale_price_model>
      <development_proposal_choice_model type="dictionary" >
        <import type="dictionary" >
          <urbansim_parcel.models.development_project_proposal_sampling_model type="string" >DevelopmentProjectProposalSamplingModel</urbansim_parcel.models.development_project_proposal_sampling_model>
        </import>
        <init type="dictionary" >
          <name type="string" >DevelopmentProjectProposalSamplingModel</name>
          <arguments type="dictionary" >
            <proposal_set type="string" >development_project_proposal</proposal_set>
            <weight_string type="string" >'exp_ROI = exp(urbansim_parcel.development_project_proposal.expected_rate_of_return_on_investment)'</weight_string>
            <filter_attribute type="string" >None</filter_attribute>
          </arguments>
        </init>
        <run type="dictionary" >
          <arguments type="dictionary" >
            <n type="integer" >500</n>
          </arguments>
          <output flags="hidden" type="string" >(development_project_proposal, demolished_buildings)</output>
        </run>
      </development_proposal_choice_model>
      <building_construction_model type="dictionary" >
        <import type="dictionary" >
          <urbansim_parcel.models.building_construction_model type="string" >BuildingConstructionModel</urbansim_parcel.models.building_construction_model>
        </import>
        <init type="dictionary" >
          <name type="string" >BuildingConstructionModel</name>
        </init>
        <run type="dictionary" >
          <arguments type="dictionary" >
            <development_proposal_set type="string" >development_project_proposal</development_proposal_set>
            <building_dataset type="string" >building</building_dataset>
            <buildings_to_be_demolished flags="hidden" type="string" >demolished_buildings</buildings_to_be_demolished>
            <dataset_pool flags="hidden" type="string" >dataset_pool</dataset_pool>
          </arguments>
        </run>
      </building_construction_model>
      
         <household_location_choice_model  parser_action="execute" type="class">
        <Class_name flags="hidden" type="string">HouseholdLocationChoiceModelConfigurationCreator</Class_name>
        <Class_path flags="hidden" type="string">urbansim.configurations.household_location_choice_model_configuration_creator</Class_path>
        <location_set type="string">building</location_set>
        <agent_set type="string">household</agent_set>
        <capacity_string type="string">vacant_residential_units</capacity_string>
        <records_per_chunk type="integer">50000</records_per_chunk>
        <sample_size_locations type="integer">30</sample_size_locations>
        <sampler type="string">opus_core.samplers.weighted_sampler</sampler>
        <lottery_max_iterations type="integer">7</lottery_max_iterations>
        <location_id_name type="string">building_id</location_id_name>
        <location_filter type="string"><![CDATA[numpy.logical_and(urbansim_parcel.building.is_residential, numpy.logical_and(numpy.logical_and(building.residential_units, building.sqft_per_unit), urbansim_parcel.building.unit_price > 0))]]></location_filter>
        <estimation_weight_string type="string">urbansim_parcel.building.vacant_residential_units</estimation_weight_string>
        <estimation_size_agents type="float" parser_action="empty_string_to_None"></estimation_size_agents>
        <agents_for_estimation_table_name  type="string">households_for_estimation</agents_for_estimation_table_name>
        <location_filter_for_estimation type="string"><![CDATA[numpy.logical_and(household.building_id>0, household.disaggregate(building.sqft_per_unit>0))]]></location_filter_for_estimation>
        <estimation_procedure type="string">opus_core.bhhh_wesml_mnl_estimation</estimation_procedure>
        <join_agents_for_estimation_with_all_agents type="boolean">True</join_agents_for_estimation_with_all_agents>
        <unplace_agents_for_estimation type="boolean">False</unplace_agents_for_estimation>
        <estimate_config type="dictionary">
          <wesml_sampling_correction_variable type="string">'psrc_parcel.building.wesml_sampling_correction_variable'</wesml_sampling_correction_variable>
        </estimate_config>
        <variable_package flags="hidden" type="string" >urbansim_parcel</variable_package>
  </household_location_choice_model>
  
    </model_system>
  </model_manager>
  <scenario_manager>
    <urbansim_parcel_baseline type="scenario" >
      <parent_old_format type="dictionary" >
        <Class_name type="string" >UrbansimParcelConfiguration</Class_name>
        <Class_path type="string" >urbansim_parcel.configs.controller_config</Class_path>
      </parent_old_format>
    </urbansim_parcel_baseline>
  </scenario_manager>
</opus_project>
