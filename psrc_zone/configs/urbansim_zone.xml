<!--
<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <project_name type="string">urbansim_zone</project_name>
    <description type="string">UrbanSim zone baseline</description>
    <parent type="file">urbansim/configs/urbansim.xml</parent>
    <dataset_pool_configuration type="class">
      <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
      <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
      <argument name="package_order" type="list">['urbansim_zone', 'urbansim', 'opus_core']</argument>
    </dataset_pool_configuration>
    <available_datasets type="list">['building','household_x_building','zone','faz','large_area','gridcell','city','county','alldata']</available_datasets>
    <spatial_datasets type="list">['zone','faz','large_area','gridcell','city','county']</spatial_datasets>
  </general>
  <model_manager>
    <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model name="employment_relocation_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.employment_relocation_model_creator</class_module>
            <class_name>EmploymentRelocationModelCreator</class_name>
          </import>
          <init type="dictionary">
            <argument name="probabilities" parser_action="quote_string" type="string">urbansim.employment_relocation_probabilities</argument>
            <argument name="location_id_name" parser_action="quote_string" type="string">building_id</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <name name="name" type="string">EmploymentRelocationModelCreator().get_model</name>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">erm_resources</output>
            <argument name="rate_storage" type="string">base_cache_storage</argument>
            <argument name="rate_table" parser_action="quote_string" type="string">annual_job_relocation_rates</argument>
            <argument name="what" parser_action="quote_string" type="string">jobs</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <output name="output" type="string">erm_index</output>
            <argument name="resources" type="string">erm_resources</argument>
            <argument name="agent_set" type="string">job</argument>
          </run>
        </structure>
      </model>
      <model name="household_relocation_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_relocation_model_creator</class_module>
            <class_name>HouseholdRelocationModelCreator</class_name>
          </import>
          <init type="dictionary">
            <argument name="probabilities" parser_action="quote_string" type="string">urbansim.household_relocation_probabilities</argument>
            <argument name="location_id_name" parser_action="quote_string" type="string">building_id</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <name name="name" type="string">HouseholdRelocationModelCreator().get_model</name>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">hrm_resources</output>
            <argument name="rate_storage" type="string">base_cache_storage</argument>
            <argument name="rate_table" parser_action="quote_string" type="string">annual_household_relocation_rates</argument>
            <argument name="what" parser_action="quote_string" type="string">households</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <output name="output" type="string">hrm_index</output>
            <argument name="resources" type="string">hrm_resources</argument>
            <argument name="agent_set" type="string">household</argument>
          </run>
        </structure>
      </model>
      <model name="distribute_unplaced_jobs_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.distribute_unplaced_jobs_model</class_module>
            <class_name>DistributeUnplacedJobsModel</class_name>
          </import>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="filter" type="string">None</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <name name="name" type="string">DistributeUnplacedJobsModel</name>
          </init>
          <run type="dictionary">
            <argument convert_blank_to_none="True" name="agents_filter" type="string">None</argument>
            <argument name="location_set" type="string">building</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agent_set" type="string">job</argument>
          </run>
        </structure>
      </model>
      <model name="household_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_transition_model</class_module>
            <class_name>HouseholdTransitionModel</class_name>
          </import>
          <init type="dictionary">
            <argument name="location_id_name" parser_action="quote_string" type="string">building_id</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <name name="name" type="string">HouseholdTransitionModel</name>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(control_totals, characteristics)</output>
            <argument name="storage" type="string">base_cache_storage</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="characteristics" type="string">characteristics</argument>
            <argument name="household_set" type="string">household</argument>
            <argument name="control_totals" type="string">control_totals</argument>
            <argument name="year" type="string">year</argument>
          </run>
        </structure>
      </model>
      <model name="non_residential_development_project_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'records_per_chunk':300}</argument>
            <argument name="agent_set" type="string">projects</argument>
            <argument name="agents_index" type="string">dplcm_idx</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument name="project_type" type="string">non_residential</argument>
            <argument convert_blank_to_none="True" name="submodel_string" type="string">building_type_id</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">numpy.logical_not(urbansim_parcel.building.is_residential) * urbansim_zone.building.non_residential_sqft_capacity</argument>
            <argument name="location_set" type="string">building</argument>
            <argument convert_blank_to_none="True" name="sampler" type="string"/>
            <name name="name" type="string">DevelopmentProjectLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>psrc_zone.models.development_project_location_choice_model</class_module>
            <class_name>DevelopmentProjectLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agent_set" type="string">projects</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients, dplcm_idx)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">non_residential_development_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">non_residential_development_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, projects)</output>
            <argument name="events_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="units" parser_action="quote_string" type="string">non_residential_sqft</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">non_residential_development_location_choice_model_specification</argument>
            <argument name="urbansim_constant" type="string">urbansim_constant</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="events_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="base_year" type="string">base_year</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list"/>
          </submodel>
        </specification>
      </model>
      <model name="employment_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">['employment_relocation_model']</config_override>
        </estimation_config>
        <structure type="dictionary">
          <group_by_attribute type="list">('job_building_type', 'name')</group_by_attribute>
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="agent_set" type="string">job</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
            <argument name="agents_index" type="string">erm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="compute_capacity_flag" type="boolean">True</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">urbansim_parcel.building.vacant_SSS_job_space</argument>
            <argument convert_blank_to_none="True" name="estimation_weight_string" type="string"/>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="run_config" type="dictionary">
              <key name="lottery_max_iterations" type="integer">3</key>
              <key convert_blank_to_none="True" name="agent_units_string" type="string"/>
            </argument>
            <argument name="location_set" type="string">building</argument>
            <argument name="estimation_size_agents" type="float">1.0</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" name="simulation_weight_string" type="string"/>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="sample_size_locations" type="integer">30</argument>
            <name name="name" type="string">EmploymentLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.employment_location_choice_model</class_module>
            <class_name>EmploymentLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">job</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">employment_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">employment_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="integer">0</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">employment_location_choice_model_specification</argument>
            <argument name="agent_set" type="string">job</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_for_estimation_table" parser_action="quote_string" type="string">jobs_for_estimation</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list"/>
          </submodel>
        </specification>
      </model>
      <model name="residential_development_project_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'records_per_chunk':300}</argument>
            <argument name="agent_set" type="string">dptm_results['residential']</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="submodel_string" type="string"/>
            <argument name="capacity_string" parser_action="quote_string" type="string">urbansim_zone.zone.developable_residential_units</argument>
            <argument name="location_set" type="string">zone</argument>
            <argument name="project_type" parser_action="quote_string" type="string">residential</argument>
            <argument convert_blank_to_none="True" name="sampler" type="string"/>
            <name name="name" type="string">DevelopmentProjectLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim_zone.models.development_project_location_choice_model</class_module>
            <class_name>DevelopmentProjectLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agent_set" type="string">projects</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">residential_development_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">residential_development_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, projects)</output>
            <argument name="events_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="units" parser_action="quote_string" type="string">residential_units</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">residential_development_location_choice_model_specification</argument>
            <argument name="urbansim_constant" type="string">urbansim_constant</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="events_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="base_year" type="string">base_year</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list"/>
          </submodel>
        </specification>
      </model>
      <model name="development_project_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>psrc_zone.models.development_project_transition_model</class_module>
            <class_name>DevelopmentProjectTransitionModel</class_name>
          </import>
          <init type="dictionary">
            <argument name="debuglevel" type="string">debuglevel</argument>
            <name name="name" type="string">DevelopmentProjectTransitionModel</name>
          </init>
          <run type="dictionary">
            <output name="output" type="string">projects</output>
            <argument name="vacancy_table" type="string">target_vacancy</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="location_set" type="string">building</argument>
            <argument name="year" type="string">year</argument>
            <argument name="history_table" type="string">development_event_history</argument>
          </run>
        </structure>
      </model>
      <model name="governmental_employment_location_choice_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.scaling_jobs_model</class_module>
            <class_name>ScalingJobsModel</class_name>
          </import>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <name name="name" type="string">ScalingJobsModel</name>
          </init>
          <run type="dictionary">
            <argument name="agents_index" type="string">erm_index</argument>
            <argument name="location_set" type="string">building</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agent_set" type="string">job</argument>
          </run>
        </structure>
      </model>
      <model name="employment_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.employment_transition_model</class_module>
            <class_name>EmploymentTransitionModel</class_name>
          </import>
          <init type="dictionary">
            <argument name="location_id_name" parser_action="quote_string" type="string">building_id</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <name name="name" type="string">EmploymentTransitionModel</name>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">control_totals</output>
            <argument name="storage" type="string">base_cache_storage</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="job_building_types" type="string">job_building_type</argument>
            <argument name="job_set" type="string">job</argument>
            <argument name="control_totals" type="string">control_totals</argument>
            <argument name="year" type="string">year</argument>
          </run>
        </structure>
      </model>
      <model name="home_based_employment_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <group_by_attribute type="list">('job_building_type', 'name')</group_by_attribute>
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="agent_set" type="string">job</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
            <argument name="agents_index" type="string">erm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="compute_capacity_flag" type="boolean">True</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">urbansim_parcel.building.number_of_households</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">urbansim_parcel.building.number_of_households</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="run_config" type="dictionary">
              <key name="lottery_max_iterations" type="integer">3</key>
              <key convert_blank_to_none="True" name="agent_units_string" type="string"/>
            </argument>
            <argument name="location_set" type="string">building</argument>
            <argument name="estimation_size_agents" type="float">0.5</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" name="simulation_weight_string" type="string"/>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="sample_size_locations" type="integer">30</argument>
            <name name="name" type="string">EmploymentLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.employment_location_choice_model</class_module>
            <class_name>EmploymentLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">job</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">employment_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">employment_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="integer">0</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">employment_location_choice_model_specification</argument>
            <argument name="agent_set" type="string">job</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" type="string"/>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list"/>
          </submodel>
        </specification>
      </model>
      <model name="household_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">['household_relocation_model']</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':3}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument convert_blank_to_none="True" name="location_id_string" type="string"/>
            <argument convert_blank_to_none="True" name="submodel_string" type="string"/>
            <argument name="capacity_string" parser_action="quote_string" type="string">urbansim_parcel.building.vacant_residential_units</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">urbansim_parcel.building.vacant_residential_units</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 3, })</argument>
            <argument name="location_set" type="string">building</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string"/>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" name="simulation_weight_string" type="string"/>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="sample_size_locations" type="integer">30</argument>
            <argument name="estimate_config" type="string">Resources({})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">household_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">hrm_index</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list">
              <variable_spec name=".cbd_time"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="real_estate_price_model" type="model">
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="dataset" type="string">building</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument name="outcome_attribute" parser_action="quote_string" type="string">ln_unit_price=ln(building.avg_value)</argument>
            <argument convert_blank_to_none="True" name="filter_attribute" type="string"/>
            <argument name="submodel_string" parser_action="quote_string" type="string">building_type_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <name name="name" type="string">RealEstatePriceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.real_estate_price_model</class_module>
            <class_name>RealEstatePriceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="index" type="string">repm_index</argument>
            <argument name="outcome_attribute" parser_action="quote_string" type="string">ln_unit_price=ln(building.avg_value)</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="dataset" type="string">building</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">real_estate_price_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">real_estate_price_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, repm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">real_estate_price_model_specification</argument>
            <argument convert_blank_to_none="True" name="filter_variable" type="string"/>
            <argument name="dataset" type="string">building</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel followers="submodel" hidden="Children" name="commercial" submodel_id="1" type="submodel">
            <description type="string">Commercial</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name=".cbd_time"/>
            </variable_list>
          </submodel>
          <submodel followers="submodel" hidden="Children" name="governmental" submodel_id="2" type="submodel">
            <description type="string">Governmental</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name=".cbd_time"/>
            </variable_list>
          </submodel>
          <submodel followers="submodel" hidden="Children" name="industrial" submodel_id="3" type="submodel">
            <description type="string">Industrial</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name=".cbd_time"/>
            </variable_list>
          </submodel>
          <submodel followers="submodel" hidden="Children" name="residential" submodel_id="4" type="submodel">
            <description type="string">Residential</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name=".cbd_time"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="add_projects_to_buildings" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim_zone.models.add_projects_to_buildings</class_module>
            <class_name>AddProjectsToBuildings</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AddProjectsToBuildings</name>
          </init>
          <run type="dictionary">
            <argument name="building_type_set" type="string">building_type</argument>
            <argument name="units_names" type="string">{}</argument>
            <argument name="building_set" type="string">building</argument>
            <argument name="projects" type="string">dptm_results</argument>
            <argument name="location_id_name" parser_action="quote_string" type="string">zone_id</argument>
          </run>
        </structure>
      </model>
      <model name="industrial_development_project_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'records_per_chunk':300}</argument>
            <argument name="agent_set" type="string">dptm_results['industrial']</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="submodel_string" type="string"/>
            <argument name="capacity_string" parser_action="quote_string" type="string">urbansim_zone.zone.vacant_SSS_job_space</argument>
            <argument name="location_set" type="string">zone</argument>
            <argument name="project_type" parser_action="quote_string" type="string">industrial</argument>
            <argument convert_blank_to_none="True" name="sampler" type="string"/>
            <name name="name" type="string">DevelopmentProjectLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim_zone.models.development_project_location_choice_model</class_module>
            <class_name>DevelopmentProjectLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agent_set" type="string">projects</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">industrial_development_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">industrial_development_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, projects)</output>
            <argument name="events_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="units" parser_action="quote_string" type="string">industrial_job_spaces</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">industrial_development_location_choice_model_specification</argument>
            <argument name="urbansim_constant" type="string">urbansim_constant</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="events_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="base_year" type="string">base_year</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list"/>
          </submodel>
        </specification>
      </model>
    </models>
    <templates hidden="True" name="Model Templates" parser_action="skip"/>
  </model_manager>
  <scenario_manager>
    <scenario executable="True" name="Zone_baseline" setexpanded="True" type="scenario">
      <models_to_run type="selectable_list">
        <selectable name="real_estate_price_model" type="model_choice">True</selectable>
        <selectable name="development_project_transition_model" type="model_choice">True</selectable>
        <selectable name="commercial_development_project_location_choice_model" type="model_choice">True</selectable>
        <selectable name="industrial_development_project_location_choice_model" type="model_choice">True</selectable>
        <selectable name="residential_development_project_location_choice_model" type="model_choice">True</selectable>
        <selectable name="add_projects_to_buildings" type="model_choice">True</selectable>
        <selectable name="household_transition_model" type="model_choice">True</selectable>
        <selectable name="employment_transition_model" type="model_choice">True</selectable>
        <selectable name="household_relocation_model" type="model_choice">True</selectable>
        <selectable name="household_location_choice_model" type="model_choice">True</selectable>
        <selectable name="employment_relocation_model" type="model_choice">True</selectable>
        <selectable name="employment_location_choice_model" type="model_choice">
          True
          <group_members type="string">_all_</group_members>
        </selectable>
        <selectable name="distribute_unplaced_jobs_model" type="model_choice">True</selectable>
      </models_to_run>
      <scenario_database_configuration type="string"/>
      <others type="category">
        <base_year type="integer"/>
        <years_to_run config_name="years" type="tuple">
          <firstyear type="integer"/>
          <lastyear type="integer"/>
        </years_to_run>
      </others>
      <model_system type="string">urbansim.model_coordinators.model_system</model_system>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfiguration</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="cache_directory_root" parser_action="prefix_with_opus_data_path" type="directory">runs</argument>
        <argument name="cache_from_database" type="boolean">False</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory"/>
        </argument>
        <argument name="cache_scenario_database" type="string">urbansim.model_coordinators.cache_scenario_database</argument>
        <argument name="tables_to_cache" type="selectable_list">
          <selectable name="annual_employment_control_totals" type="selectable">True</selectable>
          <selectable name="annual_household_control_totals" type="selectable">True</selectable>
          <selectable name="households" type="selectable">True</selectable>
          <selectable name="job_building_types" type="selectable">True</selectable>
          <selectable name="building_types" type="selectable">True</selectable>
          <selectable name="jobs" type="selectable">True</selectable>
          <selectable name="travel_data" type="selectable">True</selectable>
          <selectable name="zones" type="selectable">True</selectable>
          <selectable name="buildings" type="selectable">True</selectable>
          <selectable name="counties" type="selectable">True</selectable>
          <selectable name="commercial_development_location_choice_model_coefficients" type="selectable">True</selectable>
          <selectable name="commercial_development_location_choice_model_specification" type="selectable">True</selectable>
          <selectable name="commercial_employment_location_choice_model_coefficients" type="selectable">True</selectable>
          <selectable name="commercial_employment_location_choice_model_specification" type="selectable">True</selectable>
          <selectable name="home_based_employment_location_choice_model_specification" type="selectable">True</selectable>
          <selectable name="home_based_employment_location_choice_model_coefficients" type="selectable">True</selectable>
          <selectable name="industrial_employment_location_choice_model_coefficients" type="selectable">True</selectable>
          <selectable name="industrial_employment_location_choice_model_specification" type="selectable">True</selectable>
          <selectable name="industrial_development_location_choice_model_coefficients" type="selectable">True</selectable>
          <selectable name="industrial_development_location_choice_model_specification" type="selectable">True</selectable>
          <selectable name="residential_development_location_choice_model_coefficients" type="selectable">True</selectable>
          <selectable name="residential_development_location_choice_model_specification" type="selectable">True</selectable>
          <selectable name="urbansim_constants" type="selectable">True</selectable>
          <selectable name="household_location_choice_model_coefficients" type="selectable">True</selectable>
          <selectable name="household_location_choice_model_specification" type="selectable">True</selectable>
          <selectable name="household_characteristics_for_ht" type="selectable">True</selectable>
          <selectable name="annual_household_relocation_rates" type="selectable">True</selectable>
          <selectable name="annual_job_relocation_rates" type="selectable">True</selectable>
          <selectable name="base_year" type="selectable">True</selectable>
          <selectable name="cities" type="selectable">True</selectable>
          <selectable name="development_event_history" type="selectable">True</selectable>
          <selectable name="employment_adhoc_sector_group_definitions" type="selectable">True</selectable>
          <selectable name="employment_adhoc_sector_groups" type="selectable">True</selectable>
          <selectable name="employment_sectors" type="selectable">True</selectable>
          <selectable name="race_names" type="selectable">True</selectable>
          <selectable name="target_vacancies" type="selectable">True</selectable>
          <selectable name="jobs_for_estimation" type="selectable">True</selectable>
          <selectable name="households_for_estimation" type="selectable">True</selectable>
        </argument>
        <argument name="tables_to_cache_nchunks" type="dictionary"/>
        <argument name="tables_to_copy_to_previous_years" type="dictionary"/>
      </creating_baseyear_cache_configuration>
    </scenario>
  </scenario_manager>
  <debuglevel type="integer">4</debuglevel>
  <base_year type="integer"/>
  <cache_directory type="string"/>
</opus_project>
-->