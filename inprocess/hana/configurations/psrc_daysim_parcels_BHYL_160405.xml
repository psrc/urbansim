<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <project_name hidden="True" type="string">opus_daysim</project_name>
    <expression_library type="dictionary"></expression_library>
    <available_datasets type="list">[]</available_datasets>
    <spatial_datasets type="list">[]</spatial_datasets>
  </general>
  <model_manager>
  </model_manager>
  <scenario_manager>
    <scenario executable="True" name="daysim_scenario" type="scenario">
      <model_system type="string">urbansim.model_coordinators.model_system</model_system>
      <base_year type="integer">2014</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2014</firstyear>
        <lastyear type="integer">2014</lastyear>
      </years_to_run>
      <models_to_run config_name="models" type="selectable_list">
      </models_to_run>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="FALSE" type="string">CreatingBaseyearCacheConfiguration</class_name>
        <class_module hidden="FALSE" type="string">opus_core.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2014SoundCastData</argument>
        <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2014SoundCastData/Cache</argument>
        <argument name="cache_from_database" type="boolean">False</argument>
      </creating_baseyear_cache_configuration>
      <dataset_pool_configuration type="class">
        <class_name hidden="FALSE" type="string">DatasetPoolConfiguration</class_name>
        <class_module hidden="FALSE" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
        <argument name="package_order" type="list">['urbansim_parcel', 'urbansim', 'opus_core']</argument>
      </dataset_pool_configuration>
      <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
      </datasets_to_preload>
      <travel_model_configuration type="dictionary">
        <urbansim_to_tm_variable_mapping type="dictionary">
          <parcels type="dictionary">
            <variable name="parcelid" type="string">parcel.parcel_id</variable>
            <variable name="xcoord_p" type="string">parcel.x_coord_sp</variable>
            <variable name="ycoord_p" type="string">parcel.y_coord_sp</variable>
            <variable name="sqft_p" type="string">parcel.parcel_sqft</variable>
            <variable name="taz_p" type="string">parcel.zone_id</variable>
            <variable name="lutype_p" type="string">parcel.land_use_type_id</variable>
            <variable name="hh_p" type="string">(urbansim_parcel.parcel.number_of_households).astype(int32)</variable>
            <variable name="stugrd_p" type="string">(parcel.aggregate(school.student_count * (psrc_parcel.school.is_in_category_2 + psrc_parcel.school.is_in_category_3))).astype(int32)</variable>
            <variable name="stuhgh_p" type="string">(parcel.aggregate(school.student_count * psrc_parcel.school.is_in_category_4)).astype(int32)</variable>
            <variable name="stuuni_p" type="string">(parcel.aggregate(school.student_count * psrc_parcel.school.is_in_category_5)).astype(int32)</variable>
            <!-- <variable name="stugrd_p" type="string">(parcel.aggregate((psrc_parcel.person.student &lt; 3) * ((psrc_parcel.person.age_category==1) +  (psrc_parcel.person.age_category==2) + (psrc_parcel.person.age_category==3)), intermediates=[school])).astype(int32)</variable>
            <variable name="stuhgh_p" type="string">(parcel.aggregate((psrc_parcel.person.student &lt; 3) * (psrc_parcel.person.age_category==4), intermediates=[school])).astype(int32)</variable>
            <variable name="stuuni_p" type="string">(parcel.aggregate((psrc_parcel.person.student &lt; 3) * (psrc_parcel.person.age_category==5), intermediates=[school])).astype(int32)</variable> -->
            <variable name="empedu_p" type="string">(parcel.aggregate((job.sector_id==15) + (job.sector_id==19), intermediates=[building])).astype(int32)</variable>
            <variable name="empfoo_p" type="string">(parcel.aggregate(job.sector_id==14, intermediates=[building])).astype(int32)</variable>
            <variable name="empgov_p" type="string">(parcel.aggregate(job.sector_id==18, intermediates=[building])).astype(int32)</variable>
            <variable name="empind_p" type="string">(parcel.aggregate((job.sector_id &gt; 2) * (job.sector_id &lt; 10) * (job.sector_id &lt;&gt; 7), intermediates=[building])).astype(int32)</variable>
            <variable name="empmed_p" type="string">(parcel.aggregate(job.sector_id==16, intermediates=[building])).astype(int32)</variable>
            <variable name="empofc_p" type="string">(parcel.aggregate((job.sector_id &gt; 9) * (job.sector_id &lt; 14), intermediates=[building])).astype(int32)</variable>
            <variable name="empret_p" type="string">(parcel.aggregate(job.sector_id==7, intermediates=[building])).astype(int32)</variable>
            <variable name="empsvc_p" type="string">(parcel.aggregate(job.sector_id==17, intermediates=[building])).astype(int32)</variable>
            <variable name="empoth_p" type="string">(parcel.aggregate((job.sector_id==1) + (job.sector_id==2), intermediates=[building])).astype(int32)</variable>
            <variable name="emprsc_p" type="string">(parcel.aggregate(job.sector_id &gt; 19, intermediates=[building])).astype(int32)</variable> # zeros
         	  <variable name="emptot_p" type="string">(urbansim_parcel.parcel.number_of_jobs).astype(int32)</variable>
            <variable name="parkdy_p" type="string">(parcel.parking_space_daily).astype(int32)</variable>
            <variable name="parkhr_p" type="string">(parcel.parking_space_hourly).astype(int32)</variable>
            <variable name="ppricdyp" type="string">(parcel.parking_price_daily * 100).astype(int32)</variable>
            <variable name="pprichrp" type="string">(parcel.parking_price_hourly * 100).astype(int32)</variable>
          </parcels>
          <!-- <buildings type="dictionary">
        	<variable type="string" name="building_id">building.building_id</variable>
        	<variable type="string" name="building_type_id">building.building_type_id</variable>
        	<variable type="string" name="improvement_value">building.improvement_value</variable>
        	<variable type="string" name="land_area">building.land_area</variable>
        	<variable type="string" name="non_residential_sqft">building.non_residential_sqft</variable>
        	<variable type="string" name="parcel_id">building.parcel_id</variable>
        	<variable type="string" name="residential_units">building.residential_units</variable>
        	<variable type="string" name="sqft_per_unit">building.sqft_per_unit</variable>
        	<variable type="string" name="stories">building.stories</variable>
        	<variable type="string" name="year_built">building.year_built</variable>
        </buildings> -->
        </urbansim_to_tm_variable_mapping>
        <daysim_file type="dictionary">
          <!--format type="string">hdf5g</format> -->
          <format type="string">dat</format>
          <hdf5_compression convert_blank_to_none="True" type="string">gzip</hdf5_compression>
          <name type="string">parcels_urbansim</name>
        </daysim_file>
        <models type="selectable_list">
          <selectable name="inprocess.hana.opus_daysim.models.get_cache_data_into_daysim" type="selectable">True</selectable>
          <selectable name="inprocess.hana.opus_daysim.models.run_daysim_travel_model" type="selectable">False</selectable>
          <selectable name="inprocess.hana.opus_daysim.models.get_daysim_data_into_cache" type="selectable">False</selectable>
        </models>
        <daysim_base_directory parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2014SoundCastData</daysim_base_directory>
        <years_to_run key_name="year" type="category_with_special_keys">
          <run_description type="dictionary">
            <year type="integer">2014</year>
            <daysim_exchange_dir type="string">urbansim_outputs/2014</daysim_exchange_dir>
          </run_description>
          <!-- <run_description type="dictionary">
            <year type="integer">2041</year>
            <daysim_exchange_dir type="string">urbansim_outputs/2040</daysim_exchange_dir>
          </run_description> -->
        </years_to_run>
      </travel_model_configuration>
    </scenario>
  </scenario_manager>
  <results_manager>
    <simulation_runs name="Simulation Runs" setexpanded="True" type="all_source_data">
      <run hidden="Children" name="run_2016_04_06_11_15" run_id="1" type="source_data">
        <scenario_name type="string">daysim_scenario</scenario_name>
        <cache_directory type="string">e:\opusgit\urbansim_data\data\psrc_parcel\2014SoundCastData\run_1.run_2016_04_06_11_15</cache_directory>
        <start_year type="integer">2014</start_year>
        <end_year type="integer">2014</end_year>
        <status type="integer">running</status>
      </run>
      <run hidden="Children" name="run_2016_04_06_11_07" run_id="1" type="source_data">
        <scenario_name type="string">daysim_scenario</scenario_name>
        <cache_directory type="string">c:\opusgit\urbansim_data\data\psrc_parcel\2014SoundCastData\run_1.run_2016_04_06_11_07</cache_directory>
        <start_year type="integer">2014</start_year>
        <end_year type="integer">2014</end_year>
        <status type="integer">running</status>
      </run>
    </simulation_runs>
  </results_manager>
</opus_project>
