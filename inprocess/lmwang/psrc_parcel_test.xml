<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <description type="string">Configuration for the PSRC parcel project</description>
    <parent type="file">psrc_parcel/configs/psrc_parcel.xml</parent>
    <expression_library type="dictionary">
      <variable use="both" source="expression" name="job.is_in_employment_sector_group_basic" type="variable_definition">urbansim.job.is_in_employment_sector_group_basic</variable>
      <variable use="both" source="expression" name="household_x_building_type.lninc_sf" type="variable_definition">ln(household.income) * (building_type.building_type_id==19)</variable>
      <variable use="both" source="expression" name="household_x_building_type.lninc_mobile" type="variable_definition">ln(household.income) * (building_type.building_type_id==11)</variable>
      <variable use="both" source="expression" name="household_x_building_type.lninc_condo" type="variable_definition">ln(household.income) * (building_type.building_type_id==4)</variable>
      <variable use="both" source="expression" name="building_type.ln_units_sf" type="variable_definition">ln(building_type.aggregate(building.residential_units)) * (building_type.building_type_id==19)</variable>
      <variable use="both" source="expression" name="building_type.ln_units_mobile" type="variable_definition">ln(building_type.aggregate(building.residential_units)) * (building_type.building_type_id==11)</variable>
      <variable use="both" source="expression" name="building_type.ln_units_condo" type="variable_definition">ln(building_type.aggregate(building.residential_units)) * (building_type.building_type_id==4)</variable>
      <variable use="both" source="expression" name="building_type.bldg_type_sf" type="variable_definition">building_type.building_type_id==19</variable>
      <variable use="both" source="expression" name="building_type.bldg_type_mobile" type="variable_definition">building_type.building_type_id==11</variable>
      <variable use="both" source="expression" name="building_type.bldg_type_condo" type="variable_definition">building_type.building_type_id==4</variable>
      <variable use="both" source="expression" name="household_x_car.cbd_time_car3" type="variable_definition">household.disaggregate(building.disaggregate(zone.travel_time_to_cbd)) * (car.car_id==3)</variable>
      <variable use="both" source="expression" name="household_x_car.cbd_time_car2" type="variable_definition">household.disaggregate(building.disaggregate(zone.travel_time_to_cbd)) * (car.car_id==2)</variable>
      <variable use="both" source="expression" name="household_x_car.cbd_time_car0" type="variable_definition">household.disaggregate(building.disaggregate(zone.travel_time_to_cbd)) * (car.car_id==0)</variable>
      <variable use="both" source="expression" name="household_x_car.persons_car3" type="variable_definition">household.persons * (car.car_id==3)</variable>
      <variable use="both" source="expression" name="household_x_car.persons_car2" type="variable_definition">household.persons * (car.car_id==2)</variable>
      <variable use="both" source="expression" name="household_x_car.persons_car0" type="variable_definition">household.persons * (car.car_id==0)</variable>
      <variable use="both" source="expression" name="household_x_car.income_car3" type="variable_definition">household.income * (car.car_id==3)</variable>
      <variable use="both" source="expression" name="household_x_car.income_car2" type="variable_definition">household.income * (car.car_id==2)</variable>
      <variable use="both" source="expression" name="household_x_car.income_car0" type="variable_definition">household.income * (car.car_id==0)</variable>
      <variable use="both" source="expression" name="car.car3" type="variable_definition">car.car_id==3</variable>
      <variable use="both" source="expression" name="car.car2" type="variable_definition">car.car_id==2</variable>
      <variable use="both" source="expression" name="car.car0" type="variable_definition">car.car_id==0</variable>
      <variable use="model variable" source="expression" name="household_x_building.ln_inc_avg_inc" type="variable_definition">ln_bounded(urbansim.household.income) * ln(building.aggregate(household.income, function=mean))</variable>
      <variable use="model variable" source="expression" name="household_x_building.disposable_inc_0" type="variable_definition">(household.income - ((urbansim_parcel.building.unit_price/10.) * urbansim_parcel.building.building_sqft_per_unit))&lt;0</variable>
      <variable use="both" source="expression" name="parcel.ln_total_price" type="variable_definition">ln(parcel.total_price)</variable>
      <variable use="both" source="expression" name="building_type.bldg_type_ln_units" type="variable_definition">ln(building_type.aggregate(building.residential_units))</variable>
      <variable use="both" source="expression" name="large_area.ln_units" type="variable_definition">ln(large_area.aggregate(building.residential_units,intermediates=[parcel,zone,faz]))</variable>
      <variable use="both" source="expression" name="household.res_to_cbd_time" type="variable_definition">household.disaggregate(building.disaggregate(zone.travel_time_to_cbd))</variable>
      <variable use="both" source="primary attribute" name="household.persons" type="variable_definition">household.persons</variable>
      <variable use="both" source="primary attribute" name="household.children" type="variable_definition">household.children</variable>
      <variable use="both" source="primary attribute" name="household.income" type="variable_definition">household.income</variable>
      <variable source="expression" type="variable_definition" use="both" name="parcel.wgt_logsum">parcel.disaggregate(zone.aggregate(psrc_parcel.household.trip_weighted_average_logsum_hbw_am_from_residence, intermediates=[parcel], function=mean))</variable>
      <variable source="Python class" type="variable_definition" use="model variable" name="building.is_tcu_building">urbansim.building.is_tcu</variable>
      <variable source="Python class" type="variable_definition" use="model variable" name="building.is_warehousing_building">urbansim.building.is_warehousing</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="building.lnavginc_bldg">(ln(building.disaggregate(urbansim_parcel.zone.average_income))).astype(float32)</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="building.lnempden_bldg">(ln(building.disaggregate(urbansim_parcel.zone.number_of_jobs_per_acre))).astype(float32)</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="building.lnemp30da_bldg">(ln(building.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))).astype(float32)</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="building.ln_nonresidential_sqft">(ln(building.non_residential_sqft)).astype(float32)</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="building.inugb_bldg">building.disaggregate(parcel.is_inside_urban_growth_boundary==True)</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="building.retail_food_empden">ln_bounded(building.disaggregate(urbansim.gridcell.sector_7_employment_within_walking_distance + urbansim.gridcell.sector_14_employment_within_walking_distance + urbansim.gridcell.sector_17_employment_within_walking_distance))</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="parcel.lnretempwa">ln_bounded(parcel.disaggregate(urbansim.gridcell.sector_7_employment_within_walking_distance + urbansim.gridcell.sector_14_employment_within_walking_distance + urbansim.gridcell.sector_17_employment_within_walking_distance))</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="job_x_building.sector_density_in_zone">(urbansim_parcel.job_x_building.same_sector_employment_in_zone)/(building.disaggregate(urbansim_parcel.zone.number_of_jobs))</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="job_x_building.sector_density_in_building">(urbansim_parcel.job_x_building.same_sector_employment_in_building)/(urbansim_parcel.building.employment)</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="building.ln_residential_units">ln(psrc_parcel.building.residential_units)</variable>
      <variable use="model variable" source="expression" name="household_x_building.disposable_inc" type="variable_definition">ln_bounded(household.income - ((urbansim_parcel.building.unit_price/10.) * urbansim_parcel.building.building_sqft_per_unit))</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="household_x_building.b_same_area_type">(urbansim_parcel.household.residence_area_type_id_lag1 == building.disaggregate(zone.area_type_id))</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="household_x_building.c_same_area">(urbansim_parcel.household.residence_large_area_id_lag1 == building.disaggregate(faz.large_area_id))</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="building.d_kitsap_dummy">building.disaggregate(zone.district_id)==19</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="building.lnpopden_bldg">(ln(building.disaggregate(urbansim_parcel.zone.population_per_acre))).astype(float32)</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="household_x_building.inc_x_mfr">ln(household.income) * urbansim.building.is_multi_family_residential</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="household_x_building.kids_x_kids">(household.children &gt; 0) * building.disaggregate(psrc_parcel.parcel.percent_households_with_children_within_walking_distance)</variable>
      <variable source="primary attribute" type="variable_definition" use="model variable" name="building.sqft_per_unit">building.sqft_per_unit</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="household_x_building.retiree_logsum">(household.workers==0) * (((psrc.household.logsum_income_break==1) * building.disaggregate(psrc.zone.trip_weighted_average_logsum_hbw_am_income_1)) + ((psrc.household.logsum_income_break==2) * building.disaggregate(psrc.zone.trip_weighted_average_logsum_hbw_am_income_2)) + ((psrc.household.logsum_income_break==3) * building.disaggregate(psrc.zone.trip_weighted_average_logsum_hbw_am_income_3)) + ((psrc.household.logsum_income_break==4) * building.disaggregate(psrc.zone.trip_weighted_average_logsum_hbw_am_income_4)))</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="building.neigh_shopping">ln_bounded(building.disaggregate(urbansim.gridcell.sector_7_employment_within_walking_distance + urbansim.gridcell.sector_14_employment_within_walking_distance + urbansim.gridcell.sector_17_employment_within_walking_distance))</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="household_x_building.inc_x_condo">ln(household.income) * (building.disaggregate(building_type.building_type_name=='condo_residential'))</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="household.HLCM_inmigrant_logsum_placeholder">(household.persons &gt; 1)</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="household_x_building.HLCM_relocation_distance">sqrt((urbansim_parcel.household.residence_x_coord_utm_lag1 - building.disaggregate(parcel.x_coord_utm))**2 + (urbansim_parcel.household.residence_y_coord_utm_lag1 - building.disaggregate(parcel.y_coord_utm))**2)</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="household_x_building.one_pers_not_SFR">(psrc_parcel.household.persons &lt; 2) * numpy.logical_not(building.disaggregate(building_type.building_type_name == 'single_family_residential'))</variable>
      <variable source="expression" type="variable_definition" use="indicator" name="alldata.mWh_warehouse">alldata.aggregate_all((building_type_id==21) * (0.167985837507508*((building.non_residential_sqft*76.7402597402598)**0.794983208848567)/1000))</variable>
      <variable source="expression" type="variable_definition" use="indicator" name="alldata.mWh_industrial">alldata.aggregate_all((building_type_id==8) * (0.592432917046314*((building.non_residential_sqft*69.266667)**0.71932731516575)/1000))</variable>
      <variable source="expression" type="variable_definition" use="indicator" name="alldata.mWh_commercial">alldata.aggregate_all((building_type_id==13) * (0.167985837507508*((building.non_residential_sqft*72.2694610778443)**0.852810441060376)/1000))</variable>
      <variable source="expression" type="variable_definition" use="indicator" name="alldata.mWh_office">alldata.aggregate_all((building_type_id==13) * (0.167985837507508*((building.non_residential_sqft*71.9572192513369)**0.870670615342877)/1000))</variable>
      <variable source="expression" type="variable_definition" use="indicator" name="alldata.DT_warehouse">alldata.aggregate_all((building_type_id==21) * (4.56407900829167*((building.non_residential_sqft*72.2694610778443)**0.839149462372598)/1000))</variable>
      <variable source="expression" type="variable_definition" use="indicator" name="alldata.DT_industrial">alldata.aggregate_all((building_type_id==8) * (3.26025234129649*((building.non_residential_sqft*69.266667)**0.85974584631451)/1000))</variable>
      <variable source="expression" type="variable_definition" use="indicator" name="alldata.DT_commercial">alldata.aggregate_all((building_type_id==3) * (4.56407900829167*((building.non_residential_sqft*76.7402597402598)**0.900816907407043)/1000))</variable>
      <variable source="expression" type="variable_definition" use="indicator" name="alldata.DT_office">alldata.aggregate_all((building_type_id==13) * (4.56407900829167*((building.non_residential_sqft*71.9572192513369)**0.918028649878677)/1000))</variable>
      <variable source="expression" type="variable_definition" use="indicator" name="alldata.mWh_MFR">alldata.aggregate_all(numpy.logical_or(building_type_id==4, building_type_id==12)*(1070.05610454517*(building.sqft_per_unit**0.233835573984113)*(urbansim_parcel.building.population**0.243480457884833))/1000)</variable>
      <variable source="expression" type="variable_definition" use="indicator" name="alldata.mWh_SFR">alldata.aggregate_all((building_type_id==19)*(1.07005610454517*(building.sqft_per_unit**0.26777268339652)*(urbansim_parcel.building.population**0.327430889246641))/1000)</variable>
      <variable source="expression" type="variable_definition" use="indicator" name="alldata.DT_MFR">alldata.aggregate_all(numpy.logical_or(building_type_id==4, building_type_id==12)*(15263.8827561569*(building.sqft_per_unit**0.175119347951687)*(urbansim_parcel.building.population**0.176685367896758))/1000)</variable>
      <variable source="expression" type="variable_definition" use="indicator" name="alldata.DT_SFR">alldata.aggregate_all((building_type_id==19)*(15263.8827561569*(building.sqft_per_unit**0.174959576764467)*(urbansim_parcel.building.population**0.174022989924159))/1000)</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="building.ln_unit_price">ln(urbansim_parcel.building.unit_price)</variable>
      <variable source="Python class" type="variable_definition" use="model variable" name="building.building_sqft_per_job">urbansim_parcel.building.building_sqft_per_job</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="building.ln_building_sqft_per_job">ln(urbansim_parcel.building.building_sqft_per_job)</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="parcel.area_value">(parcel.aggregate(urbansim_parcel.building.unit_price*urbansim_parcel.building.building_sqft))/parcel.parcel_sqft</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="parcel.parcel_value">parcel.aggregate(urbansim_parcel.building.unit_price*urbansim_parcel.building.building_sqft)</variable>
      <variable source="Python class" type="variable_definition" use="model variable" name="parcel.building_sqft">urbansim_parcel.parcel.building_sqft</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="parcel.jobs_per_area">(urbansim_parcel.parcel.employment)/parcel.parcel_sqft.astype(float32)</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="parcel.DU_per_area">(urbansim_parcel.parcel.residential_units)/parcel.parcel_sqft.astype(float32)</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="parcel.nr_sqft_per_area">(parcel.aggregate(building.non_residential_sqft))/parcel.parcel_sqft</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="building.zavgnrval">building.disaggregate(zone.aggregate(urbansim_parcel.parcel.area_value*(urbansim_parcel.parcel.employment &gt; 0), function=mean))</variable>
      <variable dataset="person_trip_x_zone" use="model variable" source="Python class" name="single_vehicle_to_work_travel_time" type="variable_definition">urbansim.person_trip_x_zone.from_origin_to_destination_travel_data_am_single_vehicle_to_work_travel_time</variable>
      <variable dataset="None" use="model variable" source="expression" name="income_x_num_of_retail_jobs" type="variable_definition">person_trip.disaggregate(household.income, intermediates=[person]) * urbansim_parcel.zone.number_of_jobs_of_sector_14</variable>
      <variable dataset="person_trip_x_zone" use="model variable" source="Python class" name="single_vehicle_to_destination_travel_cost" type="variable_definition">urbansim.person_trip_x_zone.single_vehicle_to_destination_travel_cost</variable>
      <variable dataset="zone" use="model variable" source="Python class" name="zone_retail" type="variable_definition">urbansim_parcel.zone.number_of_jobs_of_sector_14</variable>
      <variable dataset="travel_data" use="model variable" source="primary attribute" name="zone_id" type="variable_definition">travel_data.to_zone_id</variable>
      <variable dataset="zone" use="model variable" source="expression" name="origin_zone_avg_bike_travel_time" type="variable_definition">urbansim.zone.origin_zone_sum_travel_data_am_bike_to_work_travel_time/urbansim.zone.origin_zone_sum_travel_data_am_biking_person_trips</variable>
      <variable dataset="zone" use="both" source="expression" name="destination_zone_avg_bike_travel_time" type="variable_definition">safe_array_divide(urbansim.zone.destination_zone_sum_travel_data_aggregate_am_bike_to_work_travel_time, urbansim.zone.destination_zone_sum_travel_data_am_biking_person_trips)</variable>
      <variable dataset="person_trip" use="model variable" source="Python class" name="time_5" type="variable_definition">urbansim.person_trip.travel_data_am_walk_time_in_minutes</variable>
      <variable dataset="person_trip_x_mode" name="time" source="expression" type="variable_definition" use="both">person_trip_x_mode.agent_times_choice(time)</variable>
      <variable dataset="person_trip" name="time_4" source="Python class" type="variable_definition" use="model variable">urbansim.person_trip.travel_data_am_walk_time_in_minutes</variable>
      <variable dataset="person_trip" name="time_3" source="Python class" type="variable_definition" use="model variable">urbansim.person_trip.travel_data_am_total_transit_time_walk</variable>
      <variable dataset="person_trip" name="time_1" source="Python class" type="variable_definition" use="model variable">urbansim.person_trip.travel_data_am_single_vehicle_to_work_travel_time</variable>
      <variable dataset="person_trip" name="time_2" source="Python class" type="variable_definition" use="model variable">urbansim.person_trip.travel_data_am_double_vehicle_to_work_travel_time</variable>
      <variable dataset="person_trip" name="travel_data_retail" source="Python class" type="variable_definition" use="model variable">urbansim.person_trip.destination_zone_number_of_jobs</variable>
      <variable use="model variable" source="expression" name="building.Kitsap" type="variable_definition">building.disaggregate(faz.fazdistrict_id) == 6</variable>
      <variable use="model variable" source="expression" name="household_x_building.renter_x_is_mfr" type="variable_definition">household.tenure == 3 * urbansim.building.is_multi_family_residential</variable>
      <variable use="model variable" source="expression" name="household_x_building.zero_workers_x_avg_work_logsum" type="variable_definition">(household.workers==0) * ( ((psrc.household.logsum_income_break==1) * building.disaggregate(psrc.zone.trip_weighted_average_logsum_hbw_am_income_1)) + ((psrc.household.logsum_income_break==2) * building.disaggregate(psrc.zone.trip_weighted_average_logsum_hbw_am_income_2)) + ((psrc.household.logsum_income_break==3) * building.disaggregate(psrc.zone.trip_weighted_average_logsum_hbw_am_income_3)) + ((psrc.household.logsum_income_break==4) * building.disaggregate(psrc.zone.trip_weighted_average_logsum_hbw_am_income_4)) )</variable>
      <variable use="model variable" source="expression" name="household_x_building.neigh_shopping" type="variable_definition">ln_bounded(building.disaggregate(urbansim.gridcell.sector_7_employment_within_walking_distance + urbansim.gridcell.sector_14_employment_within_walking_distance + urbansim.gridcell.sector_17_employment_within_walking_distance))</variable>
      <variable use="model variable" source="expression" name="household_x_building.E_max_commute_logsum" type="variable_definition">psrc_parcel.household_x_building.max_logsum_hbw_am_from_home_to_work</variable>
      <variable use="model variable" source="expression" name="household_x_building.E_max_commute_distance" type="variable_definition">psrc_parcel.household_x_building.worker1_network_distance_from_home_to_work</variable>
      <variable use="model variable" source="expression" name="person.kemp30m" type="variable_definition">person.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone, intermediates=[household])/1000</variable>
      <variable use="model variable" source="expression" name="person.age13" type="variable_definition">person.disaggregate(urbansim_parcel.household.persons_with_age_le_13&gt;0)</variable>
      <variable use="model variable" source="expression" name="person.parttime" type="variable_definition">person.employment_status==2</variable>
      <variable use="model variable" source="primary attribute" name="person.age" type="variable_definition">person.age</variable>
      <variable use="model variable" source="expression" name="person.age0_24" type="variable_definition">person.age&lt;=24</variable>
      <variable use="model variable" source="expression" name="person.age25_34" type="variable_definition">numpy.logical_and(person.age&gt;=25, person.age&lt;=34)</variable>
      <variable use="model variable" source="expression" name="person.age35_64" type="variable_definition">numpy.logical_and(person.age&gt;=35, person.age&lt;=64)</variable>
      <variable use="model variable" source="expression" name="person.age65_" type="variable_definition">person.age&gt;=65</variable>
      <variable use="model variable" source="primary attribute" name="person.edu" type="variable_definition">person.edu</variable>
      <variable use="model variable" source="expression" name="person.edu_lths" type="variable_definition">numpy.in1d(person.edu,(1,))</variable>
      <variable use="model variable" source="expression" name="person.edu_lehs" type="variable_definition">numpy.in1d(person.edu,(1,2))</variable>
      <variable use="model variable" source="expression" name="person.edu_hspa" type="variable_definition">numpy.in1d(person.edu,(2,4,5))</variable>
      <variable use="model variable" source="expression" name="person.edu_college" type="variable_definition">numpy.in1d(person.edu,(3,6,7))</variable>
      <variable use="model variable" source="expression" name="person.edu_pg" type="variable_definition">numpy.in1d(person.edu,(7,))</variable>
      <variable use="model variable" source="expression" name="person.edu_adv" type="variable_definition">numpy.in1d(person.edu,(6,7))</variable>
      <variable use="model variable" source="expression" name="person_x_job.hh_income_x_job_is_in_employment_sector_group_fires" type="variable_definition">person.disaggregate(household.income) * urbansim.job.is_in_employment_sector_group_fires</variable>
      <variable use="model variable" source="expression" name="household_x_job.hh_income_x_job_is_in_employment_sector_group_fires" type="variable_definition">household.income * urbansim.job.is_in_employment_sector_group_fires</variable>
      <variable use="model variable" source="expression" name="person_x_job.edu_x_job_is_in_employment_sector_group_basic" type="variable_definition">person.edu * urbansim.job.is_in_employment_sector_group_basic</variable>
      <variable use="model variable" source="expression" name="household_x_job.w1edu_x_job_is_in_employment_sector_group_basic" type="variable_definition">household.aggregate(person.edu*person.worker1) * urbansim.job.is_in_employment_sector_group_basic</variable>
      <variable use="model variable" source="expression" name="person_x_job.edu_college_x_job_is_in_employment_sector_group_basic" type="variable_definition">psrc_parcel.person.edu_college * (urbansim.job.is_in_employment_sector_group_basic)</variable>
      <variable use="model variable" source="expression" name="household_x_job.w1edu_college_x_job_is_in_employment_sector_group_basic" type="variable_definition">household.aggregate(psrc_parcel.person.edu_college*person.worker1) * (urbansim.job.is_in_employment_sector_group_basic)</variable>
      <variable use="model variable" source="expression" name="person_x_job.edu_x_job_is_in_employment_sector_group_fires" type="variable_definition">person.edu * urbansim.job.is_in_employment_sector_group_fires</variable>
      <variable use="model variable" source="expression" name="household_x_job.w1edu_x_job_is_in_employment_sector_group_fires" type="variable_definition">household.aggregate(person.edu*person.worker1) * urbansim.job.is_in_employment_sector_group_fires</variable>
      <variable use="model variable" source="expression" name="person_x_job.edu_college_x_job_is_in_employment_sector_group_fires" type="variable_definition">psrc_parcel.person.edu_college * urbansim.job.is_in_employment_sector_group_fires</variable>
      <variable use="model variable" source="expression" name="household_x_job.w1edu_college_x_job_is_in_employment_sector_group_fires" type="variable_definition">household.aggregate(psrc_parcel.person.edu_college*person.worker1) * urbansim.job.is_in_employment_sector_group_fires</variable>
      <variable use="model variable" source="expression" name="person_x_job.edu_x_job_is_in_employment_sector_group_retail" type="variable_definition">person.edu * urbansim.job.is_in_employment_sector_group_retail</variable>
      <variable use="model variable" source="expression" name="person_x_job.edu_college_x_job_is_in_employment_sector_group_retail" type="variable_definition">psrc_parcel.person.edu_college * urbansim.job.is_in_employment_sector_group_retail</variable>
      <variable use="model variable" source="expression" name="household_x_job.w1edu_college_x_job_is_in_employment_sector_group_retail" type="variable_definition">household.aggregate(psrc_parcel.person.edu_college*person.worker1) * urbansim.job.is_in_employment_sector_group_retail</variable>
      <variable use="model variable" source="expression" name="person_x_job.edu_x_job_is_in_employment_sector_group_services" type="variable_definition">person.edu * urbansim.job.is_in_employment_sector_group_services</variable>
      <variable use="model variable" source="expression" name="household_x_job.w1edu_x_job_is_in_employment_sector_group_services" type="variable_definition">household.aggregate(person.edu*person.worker1) * urbansim.job.is_in_employment_sector_group_services</variable>
      <variable use="model variable" source="expression" name="person_x_job.edu_college_x_job_is_in_employment_sector_group_services" type="variable_definition">psrc_parcel.person.edu_college * urbansim.job.is_in_employment_sector_group_services</variable>
      <variable use="model variable" source="expression" name="household_x_job.w1edu_college_x_job_is_in_employment_sector_group_services" type="variable_definition">household.aggregate(psrc_parcel.person.edu_college*person.worker1) * urbansim.job.is_in_employment_sector_group_services</variable>
      <variable use="model variable" source="expression" name="person_x_job.edu_x_job_is_in_employment_sector_group_edu" type="variable_definition">person.edu * urbansim.job.is_in_employment_sector_group_edu</variable>
      <variable use="model variable" source="expression" name="household_x_job.edu_x_job_is_in_employment_sector_group_edu" type="variable_definition">household.aggregate(person.edu*person.worker1) * urbansim.job.is_in_employment_sector_group_edu</variable>
      <variable use="model variable" source="expression" name="person_x_job.edu_college_x_job_is_in_employment_sector_group_edu" type="variable_definition">psrc_parcel.person.edu_college * urbansim.job.is_in_employment_sector_group_edu</variable>
      <variable use="model variable" source="expression" name="household_x_job.w1edu_college_x_job_is_in_employment_sector_group_edu" type="variable_definition">household.aggregate(psrc_parcel.person.edu_college*person.worker1) * urbansim.job.is_in_employment_sector_group_edu</variable>
      <!-- -->
      <variable use="model variable" source="Python class" name="person_x_job.logsum_hbw_am_from_home_to_work" type="variable_definition">psrc_parcel.person_x_job.logsum_hbw_am_from_home_to_work</variable>
      <variable use="model variable" source="Python class" name="household_x_job.logsum_hbw_am_from_home_to_work" type="variable_definition">psrc_parcel.person_x_job.logsum_hbw_am_from_home_to_work</variable>
      <variable use="model variable" source="Python class" name="person_x_job.network_distance_from_home_to_work" type="variable_definition">psrc_parcel.person_x_job.network_distance_from_home_to_work</variable>
      <variable use="model variable" source="Python class" name="person_x_job.network_distance_from_home_to_work" type="variable_definition">psrc_parcel.person_x_job.network_distance_from_home_to_work</variable>
      <variable use="both" source="Python class" name="person_x_job.network_distance_between_worker1_worker2_workplaces" type="variable_definition">psrc_parcel.person_x_job.network_distance_between_worker1_worker2_workplaces</variable>
      <variable use="both" source="Python class" name="person_x_job.worker1_worker2_in_same_sector" type="variable_definition">(person.worker1==1)*(psrc_parcel.person.sector_id_of_worker2 == job.sector_id) + (person.worker2==1) * (psrc_parcel.person.sector_id_of_worker1 == job.sector_id) </variable>
      <variable use="both" source="Python class" name="person_x_job.worker1_worker2_work_in_same_zone" type="variable_definition">(person.worker1==1)*(psrc_parcel.person.workplace_of_worker2 == urbansim_parcel.job.zone_id) + (person.worker2==1) * (psrc_parcel.person.workplace_of_worker1 == urbansim_parcel.job.zone_id) </variable>      
      <!-- -->
      <variable use="model variable" source="Python class" name="person_x_job.home_district_is_same_as_workplace_district" type="variable_definition">psrc_parcel.person_x_job.home_district_is_same_as_workplace_district</variable>
      <variable use="model variable" source="expression" name="household_x_job.home_district_is_same_as_workplace_district" type="variable_definition">household.disaggregate(zone.district_id) == job.disaggregate(zone.district_id)</variable>
      <variable use="model variable" source="Python class" name="person_x_job.home_area_type_1_workplace_area_type_2" type="variable_definition">psrc_parcel.person_x_job.home_area_type_1_workplace_area_type_2</variable>
      <variable use="model variable" source="Python class" name="household_x_job.home_area_type_1_workplace_area_type_2" type="variable_definition">(household.disaggregate(zone.area_type_id)==1) * (job.disaggregate(zone.area_type_id)==2)</variable>
      <variable use="model variable" source="Python class" name="person_x_job.home_area_type_4_workplace_area_type_2" type="variable_definition">psrc_parcel.person_x_job.home_area_type_4_workplace_area_type_2</variable>
      <variable use="model variable" source="Python class" name="household_x_job.home_area_type_4_workplace_area_type_2" type="variable_definition">(household.disaggregate(zone.area_type_id)==4) * (job.disaggregate(zone.area_type_id)==2)</variable>
      <variable use="model variable" source="expression" name="person_x_job.home_dist_19_workplace_dist_19" type="variable_definition">(person.disaggregate(zone.district_id)==19) * (job.disaggregate(zone.district_id)==19)</variable>
      <variable use="model variable" source="Python class" name="household_x_job.home_dist_19_workplace_dist_19" type="variable_definition">(household.disaggregate(zone.district_id)==19) * (job.disaggregate(zone.district_id)==19)</variable>
      <variable use="model variable" source="expression" name="person_x_job.home_dist_6_workplace_dist_6" type="variable_definition">(person.disaggregate(zone.district_id)==6) * (job.disaggregate(zone.district_id)==6)</variable>
      <variable use="model variable" source="Python class" name="household_x_job.home_dist_6_workplace_dist_6" type="variable_definition">(household.disaggregate(zone.district_id)==6) * (job.disaggregate(zone.district_id)==6)</variable>
      <variable use="model variable" source="expression" name="person_x_job.home_dist_1_workplace_dist_1" type="variable_definition">(person.disaggregate(zone.district_id)==1) * (job.disaggregate(zone.district_id)==1)</variable>
      <variable use="model variable" source="Python class" name="household_x_job.home_dist_1_workplace_dist_1" type="variable_definition">(household.disaggregate(zone.district_id)==1) * (job.disaggregate(zone.district_id)==1)</variable>
      <variable use="both" source="Python class" name="person_x_job.household_income_x_area_type_1" type="variable_definition">psrc_parcel.person.household_income * (psrc_parcel.job.area_type_id==1) </variable>
      <variable use="both" source="Python class" name="household_x_job.household_income_x_area_type_1" type="variable_definition">household.income * (psrc_parcel.job.area_type_id==1) </variable>
      <variable use="both" source="Python class" name="person_x_job.age_x_area_type_1" type="variable_definition">psrc_parcel.person.age * (psrc_parcel.job.area_type_id==1) </variable>
      <variable use="both" source="Python class" name="household_x_job.w1age_x_area_type_1" type="variable_definition">household.aggregate(person.age*person.worker1) * (psrc_parcel.job.area_type_id==1) </variable>
      <variable use="both" source="Python class" name="person_x_job.edu_x_price_per_sqft" type="variable_definition">psrc_parcel.person.edu * (job.disaggregate(psrc_parcel.parcel.price_per_sqft, intermediates=[building])) </variable>
      <variable use="both" source="Python class" name="household_x_job.w1edu_x_price_per_sqft" type="variable_definition">household.aggregate(person.edu*person.worker1) * (job.disaggregate(psrc_parcel.parcel.price_per_sqft, intermediates=[building])) </variable>
      <variable use="both" source="Python class" name="person_x_job.edu_x_price_per_building_sqft" type="variable_definition">psrc_parcel.person.edu * (job.disaggregate(psrc_parcel.parcel.price_per_building_sqft, intermediates=[building])) </variable>
      <variable use="both" source="Python class" name="household_x_job.w1edu_x_price_per_building_sqft" type="variable_definition">household.aggregate(person.edu*person.worker1) * (job.disaggregate(psrc_parcel.parcel.price_per_building_sqft, intermediates=[building])) </variable>
      <variable use="both" source="Python class" name="person_x_job.edu_x_ln_price_per_building_sqft" type="variable_definition">psrc_parcel.person.edu * ln(job.disaggregate(psrc_parcel.parcel.price_per_building_sqft, intermediates=[building])) </variable>
      <variable use="both" source="Python class" name="household_x_job.w1edu_x_ln_price_per_building_sqft" type="variable_definition">household.aggregate(person.edu*person.worker1) * ln(job.disaggregate(psrc_parcel.parcel.price_per_building_sqft, intermediates=[building])) </variable>
      <variable use="both" source="Python class" name="person_x_job.hh_income_x_ln_price_per_building_sqft" type="variable_definition">psrc_parcel.person.household_income * ln(job.disaggregate(psrc_parcel.parcel.price_per_building_sqft, intermediates=[building])) </variable>
      <variable use="both" source="Python class" name="household_x_job.hh_income_x_ln_price_per_building_sqft" type="variable_definition">household.income * ln(job.disaggregate(psrc_parcel.parcel.price_per_building_sqft, intermediates=[building])) </variable>
      <variable use="both" source="Python class" name="person_x_job.age65_emp_status" type="variable_definition">(person.age >=65)*(job.employment_status==2) </variable>
      <variable use="both" source="Python class" name="household_x_job.w1age65_emp_status" type="variable_definition">household.aggregate((person.age >=65)*person.worker1)*(job.employment_status==2) </variable>
    </expression_library>
    <available_datasets type="list">['building_type','mode','person_trip','building','parcel','household_x_building','zone','faz','large_area','gridcell','city','county','alldata', 'person_trip_x_zone']</available_datasets>
  </general>
  <model_manager>
    <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model name="large_area_choice_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.location_choice_model</class_module>
            <class_name type="string">LocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">LocationChoiceModel</name>
            <argument name="location_set" type="string">large_area</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices</argument>
            <argument convert_blank_to_none="True" field_description="test description" name="submodel_string" type="string"/>
            <argument name="location_id_string" parser_action="quote_string" type="string">psrc_parcel.household.large_area_id</argument>
	    <argument name="filter" convert_blank_to_none="True" parser_action="quote_string" type="string"/>
            <argument convert_blank_to_none="True" name="run_config" type="string"/>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument convert_blank_to_none="True" name="chunk_specification" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(specification, coefficients, cm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">large_area_choice_model_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">large_area_choice_model_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
          </prepare_for_run>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, dummy)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(specification, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string">psrc_parcel.household.customized_est_filter</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">choice_model_template_specification</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
              <variable_list type="variable_list">
                <variable_spec name="large_area.ln_units" coefficient_name="ln_units_sf"/>
		<!--<variable_spec name="constant" coefficient_name="Single"/>-->
              </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="residential_building_type_choice_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.location_choice_model</class_module>
            <class_name type="string">LocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">LocationChoiceModel</name>
            <argument name="location_set" type="string">building_type</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices</argument>
            <argument convert_blank_to_none="True" field_description="test description" name="submodel_string" type="string"/>
            <argument name="choice_attribute_name" parser_action="quote_string" type="string">psrc_parcel.household.building_type_id</argument>
            <argument name="filter" parser_action="quote_string" type="string">numpy.setmember1d(building_type.building_type_id, (4,11,12,19))</argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"/>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument convert_blank_to_none="True" name="chunk_specification" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(specification, coefficients, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string"/>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">residential_building_type_choice_model_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">residential_building_type_choice_model_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
          </prepare_for_run>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, dummy)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(specification, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string">psrc_parcel.household.customized_est_filter</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">choice_model_template_specification</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
              <variable_list type="variable_list">
                <variable_spec name="building_type.bldg_type_condo" coefficient_name="bldg_type_condo"/>
                <variable_spec name="building_type.bldg_type_mobile" coefficient_name="bldg_type_mobile"/>
                <variable_spec name="building_type.bldg_type_sf" coefficient_name="bldg_type_sf"/>
                <variable_spec name="household_x_building_type.lninc_condo" coefficient_name="lninc_condo"/>
                <variable_spec name="household_x_building_type.lninc_mobile" coefficient_name="lninc_mobile"/>
                <variable_spec name="household_x_building_type.lninc_sf" coefficient_name="lninc_sf"/>
              </variable_list>
	    <!--
                <variable_spec name="building_type.ln_units_sf" coefficient_name="ln_units_sf"/>

          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <equation equation_id="4" name="Condominium" type="submodel_equation">
              <variable_list type="variable_list">
                <variable_spec name="building_type.bldg_type_ln_units" coefficient_name="ln_units_condo"/>
                <variable_spec name="constant" coefficient_name="Condo"/>
                <variable_spec name="household.income" coefficient_name="inc_condo"/>
              </variable_list>
            </equation>
            <equation equation_id="11" name="Mobile Home" type="submodel_equation">
              <variable_list type="variable_list">
                <variable_spec name="building_type.bldg_type_ln_units" coefficient_name="ln_units_mh"/>
                <variable_spec name="constant" coefficient_name="Mobile"/>
                <variable_spec name="household.income" coefficient_name="inc_mobile"/>
              </variable_list>
            </equation>
            <equation equation_id="19" name="Single Family" type="submodel_equation">
              <variable_list type="variable_list">
                <variable_spec name="building_type.bldg_type_ln_units" coefficient_name="ln_units_sf"/>
                <variable_spec name="constant" coefficient_name="Single"/>
                <variable_spec name="household.income" coefficient_name="inc_single"/>
              </variable_list>
            </equation>
	    -->
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="tenure_choice_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.choice_model</class_module>
            <class_name type="string">ChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">ChoiceModel</name>
            <argument name="choice_set" type="string">[1,3]</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices</argument>
            <argument convert_blank_to_none="True" field_description="test description" name="submodel_string" type="string"/>
            <argument name="choice_attribute_name" parser_action="quote_string" type="string">household.tenure</argument>
            <argument name="interaction_pkg" parser_action="quote_string" type="string">opus_core</argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"/>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument convert_blank_to_none="True" name="chunk_specification" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(specification, coefficients, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string"/>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">tenure_choice_model_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">tenure_choice_model_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
          </prepare_for_run>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, dummy)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(specification, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string">psrc_parcel.household.customized_est_filter</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">choice_model_template_specification</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <equation equation_id="1" name="Own" type="submodel_equation">
              <variable_list type="variable_list">
                <variable_spec name="constant"/>
                <variable_spec name="household.income"/>
                <variable_spec name="household.persons"/>
              </variable_list>
            </equation>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model copyable="True" hidden="False" name="work_at_home_choice_model" type="model">
        <structure type="dictionary">
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(specification, coefficients, _index)</output>
            <argument name="agent_set" type="string">person</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">work_at_home_choice_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">work_at_home_choice_model_specification</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">urbansim_parcel.person.is_worker</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </prepare_for_run>
        </structure>
        <specification type="dictionary">
          <submodel copyable="True" hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <equation equation_id="0" name="Choice 0" type="submodel_equation">
              <variable_list type="variable_list">
                <variable_spec name="person.kemp30m"/>
              </variable_list>
            </equation>
            <equation equation_id="1" name="Choice 1" type="submodel_equation">
              <variable_list type="variable_list">
                <variable_spec name="person.kemp30m"/>
                <variable_spec name="person.age35_64"/>
                <variable_spec name="person.age65_"/>
<!--
                <variable_spec name="person.age"/>
                <variable_spec name="person.age13"/>
                <variable_spec name="person.age25_34"/>

                <variable_spec name="person.age0_24"/>
                <variable_spec name="person.age"/>
                <variable_spec name="person.edu_lths"/>
                <variable_spec name="person.edu_lehs"/>
                <variable_spec name="person.edu_hspa"/>
                <variable_spec name="person.edu_pg"/>
                <variable_spec name="person.edu_adv"/>
                <variable_spec name="person.edu"/>
-->
                <variable_spec name="person.edu_college"/>
                <variable_spec name="person.kemp30m"/>
                <variable_spec name="person.parttime"/>
                <variable_spec name="constant"/>
              </variable_list>
            </equation>
          </submodel>
        </specification>
      </model>

      <model name="worker1_workplace_choice_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim_parcel.models.workplace_choice_model</class_module>
            <class_name>WorkplaceChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">WorkplaceChoiceModel</name>
            <argument name="location_set" type="string">job</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Non-home-based Workplace Choice Model for worker1</argument>
	        <argument name="short_name" parser_action="quote_string" type="string">NHBWCM</argument>
	        <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
	        <argument name="submodel_string" type="string">None</argument>
	        <argument name="filter" parser_action="quote_string" type="string">urbansim_parcel.job.is_untaken_non_home_based_job</argument>
	        <argument name="location_id_string" parser_action="quote_string" type="string">job_id=household.aggregate(person.job_id*(person.worker1==1))</argument>
                <argument name="run_config" type="dictionary">
	          <key name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</key>
	          <key name="sample_size_locations" type="integer">50</key>
	          <key name="weights_for_estimation_string" type="string">is_placed_job=(urbansim_parcel.job.zone_id &gt; 0).astype(int32)</key>
	          <key name="compute_capacity_flag" type="string">True</key>
	          <key name="capacity_string" type="string">urbansim_parcel.job.is_untaken_non_home_based_job</key>
	          <key name="lottery_max_iterations" type="integer">10</key>
	          <key name="number_of_units_string" type="string">(job.building_type==2).astype(int32)</key>
	          <key name="number_of_agents_string" type="string">job.number_of_agents(person)</key>
	        </argument>
          <argument name="estimate_config" type="dictionary">
          <key name="estimation" type="string">opus_core.bhhh_mnl_estimation</key>
          <key name="sampler" type="string">opus_core.samplers.weighted_sampler</key>
          <key name="sample_size_locations" type="integer">50</key>
          <key name="weights_for_estimation_string" type="string">is_placed_job=(urbansim_parcel.job.zone_id &gt; 0).astype(int32)</key>
          <key name="compute_capacity_flag" type="string">True</key>
          <key name="capacity_string" type="string">urbansim_parcel.job.is_untaken_non_home_based_job</key>
          </argument>
        </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">worker1_workplace_choice_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">worker1_workplace_choice_model_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string">household</argument>
            <argument name="agents_index" type="string">None</argument>
	    <argument name="agents_filter" parser_action="quote_string" type="string" />
	    <!--
	    <argument name="agents_filter" parser_action="quote_string" type="string">household.aggregate((person.worker1==1)* urbansim_parcel.person.is_non_home_based_worker_without_job))</argument>
	    -->
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_estimate type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_estimate</name>
            <argument name="agent_set" type="string">household</argument>
            <argument name="person_set" type="string">person</argument>
            <argument name="join_datasets" type="string">False</argument>
            <argument name="filter" parser_action="quote_string" type="string">psrc_parcel.household.customized_est_filter</argument>
	    <!--
	    -->
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="agents_for_estimation_table" parser_action="quote_string" type="string">households_for_estimation</argument>
            <argument name="persons_for_estimation_table" parser_action="quote_string" type="string">persons_for_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <output hidden="True" name="output" type="string">(specification, agents_index)</output>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <argument name="agent_set" type="string">household</argument>
            <argument name="agents_index" type="string">agents_index</argument>
            <argument hidden="True" name="data_objects" type="string">datasets</argument>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument hidden="True" name="specification" type="string">specification</argument>
            <output hidden="True" name="output" type="string">(coefficients, _)</output>
          </estimate>
        </structure>
        <specification type="dictionary">
          <submodel copyable="True" hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list">
              <!--  #convert interaction variables form person_x_job to household_x_job
              <variable_spec name="person_x_job.home_area_type_4_workplace_area_type_2"/>
              <variable_spec name="person_x_job.home_area_type_1_workplace_area_type_2"/>
              <variable_spec name="person_x_job.age_x_area_type_1"/>
              <variable_spec name="person_x_job.edu_x_ln_price_per_building_sqft"/>
              <variable_spec name="person_x_job.hh_income_x_ln_price_per_building_sqft"/>
              <variable_spec name="person_x_job.worker1_worker2_work_in_same_zone"/>
              <variable_spec name="person_x_job.age65_emp_status"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_basic"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_retail"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_fires"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_edu"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_basic"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_retail"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_fires"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_edu"/>
              -->
              <!--
              <variable_spec name="job.is_in_employment_sector_group_basic"/>
              <variable_spec name="person_x_job.logsum_hbw_am_from_home_to_work"/>
              <variable_spec name="person_x_job.network_distance_from_home_to_work"/>
              <variable_spec name="person_x_job.worker1_worker2_in_same_sector"/>
              <variable_spec name="person_x_job.network_distance_between_worker1_worker2_workplaces"/>
              -->
              <variable_spec name="household_x_job.home_district_is_same_as_workplace_district"/>
              <variable_spec name="household_x_job.home_dist_6_workplace_dist_6"/>
              <variable_spec name="household_x_job.home_dist_19_workplace_dist_19"/>
              <variable_spec name="household_x_job.w1edu_college_x_job_is_in_employment_sector_group_retail"/>
              <variable_spec name="household_x_job.w1edu_college_x_job_is_in_employment_sector_group_edu"/>
              <variable_spec name="household_x_job.w1edu_college_x_job_is_in_employment_sector_group_fires"/>
              <variable_spec name="household_x_job.w1edu_college_x_job_is_in_employment_sector_group_basic"/>
              <variable_spec name="household_x_job.home_dist_1_workplace_dist_1"/>
            </variable_list>
          </submodel>
        </specification>
      </model>      

      <model copyable="True" hidden="False" name="workplace_choice_model_for_resident" type="model">
		<structure type="dictionary">
          <init type="dictionary">
          <argument name="submodel_string" convert_blank_to_none="True" type="string" />
          <!--
	        <argument name="submodel_string" convert_blank_to_none="True" type="string" >"psrc_parcel.person.employment_status"</argument>
	        -->
	      </init>
        </structure>
        <specification type="dictionary">
          <submodel copyable="True" hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list">
              <variable_spec name="person_x_job.logsum_hbw_am_from_home_to_work"/>
              <variable_spec name="person_x_job.network_distance_from_home_to_work"/>
              <variable_spec name="person_x_job.home_district_is_same_as_workplace_district"/>
              <variable_spec name="person_x_job.home_dist_1_workplace_dist_1"/>
              <variable_spec name="person_x_job.home_dist_6_workplace_dist_6"/>
              <variable_spec name="person_x_job.home_dist_19_workplace_dist_19"/>
              <!--
              <variable_spec name="person_x_job.home_area_type_4_workplace_area_type_2"/>
              <variable_spec name="person_x_job.home_area_type_1_workplace_area_type_2"/>
              <variable_spec name="person_x_job.age_x_area_type_1"/>
              <variable_spec name="person_x_job.edu_x_ln_price_per_building_sqft"/>
              <variable_spec name="person_x_job.hh_income_x_ln_price_per_building_sqft"/>
              <variable_spec name="person_x_job.worker1_worker2_work_in_same_zone"/>
              <variable_spec name="person_x_job.age65_emp_status"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_basic"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_retail"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_fires"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_edu"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_basic"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_retail"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_fires"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_edu"/>

              -->
              <variable_spec name="person_x_job.edu_college_x_job_is_in_employment_sector_group_basic"/>
              <variable_spec name="person_x_job.edu_college_x_job_is_in_employment_sector_group_retail"/>
              <variable_spec name="person_x_job.edu_college_x_job_is_in_employment_sector_group_fires"/>
              <variable_spec name="person_x_job.edu_college_x_job_is_in_employment_sector_group_edu"/>

              <variable_spec name="person_x_job.worker1_worker2_in_same_sector"/>
	      <!--
              <variable_spec name="person_x_job.network_distance_between_worker1_worker2_workplaces"/>
	      -->
            </variable_list>
          </submodel>
          <!--
          <submodel copyable="True" hidden="Children" name="submodel" submodel_id="2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list">
              <variable_spec name="person_x_job.logsum_hbw_am_from_home_to_work"/>
              <variable_spec name="person_x_job.network_distance_from_home_to_work"/>
              <variable_spec name="person_x_job.home_district_is_same_as_workplace_district"/>
              <variable_spec name="person_x_job.home_dist_19_workplace_dist_19"/>
              <variable_spec name="person_x_job.home_area_type_1_workplace_area_type_2"/>
              <variable_spec name="person_x_job.home_area_type_4_workplace_area_type_2"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_basic"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_retail"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_fires"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_edu"/>
            </variable_list>
          </submodel>
          -->          
        </specification>
      </model>
      <model name="auto_ownership_choice_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.location_choice_model</class_module>
            <class_name type="string">LocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">LocationChoiceModel</name>
            <argument name="location_set" type="string">car</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices</argument>
            <argument convert_blank_to_none="True" field_description="test description" name="submodel_string" type="string"/>
            <argument name="choice_attribute_name" parser_action="quote_string" type="string">car_id=0*(household.cars==0)+1*(household.cars==1)+2*(household.cars==2)+3*(household.cars&gt;=3)</argument>
            <argument name="interaction_pkg" parser_action="quote_string" type="string">opus_core</argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"/>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument convert_blank_to_none="True" name="chunk_specification" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(specification, coefficients, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string"/>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">auto_ownership_choice_model_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">auto_ownership_choice_model_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
          </prepare_for_run>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, dummy)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(specification, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string">psrc_parcel.household.customized_est_filter</argument>
	    <!--
	    <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string">household.household_id&gt;6000000</argument>
	    -->
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">auto_ownership_choice_model_specification</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <variable_list type="variable_list">
              <variable_spec name="car.car0" coefficient_name="car0"/>
              <variable_spec name="car.car2" coefficient_name="car2"/>
              <variable_spec name="car.car3" coefficient_name="car3"/>
              <variable_spec name="household_x_car.income_car0" coefficient_name="income_car0"/>
              <variable_spec name="household_x_car.income_car2" coefficient_name="income_car2"/>
              <variable_spec name="household_x_car.income_car3" coefficient_name="income_car3"/>
              <variable_spec name="household_x_car.persons_car0" coefficient_name="persons_car0"/>
              <variable_spec name="household_x_car.persons_car2" coefficient_name="persons_car2"/>
              <variable_spec name="household_x_car.persons_car3" coefficient_name="persons_car3"/>
              <variable_spec name="household_x_car.cbd_time_car0" coefficient_name="cbd_time_car0"/>
              <variable_spec name="household_x_car.cbd_time_car2" coefficient_name="cbd_time_car2"/>
              <variable_spec name="household_x_car.cbd_time_car3" coefficient_name="cbd_time_car3"/>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="hbw_mode_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.choice_model</class_module>
            <class_name type="string">ChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">ChoiceModel</name>
            <argument name="choice_set" type="string">mode</argument>
            <argument name="utilities" type="string" parser_action="quote_string">opus_core.linear_utilities</argument>
            <argument name="probabilities" type="string" parser_action="quote_string">opus_core.mnl_probabilities</argument>
            <argument name="choices" type="string" parser_action="quote_string">opus_core.random_choices</argument>
            <argument field_description="test description" name="submodel_string" type="string" convert_blank_to_none="True"/>
            <argument name="choice_attribute_name" type="string" parser_action="quote_string">mode</argument>
            <argument name="interaction_pkg" type="string" parser_action="quote_string">opus_core</argument>
            <argument name="run_config" type="string" convert_blank_to_none="True"/>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="agent_set" type="string">person_trip</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument name="chunk_specification" type="string" convert_blank_to_none="True"/>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument name="agent_set" type="string" convert_blank_to_none="True">person_trip</argument>
            <argument name="agent_filter" type="string" convert_blank_to_none="True" parser_action="quote_string">(trip_type==12)*(mode_id&lt;5)</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" type="string" parser_action="quote_string">hbw_mode_choice_model_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" type="string" parser_action="quote_string">hbw_mode_choice_model_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" type="string" parser_action="quote_string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
            <output name="output" type="string">(specification, coefficients, cm_index)</output>
          </prepare_for_run>
          <estimate type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">person_trip</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument name="procedure" type="string" parser_action="quote_string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <output name="output" type="string">(coefficients, dummy)</output>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <argument name="agent_set" type="string" convert_blank_to_none="True"/>
            <argument name="agent_filter" type="string" convert_blank_to_none="True" parser_action="quote_string">(trip_type==12)*(mode_id&lt;5)</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" type="string" parser_action="quote_string">choice_model_template_specification</argument>
            <output name="output" type="string">(specification, cm_index)</output>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel copyable="True" name="submodel" submodel_id="-2" type="submodel">
            <equation equation_id="1" name="sov">
              <variable_list type="variable_list">
                <variable_spec name="constant" coefficient_name="asc_sov"/>
              </variable_list>
              <variables type="variable_list">time</variables>
            </equation>
            <equation equation_id="2" name="hov">
              <variable_list type="variable_list">
                <variable_spec name="constant" coefficient_name="asc_hov"/>
              </variable_list>
            </equation>
            <equation equation_id="3" name="transit">
              <variable_list type="variable_list">
                <variable_spec name="constant" coefficient_name="asc_transit"/>
              </variable_list>
            </equation>
            <equation equation_id="4" name="walk">
              <variable_list type="variable_list">
                <variable_spec name="constant" coefficient_name="asc_walk"/>
              </variable_list>
            </equation>
            <description/>
          </submodel>
        </specification>
      </model>
      <model copyable="True" name="real_estate_price_model" type="model">
        <structure type="dictionary">
          <init type="dictionary">
            <argument config_name="outcome_attribute" name="dependent_variable" parser_action="quote_string" type="string">ln_total_price=ln(parcel.land_value+parcel.aggregate(building.improvement_value))</argument>
          </init>
          <estimate type="dictionary">
            <argument config_name="outcome_attribute" name="dependent_variable" parser_action="quote_string" type="string">ln_total_price=ln(parcel.land_value+parcel.aggregate(building.improvement_value))</argument>
          </estimate>
        </structure>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <specification type="dictionary">
          <submodel type="submodel" hidden="Children" name="agriculture" submodel_id="1">
            <variable_list type="variable_list">
              <variable_spec name=".lnsqft"/>
              <variable_spec name=".lnlotsqft"/>
              <variable_spec name=".lngcdacbd"/>
              <variable_spec name=".hbwavgtmda"/>
              <variable_spec name=".hwy2000"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="civic" submodel_id="2">
            <variable_list type="variable_list">
              <variable_spec name=".lnavginc"/>
              <variable_spec name=".lnempden"/>
              <variable_spec name=".ln_invfar"/>
              <variable_spec name=".lnsqft"/>
              <variable_spec name=".inugb"/>
              <variable_spec name=".lngcdacbd"/>
              <variable_spec name=".hbwavgtmda"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="commercial" submodel_id="3">
            <variable_list type="variable_list">
              <variable_spec name=".lnempden"/>
              <variable_spec name=".lnemp30da"/>
              <variable_spec name=".ln_invfar"/>
              <variable_spec name=".lnsqft"/>
              <variable_spec name=".ln_bldgage"/>
              <variable_spec name=".is_pre_1940"/>
              <variable_spec name=".inugb"/>
              <variable_spec name=".lngcdacbd"/>
              <variable_spec name=".hbwavgtmda"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="government" submodel_id="7">
            <variable_list type="variable_list">
              <variable_spec name=".lnavginc"/>
              <variable_spec name=".lnempden"/>
              <variable_spec name=".ln_invfar"/>
              <variable_spec name=".lnsqft"/>
              <variable_spec name=".inugb"/>
              <variable_spec name=".lngcdacbd"/>
              <variable_spec name=".hbwavgtmda"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="hospital" submodel_id="9">
            <variable_list type="variable_list">
              <variable_spec name=".lnavginc"/>
              <variable_spec name=".lnpopden"/>
              <variable_spec name=".ln_invfar"/>
              <variable_spec name=".lnsqft"/>
              <variable_spec name=".ln_bldgage"/>
              <variable_spec name=".lngcdacbd"/>
              <variable_spec name=".hbwavgtmda"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="industrial" submodel_id="10">
            <variable_list type="variable_list">
              <variable_spec name=".lnpopden"/>
              <variable_spec name=".lnempden"/>
              <variable_spec name=".lnemp30da"/>
              <variable_spec name=".ln_invfar"/>
              <variable_spec name=".lnsqft"/>
              <variable_spec name=".ln_bldgage"/>
              <variable_spec name=".inugb"/>
              <variable_spec name=".lngcdacbd"/>
              <variable_spec name=".hbwavgtmda"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="mining" submodel_id="12">
            <variable_list type="variable_list">
              <variable_spec name=".lnavginc"/>
              <variable_spec name=".lnpopden"/>
              <variable_spec name=".lnemp30da"/>
              <variable_spec name=".lnsqft"/>
              <variable_spec name=".lnlotsqft"/>
              <variable_spec name=".ln_bldgage"/>
              <variable_spec name=".lngcdacbd"/>
              <variable_spec name=".hbwavgtmda"/>
              <variable_spec name=".hwy2000"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="mobile_home" submodel_id="13">
            <variable_list type="variable_list">
              <variable_spec name=".lnavginc"/>
              <variable_spec name=".lnpopden"/>
              <variable_spec name=".lnempden"/>
              <variable_spec name=".lnemp30da"/>
              <variable_spec name=".lnsqft"/>
              <variable_spec name=".ln_bldgage"/>
              <variable_spec name=".inugb"/>
              <variable_spec name=".lngcdacbd"/>
              <variable_spec name=".hbwavgtmda"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="apartment" submodel_id="14">
            <description type="string">Multi-Family Residential (Apartment)</description>
            <variable_list type="variable_list">
              <variable_spec name=".lnavginc"/>
              <variable_spec name=".lnempden"/>
              <variable_spec name=".lnemp30da"/>
              <variable_spec name=".ln_invfar"/>
              <variable_spec name=".lnsqft"/>
              <variable_spec name=".ln_bldgage"/>
              <variable_spec name=".lngcdacbd"/>
              <variable_spec name=".hbwavgtmda"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="condominium" submodel_id="15">
            <description type="string">Condominium Residential</description>
            <variable_list type="variable_list">
              <variable_spec name=".lnavginc"/>
              <variable_spec name=".lnempden"/>
              <variable_spec name=".lnemp30da"/>
              <variable_spec name=".ln_invfar"/>
              <variable_spec name=".lnsqft"/>
              <variable_spec name=".ln_bldgage"/>
              <variable_spec name=".inugb"/>
              <variable_spec name=".lngcdacbd"/>
              <variable_spec name=".hbwavgtmda"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="office" submodel_id="18">
            <variable_list type="variable_list">
              <variable_spec name=".lnavginc"/>
              <variable_spec name=".lnempden"/>
              <variable_spec name=".lnemp30da"/>
              <variable_spec name=".ln_invfar"/>
              <variable_spec name=".lnsqft"/>
              <variable_spec name=".ln_bldgage"/>
              <variable_spec name=".is_pre_1940"/>
              <variable_spec name=".inugb"/>
              <variable_spec name=".lngcdacbd"/>
              <variable_spec name=".hbwavgtmda"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="open_space" submodel_id="19">
            <variable_list type="variable_list">
              <variable_spec name=".lnpopden"/>
              <variable_spec name=".lnempden"/>
              <variable_spec name=".ln_invfar"/>
              <variable_spec name=".lnlotsqft"/>
              <variable_spec name=".ln_bldgage"/>
              <variable_spec name=".inugb"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="parking" submodel_id="20">
            <variable_list type="variable_list">
              <variable_spec name=".lnempden"/>
              <variable_spec name=".ln_invfar"/>
              <variable_spec name=".lnlotsqft"/>
              <variable_spec name=".inugb"/>
              <variable_spec name=".lngcdacbd"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="single_family_residential" submodel_id="24">
            <variable_list type="variable_list">
              <variable_spec name=".lnavginc"/>
              <variable_spec name=".lnpopden"/>
              <variable_spec name=".lnempden"/>
              <variable_spec name=".lnemp30da"/>
              <variable_spec name=".ln_invfar"/>
              <variable_spec name=".lnsqft"/>
              <variable_spec name=".ln_bldgage"/>
              <variable_spec name=".is_pre_1940"/>
              <variable_spec name=".inugb"/>
              <variable_spec name=".lngcdacbd"/>
              <variable_spec name=".hbwavgtmda"/>
              <variable_spec name=".hwy2000"/>
              <variable_spec name=".art600"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="transportation" submodel_id="25">
            <description type="string">Transportation, Communication, Public Utilities</description>
            <variable_list type="variable_list">
              <variable_spec name=".lnempden"/>
              <variable_spec name=".lnemp30da"/>
              <variable_spec name=".ln_invfar"/>
              <variable_spec name=".lnsqft"/>
              <variable_spec name=".inugb"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="vacant_developable" submodel_id="26">
            <variable_list type="variable_list">
              <variable_spec name=".lnavginc"/>
              <variable_spec name=".lnpopden"/>
              <variable_spec name=".lnempden"/>
              <variable_spec name=".lnemp30da"/>
              <variable_spec name=".lnlotsqft"/>
              <variable_spec name=".is_pre_1940"/>
              <variable_spec name=".inugb"/>
              <variable_spec name=".lngcdacbd"/>
              <variable_spec name=".hbwavgtmda"/>
              <variable_spec name=".hwy2000"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="warehousing" submodel_id="28">
            <variable_list type="variable_list">
              <variable_spec name=".lnempden"/>
              <variable_spec name=".lnemp30da"/>
              <variable_spec name=".lnsqft"/>
              <variable_spec name=".lnlotsqft"/>
              <variable_spec name=".ln_bldgage"/>
              <variable_spec name=".is_pre_1940"/>
              <variable_spec name=".inugb"/>
              <variable_spec name=".lngcdacbd"/>
              <variable_spec name=".hbwavgtmda"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel type="submodel" hidden="Children" name="mixed_use" submodel_id="30">
            <variable_list type="variable_list">
              <variable_spec name=".lnavginc"/>
              <variable_spec name=".lnpopden"/>
              <variable_spec name=".lnempden"/>
              <variable_spec name=".lnemp30da"/>
              <variable_spec name=".ln_invfar"/>
              <variable_spec name=".lnsqft"/>
              <variable_spec name=".ln_bldgage"/>
              <variable_spec name=".inugb"/>
              <variable_spec name=".lngcdacbd"/>
              <variable_spec name=".hbwavgtmda"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="household_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <init type="dictionary">
            <!--
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_wesml_mnl_estimation</argument>
	    -->
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="sample_size_locations" type="integer">50</argument>
	    <!--
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">building.residential_units&gt;0</argument>
	    -->
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">building.building_id&gt;0</argument>
            <argument name="filter" parser_action="quote_string" type="string">numpy.setmember1d(building.building_type_id, (4, 11, 12, 19))</argument>
            <argument name="estimation_size_agents" type="float">1.0</argument>
          </init>
          <run type="dictionary">
            <argument hidden="True" convert_blank_to_none="True" name="agents_index" type="string"/>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
          </run>
          <prepare_for_estimate type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_estimate</name>
            <output hidden="True" name="output" type="string">(_specification, _index)</output>
            <argument name="agent_set" type="string">household</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">.1</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string">psrc_parcel.household.customized_est_filter</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_building.E_max_commute_logsum"/>
              <variable_spec name="building.d_kitsap_dummy"/>
              <variable_spec name="household_x_building.disposable_inc"/>
              <variable_spec name="household_x_building.inc_x_condo"/>
              <variable_spec name="household_x_building.inc_x_mfr"/>
              <variable_spec name="household_x_building.kids_x_kids"/>
              <variable_spec name="household_x_building.ln_inc_avg_inc"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="building.lnpopden_bldg"/>
              <variable_spec name="household_x_building.renter_x_is_mfr"/>
              <variable_spec name="building.sqft_per_unit"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model copyable="True" name="shopping_destination_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument name="location_set" type="string">zone</argument>
            <argument name="sampler" type="string" parser_action="quote_string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" type="string" parser_action="quote_string">opus_core.linear_utilities</argument>
            <argument name="probabilities" type="string" parser_action="quote_string">opus_core.mnl_probabilities</argument>
            <argument name="choices" type="string" parser_action="quote_string">opus_core.random_choices_from_index</argument>
            <argument name="filter" type="string" convert_blank_to_none="True" parser_action="quote_string"/>
            <argument name="submodel_string" type="string" convert_blank_to_none="True" parser_action="quote_string"/>
            <argument name="location_id_string" type="string" convert_blank_to_none="True" parser_action="quote_string">zone_id=person_trip.to_zone_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" type="string" parser_action="quote_string">AgentLocationChoiceModel</argument>
            <argument name="short_name" type="string" parser_action="quote_string">shopping</argument>
            <argument name="variable_package" type="string" parser_action="quote_string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key name="sample_proportion_locations" type="integer" convert_blank_to_none="True"/>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key name="capacity_string" type="string" convert_blank_to_none="True" parser_action="quote_string"/>
              <key name="number_of_units_string" type="string" convert_blank_to_none="True" parser_action="quote_string"/>
              <key name="number_of_agents_string" type="string" convert_blank_to_none="True" parser_action="quote_string"/>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key name="weights_for_estimation_string" type="string" convert_blank_to_none="True" parser_action="quote_string"/>
              <key name="sample_size_locations" type="integer">30</key>
              <key name="sample_proportion_locations" type="integer" convert_blank_to_none="True"/>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" type="string" parser_action="quote_string">shopping_destination_choice_model_specification</argument>
            <argument name="agent_set" type="string">person_trip</argument>
            <argument name="agents_for_estimation_storage" type="string" convert_blank_to_none="True"/>
            <argument name="agents_for_estimation_table" type="string" convert_blank_to_none="True" parser_action="quote_string"/>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="index_to_unplace" type="string" convert_blank_to_none="True"/>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument name="portion_to_unplace" type="string">0</argument>
            <argument name="filter" type="string" convert_blank_to_none="True" parser_action="quote_string">trip_type==41</argument>
            <argument name="location_id_variable" type="string" convert_blank_to_none="True" parser_action="quote_string"/>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument name="agent_set" type="string">person_trip</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" type="string" parser_action="quote_string">opus_core.bhhh_mnl_estimation_with_diagnose</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" type="string" parser_action="quote_string">shopping_destination_choice_model_coefficients_table</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" type="string" parser_action="quote_string">shopping_destination_choice_model_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string">person_trip</argument>
            <argument name="agents_index" type="string" convert_blank_to_none="True"/>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary">
          <submodel copyable="True" hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list">
              <variable_spec name="person_trip_x_zone.single_vehicle_to_destination_travel_cost" coefficient_name="single_vehicle_to_destination_travel_cost"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="employment_location_choice_model" type="model">
        <structure type="dictionary">
          <prepare_for_estimate type="dictionary">
            <argument name="filter" type="string" convert_blank_to_none="True" parser_action="quote_string">job.job_id &lt; 6000000</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel_group name="home_based" type="submodel_group">
            <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name=".blngcdacbd"/>
              </variable_list>
            </submodel>
          </submodel_group>
          <submodel_group name="non_home_based" type="submodel_group">
            <submodel hidden="Children" name="natural_resources" submodel_id="1" type="submodel">
              <description type="string">Natural Resources</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnavginc_bldg"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnempden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_art"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="construction" submodel_id="2" type="submodel">
              <description type="string">Construction</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnempden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_highway"/>
                <variable_spec name=".is_near_art"/>
                <variable_spec name=".is_warehousing_building"/>
                <variable_spec name=".is_industrial_building"/>
                <variable_spec name=".inugb_bldg"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="aerospace" submodel_id="3" type="submodel">
              <description type="string">Aerospace</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnavginc_bldg"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_highway"/>
                <variable_spec name=".is_near_art"/>
                <variable_spec name=".ln_nonresidential_sqft"/>
                <variable_spec name=".is_warehousing_building"/>
                <variable_spec name=".is_industrial_building"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="durable_manufacturing" submodel_id="4" type="submodel">
              <description type="string">Durable Manufacturing</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnavginc_bldg"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnempden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_highway"/>
                <variable_spec name=".is_near_art"/>
                <variable_spec name=".ln_nonresidential_sqft"/>
                <variable_spec name=".is_warehousing_building"/>
                <variable_spec name=".is_office_building"/>
                <variable_spec name=".is_mixed_use_building"/>
                <variable_spec name=".is_industrial_building"/>
                <variable_spec name=".is_commercial_building"/>
                <variable_spec name=".inugb_bldg"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="nondurable_manufacturing" submodel_id="5" type="submodel">
              <description type="string">Nondurable Manufacturing</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnavginc_bldg"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnempden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_highway"/>
                <variable_spec name=".is_near_art"/>
                <variable_spec name=".is_warehousing_building"/>
                <variable_spec name=".is_office_building"/>
                <variable_spec name=".is_mixed_use_building"/>
                <variable_spec name=".is_industrial_building"/>
                <variable_spec name=".is_commercial_building"/>
                <variable_spec name=".inugb_bldg"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="wholesale" submodel_id="6" type="submodel">
              <description type="string">Wholesale</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnavginc_bldg"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnempden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_highway"/>
                <variable_spec name=".is_near_art"/>
                <variable_spec name=".ln_nonresidential_sqft"/>
                <variable_spec name=".is_warehousing_building"/>
                <variable_spec name=".is_office_building"/>
                <variable_spec name=".is_mixed_use_building"/>
                <variable_spec name=".is_industrial_building"/>
                <variable_spec name=".is_commercial_building"/>
                <variable_spec name=".inugb_bldg"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="retail" submodel_id="7" type="submodel">
              <description type="string">Retail</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnavginc_bldg"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnempden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_highway"/>
                <variable_spec name=".is_near_art"/>
                <variable_spec name=".is_warehousing_building"/>
                <variable_spec name=".is_mixed_use_building"/>
                <variable_spec name=".is_commercial_building"/>
                <variable_spec name=".inugb_bldg"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="transportation_warehousing" submodel_id="8" type="submodel">
              <description type="string">Transportation and warehousing</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnavginc_bldg"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnempden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_highway"/>
                <variable_spec name=".is_near_art"/>
                <variable_spec name=".ln_nonresidential_sqft"/>
                <variable_spec name=".is_warehousing_building"/>
                <variable_spec name=".is_industrial_building"/>
                <variable_spec name=".inugb_bldg"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="utilities" submodel_id="9" type="submodel">
              <description type="string">Utilities</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnavginc_bldg"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnempden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_art"/>
                <variable_spec name=".ln_nonresidential_sqft"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="telecom" submodel_id="10" type="submodel">
              <description type="string">Telecom</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnavginc_bldg"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnempden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_highway"/>
                <variable_spec name=".is_near_art"/>
                <variable_spec name=".is_tcu_building"/>
                <variable_spec name=".is_office_building"/>
                <variable_spec name=".is_mixed_use_building"/>
                <variable_spec name=".is_industrial_building"/>
                <variable_spec name=".is_commercial_building"/>
                <variable_spec name=".inugb_bldg"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="information" submodel_id="11" type="submodel">
              <description type="string">Information</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnavginc_bldg"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnempden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_highway"/>
                <variable_spec name=".is_near_art"/>
                <variable_spec name=".is_office_building"/>
                <variable_spec name=".is_mixed_use_building"/>
                <variable_spec name=".is_industrial_building"/>
                <variable_spec name=".is_commercial_building"/>
                <variable_spec name=".inugb_bldg"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="finance" submodel_id="12" type="submodel">
              <description type="string">Finance</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnavginc_bldg"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnempden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_highway"/>
                <variable_spec name=".is_office_building"/>
                <variable_spec name=".is_mixed_use_building"/>
                <variable_spec name=".is_industrial_building"/>
                <variable_spec name=".is_commercial_building"/>
                <variable_spec name=".inugb_bldg"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="professional_services" submodel_id="13" type="submodel">
              <description type="string">Professional services</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnavginc_bldg"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnempden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_highway"/>
                <variable_spec name=".is_near_art"/>
                <variable_spec name=".is_office_building"/>
                <variable_spec name=".is_mixed_use_building"/>
                <variable_spec name=".is_industrial_building"/>
                <variable_spec name=".is_commercial_building"/>
                <variable_spec name=".inugb_bldg"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="food_and_drink" submodel_id="14" type="submodel">
              <description type="string">Food and drink</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnavginc_bldg"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnempden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_highway"/>
                <variable_spec name=".is_near_art"/>
                <variable_spec name=".is_office_building"/>
                <variable_spec name=".is_mixed_use_building"/>
                <variable_spec name=".is_commercial_building"/>
                <variable_spec name=".inugb_bldg"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="ed_services" submodel_id="15" type="submodel">
              <description type="string">ed_services</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnavginc_bldg"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnempden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_highway"/>
                <variable_spec name=".is_near_art"/>
                <variable_spec name=".is_office_building"/>
                <variable_spec name=".is_mixed_use_building"/>
                <variable_spec name=".is_industrial_building"/>
                <variable_spec name=".is_commercial_building"/>
                <variable_spec name=".inugb_bldg"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="health" submodel_id="16" type="submodel">
              <description type="string">Health</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnavginc_bldg"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnempden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_highway"/>
                <variable_spec name=".is_near_art"/>
                <variable_spec name=".is_office_building"/>
                <variable_spec name=".is_mixed_use_building"/>
                <variable_spec name=".is_industrial_building"/>
                <variable_spec name=".is_commercial_building"/>
                <variable_spec name=".inugb_bldg"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="other_services" submodel_id="17" type="submodel">
              <description type="string">Other services</description>
              <variable_list type="variable_list">
                <variable_spec name=".sector_density_in_zone"/>
                <variable_spec name=".lnavginc_bldg"/>
                <variable_spec name=".lnpopden_bldg"/>
                <variable_spec name=".lnempden_bldg"/>
                <variable_spec name=".lnemp30da_bldg"/>
                <variable_spec name=".is_near_highway"/>
                <variable_spec name=".is_near_art"/>
                <variable_spec name=".is_office_building"/>
                <variable_spec name=".is_mixed_use_building"/>
                <variable_spec name=".is_industrial_building"/>
                <variable_spec name=".is_commercial_building"/>
                <variable_spec name=".inugb_bldg"/>
                <variable_spec name=".ln_unit_price_trunc"/>
              </variable_list>
            </submodel>
          </submodel_group>
        </specification>
      </model>
    </models>
    <estimation_config config_name="estimation_config" name="Estimation Configuration" type="configuration">
      <dataset_pool_configuration type="class">
        <argument name="package_order" type="list">['psrc_parcel', 'urbansim_parcel', 'urbansim', 'opus_core']</argument>
      </dataset_pool_configuration>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory" field_identifier="Cache Directory" field_description="Directory for base_year cache, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/base_year_data">psrc_parcel/base_year_data</cache_directory>
      <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
        <selectable copyable="True" type="selectable" name="district">True</selectable>
        <selectable copyable="True" type="selectable" name="car">True</selectable>
        <selectable copyable="True" type="selectable" name="building_type">True</selectable>
        <selectable copyable="True" type="selectable" name="large_area">True</selectable>
        <selectable copyable="True" type="selectable" name="person_trip">True</selectable>
        <selectable copyable="True" type="selectable" name="zone">True</selectable>
        <selectable copyable="True" type="selectable" name="mode">True</selectable>
        <selectable copyable="True" type="selectable" name="building" followers="my_dataset">True</selectable>
        <selectable copyable="True" type="selectable" name="person">True</selectable>
      </datasets_to_preload>
      <base_year type="integer" field_identifier="Base Year">2000</base_year>
      <years type="tuple">
        <firstyear type="integer" field_identifier="Base Year">2000</firstyear>
        <lastyear type="integer" field_identifier="Base Year">2000</lastyear>
      </years>
      <seed type="integer" convert_blank_to_none="True">100</seed>      
    </estimation_config>
    <templates hidden="True" name="Model Templates" parser_action="skip"/>
  </model_manager>
  <scenario_manager>
    <scenario type="scenario" name="psrc_baseline_test">
      <parent type="scenario_name">PSRC_baseline</parent>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2001</firstyear>
        <lastyear type="integer">2001</lastyear>
      </years_to_run>
      <models_to_run config_name="models" type="selectable_list">
        <selectable name="model_template" type="selectable">False</selectable>
        <selectable name="real_estate_price_model" type="selectable">False</selectable>
        <selectable name="expected_sale_price_model" type="selectable">False</selectable>
        <selectable name="development_proposal_choice_model" type="selectable">False</selectable>
        <selectable name="building_construction_model" type="selectable">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_households" type="selectable">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="selectable">False</selectable>
        <selectable name="household_transition_model" type="selectable">False</selectable>
        <selectable name="employment_transition_model" type="selectable">False</selectable>
        <selectable name="job_person_consistency_keeper" type="selectable">False</selectable>
        <selectable name="household_relocation_model" type="selectable">False</selectable>
        <selectable name="household_location_choice_model" type="selectable">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_households" type="selectable">False</selectable>
        <selectable name="employment_relocation_model" type="selectable">False</selectable>
        <selectable name="employment_location_choice_model" type="selectable">False<group_members type="string">non_home_based</group_members>
        </selectable>
        <selectable name="distribute_unplaced_jobs_model" type="selectable">False</selectable>
        <selectable name="distribute_unplaced_mining_utilities_jobs_model" type="selectable">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="selectable">False</selectable>
        <selectable name="work_at_home_choice_model" type="selectable">True</selectable>
        <selectable name="workplace_choice_model_for_resident" type="selectable">False</selectable>
      </models_to_run>      
        <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
          <selectable copyable="True" type="selectable" name="district">True</selectable>
          <selectable copyable="True" type="selectable" name="car">True</selectable>
          <selectable name="zone" type="selectable">True</selectable>
          <selectable name="household" type="selectable">True</selectable>
          <selectable name="building" type="selectable">True</selectable>
          <selectable copyable="True" type="selectable" name="large_area">True</selectable>
          <selectable name="parcel" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="person" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template_component" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="job" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="travel_data" type="selectable">True</selectable>
          <selectable name="job_building_type" type="selectable">True</selectable>
        </datasets_to_preload>

    </scenario>
    <scenario executable="True" name="PSRC_baseline" type="scenario">
      <parent type="scenario_name">urbansim_parcel_baseline</parent>
      <base_year type="integer">2000</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2001</firstyear>
        <lastyear type="integer">2002</lastyear>
      </years_to_run>
      <models_to_run config_name="models" type="selectable_list">
        <selectable name="model_template" type="selectable">False</selectable>
        <selectable name="real_estate_price_model" type="selectable">True</selectable>
        <selectable name="expected_sale_price_model" type="selectable">True</selectable>
        <selectable name="development_proposal_choice_model" type="selectable">True</selectable>
        <selectable name="building_construction_model" type="selectable">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_households" type="selectable">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="selectable">True</selectable>
        <selectable name="household_transition_model" type="selectable">True</selectable>
        <selectable name="employment_transition_model" type="selectable">True</selectable>
        <selectable name="job_person_consistency_keeper" type="selectable">True</selectable>
        <selectable name="household_relocation_model" type="selectable">True</selectable>
        <selectable name="household_location_choice_model" type="selectable">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_households" type="selectable">True</selectable>
        <selectable name="employment_relocation_model" type="selectable">True</selectable>
        <selectable name="employment_location_choice_model" type="selectable">True<group_members type="string">non_home_based</group_members>
        </selectable>
        <selectable name="distribute_unplaced_jobs_model" type="selectable">True</selectable>
        <selectable name="distribute_unplaced_mining_utilities_jobs_model" type="selectable">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="selectable">True</selectable>
        <selectable name="work_at_home_choice_model" type="selectable">True</selectable>
        <selectable name="workplace_choice_model_for_resident" type="selectable">True</selectable>
      </models_to_run>
    </scenario>
    <scenario executable="True" name="PSRC_full_TM" type="scenario">
      <base_year type="integer">2000</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2001</firstyear>
        <lastyear type="integer">2040</lastyear>
      </years_to_run>
      <travel_model_configuration type="dictionary">
        <travel_model_base_directory type="string">Version_1.0c</travel_model_base_directory>
        <emme2_batch_file_name type="string">MODEL1-0c.BAT</emme2_batch_file_name>
        <models type="selectable_list">
          <selectable name="opus_emme2.models.get_cache_data_into_emme2" type="selectable">True</selectable>
          <selectable name="opus_emme2.models.run_travel_model" type="selectable">True</selectable>
          <selectable name="opus_emme2.models.run_export_macros" type="selectable">True</selectable>
          <selectable name="opus_emme2.models.get_emme2_data_into_cache" type="selectable">True</selectable>
        </models>
        <years_to_run key_name="year" type="category_with_special_keys">
          <run_description type="dictionary">
            <year type="integer">2001</year>
            <bank type="list">['2006_06']</bank>
          </run_description>
        </years_to_run>
      </travel_model_configuration>
    </scenario>
    <scenario executable="True" name="PSRC_TM_skims" type="scenario">
      <base_year type="integer">2000</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2001</firstyear>
        <lastyear type="integer">2040</lastyear>
      </years_to_run>
      <travel_model_configuration type="dictionary">
        <travel_model_base_directory type="string">Version_1.0c</travel_model_base_directory>
        <emme2_batch_file_name type="string">MODEL1-0c.BAT</emme2_batch_file_name>
        <models type="selectable_list">
          <selectable name="opus_emme2.models.get_cache_data_into_emme2" type="selectable">False</selectable>
          <selectable name="opus_emme2.models.run_travel_model" type="selectable">False</selectable>
          <selectable name="opus_emme2.models.run_export_macros" type="selectable">True</selectable>
          <selectable name="opus_emme2.models.get_emme2_data_into_cache" type="selectable">True</selectable>
        </models>
        <years_to_run key_name="year" type="category_with_special_keys">
          <run_description type="dictionary">
            <year type="integer">2001</year>
            <bank type="list">['2006_06']</bank>
          </run_description>
        </years_to_run>
      </travel_model_configuration>
    </scenario>
  </scenario_manager>
  <results_manager>
    <indicator_batches name="Indicator Batches" setexpanded="True" type="group">
    </indicator_batches>
    <simulation_runs name="Simulation Runs" setexpanded="True" type="all_source_data" followers="Results">
      <run hidden="Children" type="source_data" name="No description" run_id="63">
        <scenario_name type="string">?</scenario_name>
        <cache_directory type="string">/workspace/urbansim_cache/psrc_parcel/runs/run_63.2010_07_13_18_13</cache_directory>
        <start_year type="integer">2001</start_year>
        <end_year type="integer">2002</end_year>
      </run>
      <run hidden="Children" type="source_data" name="base_year_data" run_id="13">
        <scenario_name type="string"/>
        <cache_directory type="string">/workspace/urbansim_cache/psrc_parcel/base_year_data</cache_directory>
        <start_year type="integer">2000</start_year>
        <end_year type="integer">2000</end_year>
      </run>
    </simulation_runs>
  </results_manager>
</opus_project>

