# Opus/UrbanSim urban simulation software.
# Copyright (C) 2010-2011 University of California, Berkeley, 2005-2009 University of Washington
# See opus_core/LICENSE 

from opus_core.model import Model
from opus_core.logger import logger
from opus_core.session_configuration import SessionConfiguration
import numpy
from numpy import ones, array, where, logical_and, around, in1d
from numpy.random import shuffle
from opus_core.simulation_state import SimulationState
from opus_core.store.attribute_cache import AttributeCache
from urbansim.datasets.control_total_dataset import ControlTotalDataset

class SolanoBaseYearWarehouseModel(Model):
    """Solano Base Year Warehouse Model.
    """
    model_name = "change selected solano light industrial buildings to warehouse and impute non_res sqft if necessary"

    def run(self):
        """Runs the test model. 
        """

        current_year = SimulationState().get_current_time()

        if current_year > 2011:
            logger.log_status("Not year 2011 (first simulation year).  No need to run Solano Warehouse Model." )
        else:

            dataset_pool = SessionConfiguration().get_dataset_pool()

            parcel_set = dataset_pool.get_dataset('parcel')

            building_set = dataset_pool.get_dataset('building')

            building_county = building_set.compute_variables('building.disaggregate(parcel.county_id)')

            solano_warehouse_sqft = (building_set['non_residential_sqft'])*(building_set['building_type_id']==8)*(building_county==48)

            logger.log_status("solano_warehouse_sqft: %s" %(solano_warehouse_sqft.sum()))

            parcel_ids_to_note = [1641451, 1641582, 1641586, 1641588, 1641589, 1641590, 1641744, 1642151, 1642152, 1642153, 1642154, 1642155, 1642156, 1642157, 1642158, 1642387, 1642547, 1642548, 1642813, 1643161, 1643162, 1643163, 1643165, 1643641, 1644304, 1644389, 1644899, 1644915, 1645882, 1646808, 1646809, 1646810, 1646811, 1646812, 1646813, 1646814, 1646815, 1646816, 1646817, 1646818, 1646819, 1646820, 1646821, 1646822, 1646823, 1646824, 1646858, 1647098, 1647783, 1647786, 1647789, 1647792, 1647793, 1647794, 1647795, 1647799, 1647800, 1647803, 1647804, 1647805, 1647806, 1647807, 1647808, 1647811, 1647812, 1647818, 1647822, 1647823, 1647825, 1648026, 1648561, 1649093, 1649112, 1649113, 1649114, 1649115, 1649119, 1649120, 1649121, 1649122, 1649123, 1649125, 1649126, 1649127, 1649130, 1649131, 1649132, 1649140, 1649141, 1649142, 1649143, 1649144, 1649145, 1650248, 1650708, 1651134, 1651135, 1651136, 1651137, 1651138, 1651144, 1651145, 1651468, 1651870, 1652032, 1652033, 1652034, 1653176, 1653179, 1654107, 1654503, 1654504, 1654541, 1654588, 1654645, 1654646, 1655256, 1655257, 1655258, 1655259, 1655260, 1655261, 1655765, 1655983, 1655984, 1656813, 1656888, 1657192, 1657194, 1657196, 1659623, 1660467, 1660908, 1660909, 1660910, 1660912, 1660913, 1660914, 1660915, 1660916, 1660917, 1660937, 1661052, 1661122, 1661162, 1661305, 1661326, 1661837, 1661919, 1664752, 1665380, 1665709, 1665710, 1665711, 1665712, 1665713, 1665714, 1665715, 1665716, 1665717, 1665718, 1665719, 1665720, 1665721, 1665722, 1665975, 1665978, 1666624, 1666626, 1666629, 1666630, 1666631, 1666633, 1666634, 1666635, 1666637, 1666639, 1666640, 1666641, 1666643, 1666644, 1666645, 1666646, 1666650, 1666655, 1666847, 1667859, 1667860, 1667873, 1667884, 1667885, 1667886, 1667887, 1667888, 1667889, 1667890, 1667891, 1667892, 1667893, 1667894, 1667895, 1667896, 1667901, 1667905, 1667906, 1667907, 1668842, 1668844, 1668857, 1668984, 1669275, 1669825, 1669826, 1669827, 1669831, 1669832, 1669833, 1669834, 1670685, 1670686, 1670690, 1670853, 1671757, 1671765, 1671769, 1671771, 1671772, 1671774, 1672724, 1672725, 1672726, 1673164, 1673165, 1673210, 1673271, 1673274, 1673882, 1673884, 1674373, 1674374, 1674581, 1674582, 1674583, 1674585, 1675394, 1675395, 1675396, 1675397, 1675398, 1675406, 1675477, 1675733, 1675736, 1675737, 1676572, 1678713, 1678970, 1678976, 1678977, 1679122, 1679375, 1679376, 1679377, 1679378, 1679591, 1679592, 1679687, 1679792, 1680248, 1680361, 1682106, 1682301, 1682560, 1683123, 1684101, 1684103, 1684104, 1684105, 1684106, 1684107, 1684108, 1684109, 1684110, 1684111, 1684112, 1684113, 1684114, 1684115, 1684116, 1684413, 1685100, 1685101, 1685105, 1685106, 1685107, 1685110, 1685111, 1685112, 1685115, 1685116, 1685117, 1685118, 1685119, 1685120, 1685121, 1685123, 1685124, 1685125, 1685126, 1685127, 1685130, 1685134, 1685135, 1685136, 1685151, 1685822, 1685823, 1685825, 1685856, 1686072, 1686083, 1686335, 1686336, 1686339, 1686354, 1686355, 1686356, 1686357, 1686358, 1686365, 1686366, 1686372, 1686373, 1686374, 1686377, 1686378, 1686379, 1686380, 1686381, 1686382, 1686383, 1686384, 1686385, 1686387, 1686389, 1686390, 1686391, 1686392, 1686393, 1686394, 1686395, 1686396, 1686397, 1686398, 1687368, 1687390, 1687550, 1687596, 1688405, 1688406, 1688407, 1688409, 1688410, 1688411, 1689326, 1690440, 1690441, 1690442, 1690444, 1690445, 1691409, 1691410, 1691849, 1691891, 1691944, 1692015, 1692017, 1692018, 1692638, 1692639, 1692640, 1692641, 1693112, 1693113, 1693115, 1693355, 1693356, 1693357, 1693358, 1693359, 1694182, 1694187, 1694188, 1694189, 1694190, 1694201, 1694202, 1694554, 1694557, 1695439, 1695449, 1696774, 1697552, 1697686, 1697688, 1697689, 1697690, 1697691, 1697693, 1697827, 1697830, 1698264, 1698265, 1698266, 1698267, 1698268, 1698269, 1698290, 1698503, 1698504, 1699264, 1700836, 1701511, 1702090, 1702525, 1703070, 1703071, 1703072, 1703073, 1703074, 1703075, 1703076, 1703077, 1703078, 1703079, 1703080, 1703081, 1703082, 1703083, 1703084, 1703085, 1703086, 1703352, 1703353, 1703983, 1703984, 1703985, 1703986, 1703988, 1703989, 1703990, 1703991, 1703992, 1703997, 1703998, 1703999, 1704000, 1704001, 1704002, 1704003, 1704004, 1704005, 1704009, 1704010, 1704012, 1704015, 1704016, 1704021, 1704715, 1705262, 1705263, 1705264, 1705279, 1705280, 1705281, 1705290, 1705293, 1705294, 1705295, 1705296, 1705297, 1705303, 1705304, 1705305, 1705306, 1705308, 1705309, 1705310, 1705311, 1705312, 1705313, 1705315, 1705317, 1705318, 1705320, 1705321, 1705322, 1705984, 1706432, 1706729, 1706730, 1706731, 1706732, 1706733, 1707320, 1707323, 1707324, 1707325, 1708204, 1708211, 1708380, 1709299, 1710605, 1710762, 1710764, 1710765, 1711344, 1711345, 1711346, 1711347, 1711348, 1711349, 1711350, 1711838, 1711840, 1712060, 1712061, 1712062, 1712900, 1712903, 1712904, 1712905, 1713275, 1714234, 1714311, 1715402, 1716479, 1716480, 1716482, 1716483, 1716484, 1716486, 1716635, 1716637, 1716639, 1717060, 1717062, 1717063, 1717262, 1717263, 1717337, 1717470, 1717963, 1718034, 1718041, 1718047, 1719217, 1719311, 1719544, 1719805, 1719808, 1720861, 1720867, 1721547, 1721862, 1721863, 1721864, 1721865, 1721866, 1721867, 1721868, 1721869, 1721870, 1721871, 1721872, 1721873, 1721874, 1721875, 1721876, 1721877, 1721878, 1721879, 1722156, 1722739, 1722830, 1722831, 1722832, 1722835, 1722836, 1722842, 1722843, 1722844, 1722845, 1722846, 1722847, 1722850, 1722852, 1722854, 1722855, 1722856, 1722857, 1722858, 1722859, 1722862, 1722863, 1722864, 1722865, 1722867, 1722868, 1722869, 1722870, 1722872, 1722873, 1722874, 1722882, 1722883, 1723055, 1723517, 1723521, 1723661, 1723768, 1724061, 1724062, 1724083, 1724092, 1724093, 1724094, 1724095, 1724096, 1724103, 1724110, 1724111, 1724112, 1724113, 1724114, 1724115, 1724116, 1724117, 1724119, 1724121, 1724123, 1724535, 1725022, 1725082, 1725083, 1725102, 1726111, 1726112, 1726113, 1726831, 1726994, 1726997, 1726999, 1727167, 1729094, 1729095, 1729468, 1729470, 1729471, 1729568, 1729640, 1729641, 1729642, 1729645, 1729646, 1730279, 1730285, 1730286, 1730288, 1730290, 1730291, 1730292, 1730293, 1730294, 1730296, 1730803, 1731012, 1731805, 1731806, 1731807, 1731810, 1731811, 1731885, 1732183, 1733083, 1734467, 1735323, 1735324, 1735325, 1735326, 1735327, 1735462, 1735465, 1735467, 1735868, 1735869, 1735870, 1735871, 1735872, 1735873, 1736303, 1736847, 1736849, 1737498, 1737971, 1739776, 1740250, 1740257, 1740539, 1740540, 1740541, 1740542, 1740543, 1740544, 1740545, 1740546, 1740547, 1740548, 1740549, 1740550, 1740551, 1740552, 1740553, 1740830, 1741537, 1741538, 1741549, 1741550, 1741551, 1741552, 1741553, 1741556, 1741557, 1741558, 1741559, 1741560, 1741562, 1741563, 1741564, 1741567, 1741568, 1741571, 1741572, 1741573, 1741574, 1741575, 1741576, 1741582, 1741583, 1741592, 1741594, 1741595, 1741596, 1741598, 1741602, 1742773, 1742795, 1742814, 1742815, 1742821, 1742823, 1742824, 1742825, 1742832, 1742833, 1742834, 1742835, 1742839, 1742840, 1742841, 1742842, 1742843, 1742844, 1742845, 1742846, 1742847, 1742848, 1742853, 1744016, 1744809, 1744810, 1744811, 1744812, 1744816, 1744817, 1744818, 1744830, 1745632, 1745634, 1745637, 1745638, 1745797, 1746669, 1747586, 1747587, 1747588, 1747958, 1747959, 1748012, 1748056, 1748120, 1748121, 1748122, 1748128, 1748703, 1749204, 1749205, 1749408, 1749409, 1749410, 1749413, 1749414, 1750252, 1750257, 1750261, 1750262, 1750263, 1750264, 1752617, 1753626, 1753633, 1753773, 1754182, 1754183, 1754185, 1754388, 1754447, 1754455, 1754490, 1754552, 1755055, 1755137, 1755139, 1755140, 1755415, 1756321, 1756411, 1756412, 1757395, 1758887, 1758888, 1758889, 1758890, 1758891, 1758892, 1758893, 1758894, 1758895, 1758896, 1758897, 1758898, 1758899, 1758900, 1758901, 1758902, 1758903, 1758904, 1758905, 1759209, 1759858, 1759859, 1759862, 1759863, 1759864, 1759867, 1759868, 1759869, 1759870, 1759871, 1759873, 1759876, 1759877, 1759878, 1759879, 1759880, 1759881, 1759882, 1759883, 1759885, 1759886, 1759891, 1759892, 1759899, 1759904, 1760096, 1760594, 1761105, 1761108, 1761132, 1761133, 1761147, 1761149, 1761150, 1761151, 1761152, 1761155, 1761156, 1761157, 1761161, 1761162, 1761163, 1761164, 1761165, 1761166, 1761167, 1761168, 1761169, 1761171, 1761172, 1761173, 1761174, 1761175, 1761176, 1761177, 1761182, 1761184, 1762066, 1762161, 1762163, 1762331, 1763169, 1763170, 1763171, 1763172, 1763173, 1763174, 1764050, 1764052, 1765175, 1765177, 1765180, 1766144, 1766145, 1766146, 1766613, 1766672, 1766674, 1766678, 1767294, 1767295, 1767296, 1767297, 1767799, 1767803, 1767978, 1767981, 1767982, 1768758, 1768759, 1768764, 1768765, 1768766, 1768767, 1769143, 1770336, 1771380, 1772277, 1772279, 1772280, 1772281, 1772409, 1772410, 1772411, 1772814, 1772815, 1772816, 1772818, 1772819, 1772820, 1773078, 1773115, 1773146, 1773231, 1773232, 1773256, 1773828, 1773829, 1773830, 1773834, 1773835, 1773836, 1774102, 1774103, 1774312, 1775128, 1775621, 1775643, 1775723, 1776584, 1776586, 1776716, 1777314, 1777609, 1777610, 1777611, 1777612, 1777613, 1777614, 1777615, 1777616, 1777617, 1777618, 1777619, 1777620, 1777621, 1777622, 1777623, 1777624, 1777625, 1777891, 1777893, 1777897, 1777900, 1778538, 1778546, 1778547, 1778549, 1778550, 1778551, 1778552, 1778553, 1778554, 1778555, 1778556, 1778557, 1778559, 1778560, 1778561, 1778564, 1778566, 1778570, 1778573, 1778589, 1778590, 1778591, 1778592, 1778789, 1779285, 1779286, 1779287, 1779288, 1779293, 1779419, 1779544, 1779834, 1779853, 1779854, 1779855, 1779866, 1779868, 1779869, 1779870, 1779876, 1779884, 1779885, 1779886, 1779887, 1779888, 1779889, 1779890, 1779891, 1779892, 1779895, 1779897, 1779898, 1779899, 1779900, 1779903, 1779904, 1780344, 1780841, 1780913, 1781065, 1781975, 1781976, 1781977, 1781978, 1781981, 1782319, 1782320, 1782701, 1782855, 1782857, 1782859, 1782861, 1783262, 1784044, 1784045, 1785013, 1785014, 1785015, 1785016, 1785469, 1785508, 1785510, 1785574, 1785576, 1785577, 1785578, 1786201, 1786754, 1786955, 1786956, 1786958, 1787778, 1787781, 1787782, 1787785, 1789043, 1790178, 1790395, 1790585, 1790814]

            buildings_on_parcels_of_note = in1d(building_set['parcel_id'], parcel_ids_to_note)

            building_light_industrial = (building_set['building_type_id']==7)

            buildings_to_change = buildings_on_parcels_of_note * building_light_industrial

            idx_buildings_to_change = where(buildings_to_change)[0]

            logger.log_status("Number of buildings to change from light industrial to warehouse: %s" %(idx_buildings_to_change.size))

            building_set.modify_attribute('building_type_id', array(idx_buildings_to_change.size*[8]), idx_buildings_to_change)

            solano_warehouse_sqft = (building_set['non_residential_sqft'])*(building_set['building_type_id']==8)*(building_county==48)

            logger.log_status("solano_warehouse_sqft: %s" %(solano_warehouse_sqft.sum()))

            parcels_to_impute_sqft = {1641586:45444.1046, 1641588:19685.77699, 1641589:17720.99284, 1641590:30776.9815, 1641744:74594.16083, 1642151:14002.6593, 1642152:14002.6593, 1642153:14002.6593, 1642154:14002.6593, 1642155:17612.0373, 1642156:16921.01573, 1642157:16921.01573, 1642158:16921.01573, 1643162:14728.06931, 1643163:14728.06931, 1643165:2200.403125, 1644389:6620.137068, 1645882:10631.59783, 1646808:500000, 1646809:500000, 1646810:500000, 1646814:500000, 1647098:605.263041, 1647783:10260.4589, 1647786:16916.68271, 1647789:23286.73931, 1647792:12893.16159, 1647793:12893.16159, 1647794:12404.71188, 1647795:48065.51828, 1647799:10545.83266, 1647800:50001.10928, 1647803:16329.24344, 1647804:16329.24344, 1647805:35922.40588, 1647806:36402.35867, 1647807:72619.37269, 1647808:19039.5914, 1647811:47146.40555, 1647812:82798.90975, 1647818:64752.20256, 1647822:45861.5624, 1647823:6576.782127, 1647825:40622.53271, 1648026:54880.60585, 1648561:5000, 1649093:13928.83599, 1649112:30995.01945, 1649113:7195.22196, 1649114:7195.22196, 1649115:21228.32251, 1649119:97739.04297, 1649120:97739.04297, 1649121:50954.25925, 1649122:69528.21298, 1649123:69528.21298, 1649125:10674.37049, 1649126:10674.37049, 1649127:86643.36125, 1649130:30755.62632, 1649131:30755.62632, 1649132:5045.997587, 1649140:9825.305282, 1649141:82952.99355, 1649142:42115.89463, 1649143:70252.00147, 1649144:70252.00147, 1649145:30799.67876, 1650248:83965.91438, 1651134:90248.41212, 1651135:90248.41212, 1651136:90248.41212, 1651137:90248.41212, 1651138:90248.41212, 1651144:62518.52035, 1651145:62518.52035, 1651468:79793.96447, 1652034:20820.3597, 1653179:42065.43092, 1654503:9926.211586, 1654504:9926.211586, 1654645:6302.556027, 1655256:86292.12668, 1655257:86292.12668, 1655258:86292.12668, 1655259:86292.12668, 1655260:58096.92716, 1655261:50211.70271, 1656813:20172.291, 1657192:311072.6047, 1657194:21676.22385, 1657196:64431.2014, 1660908:14002.6593, 1660909:14002.6593, 1660910:71637.46964, 1660912:17612.0373, 1660913:17612.0373, 1660914:17612.0373, 1660915:16921.01573, 1660916:16921.01573, 1660917:16921.01573, 1660937:18281.355, 1661052:6178.716145, 1661122:40927.90845, 1661162:6153.694301, 1661837:2500, 1664752:2101.029915, 1665709:500000, 1665710:500000, 1665711:500000, 1665712:500000, 1665713:500000, 1665714:500000, 1665715:500000, 1665716:500000, 1665717:500000, 1665718:500000, 1665719:500000, 1665721:500000, 1665722:500000, 1665975:1001.508868, 1665978:1084.046683, 1666629:12893.16159, 1666630:12893.16159, 1666631:31531.06543, 1666633:8620.49329, 1666634:10545.83266, 1666635:10545.83266, 1666637:4748.918496, 1666639:19039.5914, 1666640:19039.5914, 1666641:82798.90975, 1666643:58855.77677, 1666644:58855.77677, 1666645:61429.59947, 1666646:12861.87114, 1666650:64752.20256, 1666655:13914.73474, 1667859:13928.83599, 1667860:13928.83599, 1667873:59417.06687, 1667884:7195.22196, 1667885:7195.22196, 1667886:21228.32251, 1667887:28966.00379, 1667888:97739.04297, 1667889:97739.04297, 1667890:97739.04297, 1667891:97739.04297, 1667892:97739.04297, 1667893:69528.21298, 1667894:69528.21298, 1667895:69528.21298, 1667896:10674.37049, 1667901:81171.04407, 1667905:10394.63982, 1667906:54698.89041, 1667907:102432.8895, 1668842:30799.67876, 1668844:59875.25708, 1668857:1332.253523, 1668984:372430.2429, 1669825:90248.41212, 1669826:90248.41212, 1669827:90248.41212, 1669831:62518.52035, 1669832:62518.52035, 1669833:62518.52035, 1669834:62518.52035, 1670685:97633.79961, 1670686:63345.05535, 1671757:54802.89159, 1671771:63218.47641, 1671772:81616.78489, 1671774:25012.2425, 1672724:63797.82223, 1672725:63797.82223, 1672726:63797.82223, 1673210:94157.05103, 1673271:5442.435405, 1673882:86292.12668, 1673884:78531.72096, 1674374:41205.8426, 1674581:10464.24641, 1674582:10464.24641, 1674585:14390.64473, 1675394:24972.42996, 1675395:20358.93439, 1675396:20358.93439, 1675397:20358.93439, 1675398:16747.8901, 1675733:22314.98127, 1675736:11526.19445, 1675737:11526.19445, 1676572:80537.37637, 1678976:46263.21599, 1679375:14002.6593, 1679376:14002.6593, 1679377:14002.6593, 1679378:16921.01573, 1679591:40927.90845, 1679592:40927.90845, 1679687:6717.05393, 1680361:2200.403125, 1684101:59757.36303, 1684103:500000, 1684104:500000, 1684105:500000, 1684106:500000, 1684107:500000, 1684108:500000, 1684109:500000, 1684110:500000, 1684111:500000, 1684114:500000, 1684413:710.639364, 1685100:10000, 1685101:33503.64638, 1685105:12893.16159, 1685106:12404.71188, 1685107:12404.71188, 1685110:9050.400216, 1685111:9050.400216, 1685112:9050.400216, 1685115:13663.58553, 1685116:16329.24344, 1685117:16329.24344, 1685118:35922.40588, 1685119:36402.35867, 1685120:72619.37269, 1685121:19039.5914, 1685123:58855.77677, 1685124:58855.77677, 1685125:58855.77677, 1685126:61429.59947, 1685127:65167.27948, 1685130:18284.80495, 1685134:64752.20256, 1685135:64752.20256, 1685136:24122.30952, 1685151:10000, 1685822:71920.96296, 1685823:71920.96296, 1685825:5000, 1685856:72770.23818, 1686072:15595.73344, 1686083:35685.9158, 1686335:13928.83599, 1686336:13928.83599, 1686339:5000, 1686354:59417.06687, 1686355:59417.06687, 1686357:59417.06687, 1686358:59417.06687, 1686365:7195.22196, 1686366:21228.32251, 1686372:97739.04297, 1686373:97739.04297, 1686374:69528.21298, 1686377:30755.62632, 1686378:30755.62632, 1686380:30755.62632, 1686381:30755.62632, 1686382:30755.62632, 1686383:30755.62632, 1686384:5045.997587, 1686385:5045.997587, 1686387:108353.4219, 1686389:9825.305282, 1686390:9825.305282, 1686391:10394.63982, 1686392:82952.99355, 1686393:42115.89463, 1686394:102432.8895, 1686395:30799.67876, 1686396:30799.67876, 1686397:30799.67876, 1686398:30799.67876, 1687368:72310.99544, 1687550:22957.01004, 1687596:6264.859312, 1688405:90248.41212, 1688406:90248.41212, 1688407:90248.41212, 1688409:62518.52035, 1688410:62518.52035, 1688411:62518.52035, 1690440:81616.78489, 1690441:97539.40956, 1690442:69039.43553, 1690444:22301.39556, 1690445:28479.85731, 1691849:37239.10859, 1691944:20501.45193, 1692015:6302.556027, 1692017:5105.789894, 1692638:88235.56365, 1692639:92339.24093, 1692640:92339.24093, 1692641:52221.93932, 1693112:23918.18529, 1693115:18798.79607, 1693355:6895.962364, 1693356:6895.962364, 1693357:6895.962364, 1693358:10464.24641, 1694182:10257.3363, 1694187:35051.0092, 1694188:24972.42996, 1694189:20358.93439, 1694190:18332.54834, 1694554:88214.08068, 1694557:81748.34622, 1695439:79848.73469, 1695449:58925.1965, 1696774:55274.66039, 1697689:48527.47796, 1697690:103689.2489, 1697691:91355.1871, 1697693:9972.607451, 1697827:46263.21599, 1697830:39881.87571, 1698264:14002.6593, 1698265:14002.6593, 1698266:26677.75398, 1698267:16921.01573, 1698268:16921.01573, 1698269:16921.01573, 1698290:18281.355, 1698503:15843.70113, 1698504:40927.90845, 1702090:100426.8371, 1703070:500000, 1703071:500000, 1703072:500000, 1703073:500000, 1703080:500000, 1703082:500000, 1703083:500000, 1703084:500000, 1703085:500000, 1703086:500000, 1703352:720.492854, 1703353:1094.367789, 1703983:12893.16159, 1703984:12893.16159, 1703985:12893.16159, 1703986:19662.57345, 1703988:7450.759404, 1703989:10545.83266, 1703990:10545.83266, 1703991:10545.83266, 1703992:50001.10928, 1703997:13663.58553, 1703998:16329.24344, 1703999:36402.35867, 1704000:19039.5914, 1704001:83844.68886, 1704002:58855.77677, 1704003:61429.59947, 1704004:65167.27948, 1704005:65167.27948, 1704009:64752.20256, 1704010:47048.1722, 1704016:6231.261158, 1704021:10000, 1704715:140733.4057, 1705262:13928.83599, 1705263:13928.83599, 1705264:53475.66615, 1705279:59417.06687, 1705280:59417.06687, 1705281:59417.06687, 1705290:30995.01945, 1705293:21228.32251, 1705294:21228.32251, 1705295:21228.32251, 1705296:21228.32251, 1705297:21228.32251, 1705303:13406.28435, 1705304:97739.04297, 1705305:97739.04297, 1705306:7408.330003, 1705308:30755.62632, 1705309:30755.62632, 1705310:30755.62632, 1705312:30755.62632, 1705313:5045.997587, 1705315:80252.24464, 1705317:10394.63982, 1705318:10394.63982, 1705320:70252.00147, 1705321:30799.67876, 1705322:30799.67876, 1705984:16633.29997, 1706729:43179.62755, 1706730:20113.49884, 1706731:9481.405833, 1706732:19491.77175, 1707320:90248.41212, 1707323:62518.52035, 1707324:62518.52035, 1707325:62518.52035, 1708204:97633.79961, 1708380:8677.512023, 1710605:9926.211586, 1710764:5279.460565, 1711344:86292.12668, 1711345:86292.12668, 1711346:86292.12668, 1711347:86292.12668, 1711348:92339.24093, 1711349:52221.93932, 1711350:52221.93932, 1712060:6895.962364, 1712061:10464.24641, 1712062:10464.24641, 1712903:20358.93439, 1712904:20358.93439, 1712905:20358.93439, 1713275:100891.0679, 1714234:80537.37637, 1714311:22351.06953, 1716484:78986.24702, 1716486:70643.40898, 1716639:67313.82399, 1717060:14002.6593, 1717062:17612.0373, 1717063:16921.01573, 1717262:40927.90845, 1717263:40927.90845, 1717337:5000, 1717963:2500, 1718034:30164.0238, 1718041:40631.61911, 1718047:14728.06931, 1719311:3136.538997, 1719805:15247.42735, 1719808:5067.322167, 1720867:23053.02314, 1721862:500000, 1721863:500000, 1721864:500000, 1721865:500000, 1721866:500000, 1721867:500000, 1721868:500000, 1721869:500000, 1721870:500000, 1721871:500000, 1721872:500000, 1721873:500000, 1721874:500000, 1721875:500000, 1721876:500000, 1721877:500000, 1721878:500000, 1722156:726.95792, 1722830:19667.2286, 1722831:33503.64638, 1722832:9632.081834, 1722835:38017.36451, 1722842:12516.8845399999, 1722843:12893.16159, 1722844:12893.16159, 1722845:12893.16159, 1722846:12404.71188, 1722847:12404.71188, 1722850:9050.400216, 1722852:10545.83266, 1722854:13663.58553, 1722855:16329.24344, 1722856:16329.24344, 1722857:35922.40588, 1722858:19039.5914, 1722859:19039.5914, 1722862:58855.77677, 1722863:58855.77677, 1722864:61429.59947, 1722865:65167.27948, 1722867:64752.20256, 1722868:64752.20256, 1722869:71226.93918, 1722870:14174.53366, 1722872:45861.5624, 1722873:4247.98209, 1722874:40622.53271, 1722882:6000, 1722883:6000, 1723055:55059.00152, 1723517:23165.15028, 1723521:71920.96296, 1723768:15595.73344, 1724083:59417.06687, 1724092:30995.01945, 1724093:7195.22196, 1724094:7195.22196, 1724095:21228.32251, 1724096:21228.32251, 1724103:97739.04297, 1724110:30755.62632, 1724111:30755.62632, 1724112:30755.62632, 1724113:30755.62632, 1724114:30755.62632, 1724115:30755.62632, 1724116:30755.62632, 1724117:108353.4219, 1724119:10394.63982, 1724121:42115.89463, 1724123:30799.67876, 1724535:987.081361, 1725083:42558.41251, 1725102:983.18579, 1726111:62518.52035, 1726112:62518.52035, 1726113:62518.52035, 1726997:19855.93291, 1729095:63797.82223, 1729468:13610.46107, 1729470:9926.211586, 1729471:9926.211586, 1729640:6302.556027, 1729645:6078.663944, 1730279:88235.56365, 1730285:86292.12668, 1730286:86292.12668, 1730288:92339.24093, 1730290:52221.93932, 1730291:52221.93932, 1730292:52221.93932, 1730293:52221.93932, 1730294:52221.93932, 1730296:68704.28669, 1730803:42053.6228899999, 1731012:15527.00425, 1731805:20172.291, 1731806:24972.42996, 1731807:20358.93439, 1731810:26713.77919, 1733083:79848.73469, 1734467:55274.66039, 1735325:101670.3729, 1735462:51460.4625, 1735467:46263.21599, 1735868:14002.6593, 1735869:14002.6593, 1735870:14002.6593, 1735871:17612.0373, 1735872:17612.0373, 1735873:17612.0373, 1736849:2402.696854, 1740539:500000, 1740540:500000, 1740541:500000, 1740542:500000, 1740543:500000, 1740544:500000, 1740545:500000, 1740546:500000, 1740547:500000, 1740548:500000, 1740549:500000, 1740550:500000, 1740551:500000, 1740552:500000, 1740553:500000, 1740830:1093.770255, 1741538:11617.58094, 1741549:12893.16159, 1741550:12893.16159, 1741551:12893.16159, 1741552:12404.71188, 1741553:12404.71188, 1741556:40348.62993, 1741557:9050.400216, 1741558:9050.400216, 1741559:9050.400216, 1741560:9050.400216, 1741562:50001.10928, 1741563:50001.10928, 1741564:36085.79628, 1741567:71813.73496, 1741568:13663.58553, 1741571:36402.35867, 1741572:19303.05273, 1741573:19039.5914, 1741574:19039.5914, 1741575:19039.5914, 1741576:19039.5914, 1741582:58855.77677, 1741583:61429.59947, 1741594:45861.5624, 1741595:6270.587017, 1741596:14909.42615, 1741598:11831.02788, 1741602:10000, 1742795:5000, 1742814:59417.06687, 1742815:59417.06687, 1742821:30995.01945, 1742823:21228.32251, 1742824:21228.32251, 1742825:5631.267787, 1742832:97739.04297, 1742833:97739.04297, 1742834:69528.21298, 1742835:69528.21298, 1742841:30755.62632, 1742845:30755.62632, 1744016:83965.91438, 1744809:90248.41212, 1744810:90248.41212, 1744811:90248.41212, 1744812:90248.41212, 1744816:62518.52035, 1744817:62518.52035, 1744818:62518.52035, 1745632:97633.79961, 1745637:22346.7547, 1745638:38921.60814, 1747586:63797.82223, 1747588:63797.82223, 1747958:9926.211586, 1747959:6188.404325, 1748120:7169.55521, 1748121:6302.556027, 1748122:11406.9813, 1748128:6078.663944, 1748703:52221.93932, 1749205:441.943425, 1749408:6895.962364, 1749409:6895.962364, 1749410:24733.82179, 1749413:18663.13912, 1749414:15527.00425, 1750257:20172.291, 1750262:23244.78787, 1750263:17493.0423799999, 1750264:4658.518537, 1752617:666.004521, 1753633:16252.15988, 1753773:30451.89638, 1754182:14002.6593, 1754183:14002.6593, 1754185:16921.01573, 1754388:40927.90845, 1754490:6717.05393, 1754552:66444.1041, 1755055:2500, 1755139:3657.392343, 1755140:3657.392343, 1756412:48104.09241, 1757395:2636.769128, 1758887:500000, 1758888:500000, 1758889:500000, 1758890:500000, 1758891:500000, 1758892:500000, 1758893:500000, 1758894:500000, 1758895:500000, 1758896:500000, 1758897:500000, 1758898:500000, 1758899:500000, 1758900:500000, 1758901:500000, 1758902:500000, 1758903:500000, 1758904:500000, 1758905:500000, 1759209:1007.628504, 1759858:19667.2286, 1759859:22563.95542, 1759862:12893.16159, 1759863:12893.16159, 1759864:12404.71188, 1759867:9050.400216, 1759868:10545.83266, 1759869:10545.83266, 1759870:10545.83266, 1759871:50001.10928, 1759873:36085.79628, 1759876:35922.40588, 1759877:35922.40588, 1759878:35922.40588, 1759879:36402.35867, 1759880:19039.5914, 1759881:19039.5914, 1759882:19039.5914, 1759883:82798.90975, 1759885:58855.77677, 1759886:58855.77677, 1759891:64752.20256, 1759892:15957.28939, 1759899:11831.02788, 1759904:6000, 1760096:76096.0567, 1760594:28116.50364, 1761105:13928.83599, 1761108:61497.50619, 1761132:59417.06687, 1761133:59417.06687, 1761147:30995.01945, 1761149:7195.22196, 1761150:21228.32251, 1761151:21228.32251, 1761152:21228.32251, 1761155:97739.04297, 1761156:97739.04297, 1761157:97739.04297, 1761161:30755.62632, 1761162:30755.62632, 1761163:30755.62632, 1761168:5045.997587, 1761169:5045.997587, 1761171:82952.99355, 1761172:82952.99355, 1761173:82952.99355, 1761174:42115.89463, 1761175:42115.89463, 1761176:42115.89463, 1761177:42115.89463, 1761182:70252.00147, 1761184:30799.67876, 1762066:22115.91348, 1762331:45826.72704, 1763169:90248.41212, 1763170:90248.41212, 1763171:90248.41212, 1763172:90248.41212, 1763173:90248.41212, 1763174:90248.41212, 1764050:5174.233218, 1765175:53216.22442, 1765177:8341.970759, 1765180:100770.0349, 1766672:8731.462934, 1766674:6222.842425, 1767294:86292.12668, 1767295:86292.12668, 1767296:92339.24093, 1767297:52221.93932, 1767803:502.269669, 1767978:6895.962364, 1767982:38094.92788, 1768765:20172.291, 1768766:20172.291, 1768767:24972.42996, 1770336:2957.348295, 1771380:79999.32962, 1772279:77113.23982, 1772281:61225.32316, 1772410:65729.3567, 1772411:65729.3567, 1772814:14002.6593, 1772815:14002.6593, 1772816:14002.6593, 1772818:17612.0373, 1772819:16921.01573, 1772820:16921.01573, 1773078:6592.533314, 1773115:5000, 1773146:6268.910828, 1773231:90720.67483, 1773232:36568.28851, 1773828:14728.06931, 1773829:14728.06931, 1773830:14728.06931, 1773834:3657.392343, 1773835:3657.392343, 1773836:3657.392343, 1775128:2261.111173, 1775621:23214.60787, 1776586:9087.801158, 1776716:847.48452, 1777609:500000, 1777610:500000, 1777612:500000, 1777613:500000, 1777615:500000, 1777616:500000, 1777617:500000, 1777618:500000, 1777619:500000, 1777620:500000, 1777621:500000, 1777622:500000, 1777623:500000, 1777624:500000, 1777625:500000, 1777891:423.117119, 1777893:544.747529, 1777897:620.703755, 1777900:706.309173, 1778546:12893.16159, 1778547:12404.71188, 1778549:10545.83266, 1778550:56095.84686, 1778551:57668.32279, 1778552:4748.918496, 1778553:1819.729781, 1778554:16329.24344, 1778555:16329.24344, 1778556:16329.24344, 1778557:16329.24344, 1778559:71725.54218, 1778560:35922.40588, 1778561:19039.5914, 1778564:82798.90975, 1778566:61429.59947, 1778570:64752.20256, 1778573:29851.77189, 1778589:12078.45053, 1778590:6000, 1778591:6000, 1778592:6000, 1778789:76096.0567, 1779285:28116.50364, 1779287:35102.99044, 1779293:72770.23818, 1779544:35685.9158, 1779834:61497.50619, 1779853:59417.06687, 1779854:59417.06687, 1779855:59417.06687, 1779866:9974.749732, 1779868:7195.22196, 1779869:7195.22196, 1779870:7195.22196, 1779876:38043.27225, 1779884:5052.559792, 1779885:30755.62632, 1779886:30755.62632, 1779887:30755.62632, 1779888:30755.62632, 1779889:30755.62632, 1779890:30755.62632, 1779891:30755.62632, 1779892:5045.997587, 1779895:75907.64794, 1779897:9825.305282, 1779898:10394.63982, 1779899:82952.99355, 1779900:65752.11637, 1779903:30799.67876, 1779904:30799.67876, 1780344:3975.45984, 1781065:45826.72704, 1781975:90248.41212, 1781976:90248.41212, 1781977:90248.41212, 1781978:90248.41212, 1781981:62518.52035, 1782319:55647.38087, 1782320:106225.1993, 1782857:63087.70641, 1784044:59395.19588, 1784045:28951.68813, 1785013:63797.82223, 1785015:63797.82223, 1785016:63797.82223, 1785574:6302.556027, 1785576:11905.34418, 1785577:47642.32417, 1786201:86292.12668, 1786754:14223.96686, 1786956:14390.64473, 1786958:15527.00425, 1787778:93003.20358, 1787781:24972.42996, 1787785:26713.77919, 1789043:79848.73469, 1790395:79999.32962}

            for parcel_id in list(parcels_to_impute_sqft.keys()):
                non_res_sqft = parcels_to_impute_sqft[parcel_id]
                idx_building_to_impute_sqft =  where((building_set['building_type_id']==8)*(building_set['parcel_id']==parcel_id)*(building_set['non_residential_sqft']<1))[0]
                if idx_building_to_impute_sqft.size ==0:
                    logger.log_status("no warehouses with missing sqft in parcel id %s" %(parcel_id))
                else:
                    shuffle(idx_building_to_impute_sqft)
                    idx_building = idx_building_to_impute_sqft[:1]
                    building_set.modify_attribute('non_residential_sqft', non_res_sqft, idx_building)

            solano_warehouse_sqft = (building_set['non_residential_sqft'])*(building_set['building_type_id']==8)*(building_county==48)

            logger.log_status("solano_warehouse_sqft: %s" %(solano_warehouse_sqft.sum()))
                    

        # county_pop = zone_set.compute_variables('_county_pop = zone.aggregate(parcel.disaggregate(county.aggregate(household.persons,intermediates=[building,parcel])),function=median)')
        
        # #zone_set.add_primary_attribute(name='county_pop', data=county_pop)

        # regional_pop = zone_set.compute_variables('_regional_pop = zone.disaggregate(alldata.aggregate_all(household.persons))')
        
        # #zone_set.add_primary_attribute(name='regional_pop', data=regional_pop)

        # local_gov_jobs = zone_set.compute_variables('_local_gov_jobs = zone._zone_pop * zone.disaggregate(zone_gov_ed_job.local_gov)')

        # local_ed_k12_jobs = zone_set.compute_variables('_ed_k12 = zone._zone_pop * zone.disaggregate(zone_gov_ed_job.ed_k12)')

        # county_gov_jobs = zone_set.compute_variables('_county_gov_jobs = zone._county_pop * zone.disaggregate(zone_gov_ed_job.county_gov)')
        
        # #county_gov_job_coeff = zone_set.compute_variables('_county_gov_job_coeff = zone.disaggregate(zone_gov_ed_job.county_gov)')
        
        # #zone_set.add_primary_attribute(name='county_gov_jobs', data=county_gov_jobs)
        
        # #zone_set.add_primary_attribute(name='county_gov_job_coeff', data=county_gov_job_coeff)

        # state_gov_jobs = zone_set.compute_variables('_state_gov_jobs = zone._regional_pop * zone.disaggregate(zone_gov_ed_job.state_gov)')

        # fed_gov_jobs = zone_set.compute_variables('_fed_gov_jobs = zone._regional_pop * zone.disaggregate(zone_gov_ed_job.fed_gov)')

        # ed_high_jobs = zone_set.compute_variables('_ed_high_jobs = zone._regional_pop * zone.disaggregate(zone_gov_ed_job.ed_high)')
        
        # gov_jobs =  zone_set.compute_variables('_gov_jobs = _local_gov_jobs + _county_gov_jobs + _state_gov_jobs + _fed_gov_jobs')
        
        # edu_jobs =  zone_set.compute_variables('_ed_jobs = _ed_k12 + _ed_high_jobs')
        
        # current_year = SimulationState().get_current_time()
        # base_year = '2010'
        # base_cache_storage = AttributeCache().get_flt_storage_for_year(base_year)
        # control_totals = ControlTotalDataset(in_storage=base_cache_storage, in_table_name="annual_business_control_totals")
        # number_of_jobs = control_totals.get_attribute("total_number_of_jobs")
        
        # idx_current_edother = where(logical_and(control_totals.get_attribute("year")==current_year,control_totals.get_attribute("sector_id")==618320))[0]
        # jobs_current_edother = number_of_jobs[idx_current_edother].sum()
        
        # idx_current_edhigh = where(logical_and(control_totals.get_attribute("year")==current_year,control_totals.get_attribute("sector_id")==618330))[0]
        # jobs_current_edhigh = number_of_jobs[idx_current_edhigh].sum()
        
        # idx_current_edk12 = where(logical_and(control_totals.get_attribute("year")==current_year,control_totals.get_attribute("sector_id")==618340))[0]
        # jobs_current_edk12 = number_of_jobs[idx_current_edk12].sum()
        
        # idx_current_gov = where(logical_and(control_totals.get_attribute("year")==current_year,control_totals.get_attribute("sector_id")==618319))[0]
        # total_gov_jobs = number_of_jobs[idx_current_gov].sum()
        
        # total_edu_jobs = jobs_current_edother + jobs_current_edhigh + jobs_current_edk12
        
        # gov_scaling_ratio=total_gov_jobs*1.0/gov_jobs.sum()
        
        # edu_scaling_ratio=total_edu_jobs*1.0/edu_jobs.sum()
        
        # gov_jobs = around(gov_jobs*gov_scaling_ratio)
        
        # edu_jobs = around(edu_jobs*edu_scaling_ratio)
        
        # zone_set.add_primary_attribute(name='gov_jobs', data=gov_jobs)

        # zone_set.add_primary_attribute(name='edu_jobs', data=edu_jobs)