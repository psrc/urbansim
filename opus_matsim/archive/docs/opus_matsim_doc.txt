(0) Note: There is the opus source tree, and the opus data directory.
The first is where all the python code it; the second is where
${OPUS_HOME} points to.

(1) Download opus_matsim-yyyy-mm-dd-hhmm.tgz from ... somewhere ... and
move it into ${OPUS_HOME}.

(2) Go into ${OPUS_HOME} and type

  tar zxvf opus_matsim-yyyy-mm-dd-hhmm.tgz

After that, you should have an opus_matsim directory, with subdirectories

  data          [[scenario input data]]
  matsim_config [[matsim config files]]
  bin           [[binaries]]
  classes       [[java classes that go beyond standard matsim]]
  jar           [[empty]]

(3) Download MATSim_libs_rXXXX.zip and MATSIM_rYYYY.jar from
www.matsim.org, on the "nightly builds" www page, and move it into
${OPUS_HOME}/opus_matsim/jar .

(4) Go into ${OPUS_HOME}/opus_matsim/jar and type

  unzip MATSim_libs_rXXXX.zip
  ln -s MATSim_rYYYY.jar MATSim.jar

Afterwards, you should have

   .../opus_matsim/jar/MATSim.jar  [[as symbolic link]]
   .../opus_matsim/jar/MATSim_rYYYY.jar
   .../opus_matsim/jar/libs/...    [[lots of *.jar files]]

(5) Go into the opus source tree, into opus_matsim/tests, and
python-run tests.py.  

That runs a meaningless test scenario, and should run without errors.

(6) Go into the opus source tree, into opus_matsim/configs.  You
should be able to python-run start_run.py, or to run seattle_parcel.xml.


